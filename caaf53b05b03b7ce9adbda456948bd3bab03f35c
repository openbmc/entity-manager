{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "26fecf61_31607762",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-04-17T08:28:00Z",
      "side": 1,
      "message": "Maybe not perfect but perhaps good enough for the specialized use-case.",
      "revId": "caaf53b05b03b7ce9adbda456948bd3bab03f35c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "828839c6_6baa0ae0",
        "filename": "schemas/firmware.json",
        "patchSetId": 12
      },
      "lineNbr": 95,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-04-17T18:57:22Z",
      "side": 1,
      "message": "nit: change fw to firmware",
      "revId": "caaf53b05b03b7ce9adbda456948bd3bab03f35c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d57821fc_9dda6287",
        "filename": "schemas/firmware.json",
        "patchSetId": 12
      },
      "lineNbr": 95,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-04-22T10:08:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "828839c6_6baa0ae0",
      "revId": "caaf53b05b03b7ce9adbda456948bd3bab03f35c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52b0f8b3_1239bf86",
        "filename": "schemas/firmware.json",
        "patchSetId": 12
      },
      "lineNbr": 117,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-04-17T20:15:24Z",
      "side": 1,
      "message": "This pattern of creating a top level type then a subtype is an anti pattern.   we do it in cases where it truly is (at a spec level) a sub type, but just declaring all the appropriate types at the top level seems to be much easier to maintain (from the last time we did this eeprom thing).",
      "revId": "caaf53b05b03b7ce9adbda456948bd3bab03f35c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e8ebef30_ac893c82",
        "filename": "schemas/firmware.json",
        "patchSetId": 12
      },
      "lineNbr": 117,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-04-25T08:55:53Z",
      "side": 1,
      "message": "Understood. Moved to the top level.",
      "parentUuid": "52b0f8b3_1239bf86",
      "revId": "caaf53b05b03b7ce9adbda456948bd3bab03f35c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6da0a511_f40b915d",
        "filename": "schemas/firmware.json",
        "patchSetId": 12
      },
      "lineNbr": 120,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-04-17T20:14:04Z",
      "side": 1,
      "message": "Remove.  This should be the top level type\n\n{\n   Type: \"EEPROMpt5161l\"\n}",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 120,
        "endChar": 25
      },
      "revId": "caaf53b05b03b7ce9adbda456948bd3bab03f35c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f830dd5_b842f702",
        "filename": "schemas/firmware.json",
        "patchSetId": 12
      },
      "lineNbr": 120,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-04-25T08:55:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6da0a511_f40b915d",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 120,
        "endChar": 25
      },
      "revId": "caaf53b05b03b7ce9adbda456948bd3bab03f35c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10730c1a_285959d2",
        "filename": "schemas/firmware.json",
        "patchSetId": 12
      },
      "lineNbr": 124,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-04-17T20:14:04Z",
      "side": 1,
      "message": "Please follow the pattern for other i2c devices.  Bus and Address are included in the top level",
      "range": {
        "startLine": 124,
        "startChar": 0,
        "endLine": 124,
        "endChar": 31
      },
      "revId": "caaf53b05b03b7ce9adbda456948bd3bab03f35c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d3679b3_a75fae4d",
        "filename": "schemas/firmware.json",
        "patchSetId": 12
      },
      "lineNbr": 124,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-04-25T08:55:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "10730c1a_285959d2",
      "range": {
        "startLine": 124,
        "startChar": 0,
        "endLine": 124,
        "endChar": 31
      },
      "revId": "caaf53b05b03b7ce9adbda456948bd3bab03f35c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8725297_d58d936e",
        "filename": "schemas/firmware.json",
        "patchSetId": 12
      },
      "lineNbr": 136,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-04-17T20:14:04Z",
      "side": 1,
      "message": "This type is already covered in EM configs. \n\nhttps://github.com/openbmc/entity-manager/blob/79b2075688eac9fabf3c2e9e2f2346ffb7a1fd2c/src/devices.hpp#L69\n\nPlease use those definitions.",
      "range": {
        "startLine": 136,
        "startChar": 0,
        "endLine": 136,
        "endChar": 44
      },
      "revId": "caaf53b05b03b7ce9adbda456948bd3bab03f35c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f64b6fe6_27e10062",
        "filename": "schemas/firmware.json",
        "patchSetId": 12
      },
      "lineNbr": 136,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-04-25T08:55:53Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "f8725297_d58d936e",
      "range": {
        "startLine": 136,
        "startChar": 0,
        "endLine": 136,
        "endChar": 44
      },
      "revId": "caaf53b05b03b7ce9adbda456948bd3bab03f35c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3a20c0f_8a51d1ce",
        "filename": "schemas/firmware.json",
        "patchSetId": 12
      },
      "lineNbr": 142,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-04-17T18:57:22Z",
      "side": 1,
      "message": "change `values` to `polarities`",
      "revId": "caaf53b05b03b7ce9adbda456948bd3bab03f35c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd85795c_c1334d95",
        "filename": "schemas/firmware.json",
        "patchSetId": 12
      },
      "lineNbr": 142,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-04-17T20:14:04Z",
      "side": 1,
      "message": "Any reason functionally this is an array?  Do real systems need to flip multiple GPIOs to select a chip?",
      "parentUuid": "f3a20c0f_8a51d1ce",
      "revId": "caaf53b05b03b7ce9adbda456948bd3bab03f35c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "baba1077_d686559c",
        "filename": "schemas/firmware.json",
        "patchSetId": 12
      },
      "lineNbr": 142,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-04-22T10:08:19Z",
      "side": 1,
      "message": "Yes. In real systems, some scenarios need to flip multiple GPIOs.",
      "parentUuid": "fd85795c_c1334d95",
      "revId": "caaf53b05b03b7ce9adbda456948bd3bab03f35c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b5ebc4d_4bf3b328",
        "filename": "schemas/firmware.json",
        "patchSetId": 12
      },
      "lineNbr": 166,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-04-17T18:57:22Z",
      "side": 1,
      "message": "Missing MuxOutputs in required list.",
      "revId": "caaf53b05b03b7ce9adbda456948bd3bab03f35c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f6e3fd2_e047b946",
        "filename": "schemas/firmware.json",
        "patchSetId": 12
      },
      "lineNbr": 166,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-04-17T20:14:04Z",
      "side": 1,
      "message": "MuxOutputs shouldn\u0027t be required.  Not all designs require it.",
      "parentUuid": "0b5ebc4d_4bf3b328",
      "revId": "caaf53b05b03b7ce9adbda456948bd3bab03f35c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5870f8c0_459edcef",
        "filename": "schemas/firmware.json",
        "patchSetId": 12
      },
      "lineNbr": 166,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-04-22T10:08:19Z",
      "side": 1,
      "message": "Yes, the design doesn\u0027t require MuxOutputs.",
      "parentUuid": "9f6e3fd2_e047b946",
      "revId": "caaf53b05b03b7ce9adbda456948bd3bab03f35c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}