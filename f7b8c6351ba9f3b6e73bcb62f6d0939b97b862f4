{
  "comments": [
    {
      "key": {
        "uuid": "55ca438b_36cd8a30",
        "filename": "test/test_entity-manager.cpp",
        "patchSetId": 6
      },
      "lineNbr": 119,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-11-13T18:21:12Z",
      "side": 0,
      "message": "Why are all the characters getting replaced with the word \"multiply\"?  Same goes for all other characters.  What was there previously looked correct, what\u0027s in the patch looks incorrect.",
      "range": {
        "startLine": 119,
        "startChar": 35,
        "endLine": 119,
        "endChar": 36
      },
      "revId": "f7b8c6351ba9f3b6e73bcb62f6d0939b97b862f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce5b4c77_faa8b961",
        "filename": "test/test_entity-manager.cpp",
        "patchSetId": 6
      },
      "lineNbr": 119,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-11-18T21:06:29Z",
      "side": 0,
      "message": "This is a sentence which turns into expression and we are not expecting to execute first part of this sentence that\u0027s why we are writing in actual english and executing second part to verify. It has been done in many other tests and it should be this way.",
      "parentUuid": "55ca438b_36cd8a30",
      "range": {
        "startLine": 119,
        "startChar": 35,
        "endLine": 119,
        "endChar": 36
      },
      "revId": "f7b8c6351ba9f3b6e73bcb62f6d0939b97b862f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50feaee7_8607af06",
        "filename": "test/test_entity-manager.cpp",
        "patchSetId": 6
      },
      "lineNbr": 119,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-11-18T21:39:59Z",
      "side": 0,
      "message": "\u003e This is a sentence which turns into expression and we are not expecting to execute first part of this sentence that\u0027s why we are writing in actual english and executing second part to verify.\n\nThis doesn\u0027t explain the behavior.  A user should be able to type \"3 * 2\" and get 6.  \"3 multiply 2\" should compute to \"3 multiply 2\"\n\n\u003e It has been done in many other tests and it should be this way.\n\nNot according to the user documentation, or the examples of config files that we have in the repo.",
      "parentUuid": "ce5b4c77_faa8b961",
      "range": {
        "startLine": 119,
        "startChar": 35,
        "endLine": 119,
        "endChar": 36
      },
      "revId": "f7b8c6351ba9f3b6e73bcb62f6d0939b97b862f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7d2f064_509d8945",
        "filename": "test/test_entity-manager.cpp",
        "patchSetId": 6
      },
      "lineNbr": 119,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2021-11-19T18:01:27Z",
      "side": 0,
      "message": "Is this change necessary because with the new real parser it will actually do the math and parse \" 3 * 2 \" to 6?\nI believe the existing templateCharReplace would leave \"3 * 2\" as is and only do math if it is an expression with template, i.e. $TEST + 3 * 2. \n\nI don\u0027t see any real requirement for parsing any valid math expression with no template char like \"3 * 2\". Having said that, I am not sure existing configurations actually have such expressions.",
      "parentUuid": "50feaee7_8607af06",
      "range": {
        "startLine": 119,
        "startChar": 35,
        "endLine": 119,
        "endChar": 36
      },
      "revId": "f7b8c6351ba9f3b6e73bcb62f6d0939b97b862f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08ad8e4e_ec5974bf",
        "filename": "test/test_entity-manager.cpp",
        "patchSetId": 6
      },
      "lineNbr": 119,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-11-19T18:30:59Z",
      "side": 0,
      "message": "\u003e Is this change necessary because with the new real parser it will actually do the math and parse \" 3 * 2 \" to 6?\n\u003e I believe the existing templateCharReplace would leave \"3 * 2\" as is and only do math if it is an expression with template, i.e. $TEST + 3 * 2. \n\u003e \n\u003e I don\u0027t see any real requirement for parsing any valid math expression with no template char like \"3 * 2\". Having said that, I am not sure existing configurations actually have such expressions.\n\nNone of the existing expressions have that, so in terms of backward compatibility, we\u0027re there.  We could enforce that the math only operates on template expressions, but that seems like something arbitrary and a lot of work that doesn\u0027t have a net benefit, so I\u0027m fine the with behavior of \"3 * 2\" computes to 6.  What I don\u0027t want is to require \"3 multiply 2\" to compute to 6.  That seems messy and subtle.",
      "parentUuid": "e7d2f064_509d8945",
      "range": {
        "startLine": 119,
        "startChar": 35,
        "endLine": 119,
        "endChar": 36
      },
      "revId": "f7b8c6351ba9f3b6e73bcb62f6d0939b97b862f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35a66fdd_c4e23e9e",
        "filename": "test/test_entity-manager.cpp",
        "patchSetId": 6
      },
      "lineNbr": 119,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-11-23T22:09:04Z",
      "side": 0,
      "message": "I guess we are not getting main point here. We are not asking to compute \"3 multiply 2\", it is a sentence and we don\u0027t want to compute this. We want to do computation on \"$Test * 2\" and final string should return back \" 3 multiply 2 equals 6\" if we pass \"3 * 2 equals $test * 2\" then it will return \"6 equals 6\" with new parser.\n\nSo in summary, current parser doesn\u0027t so \"3 multiply 2\", it is a just a sentence.",
      "parentUuid": "08ad8e4e_ec5974bf",
      "range": {
        "startLine": 119,
        "startChar": 35,
        "endLine": 119,
        "endChar": 36
      },
      "revId": "f7b8c6351ba9f3b6e73bcb62f6d0939b97b862f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}