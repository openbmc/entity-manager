{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9bc3b592_4db23d1a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T18:43:35Z",
      "side": 1,
      "message": "How would this work in practice?\n\nDevice gets detected and assigned 0x01 from the dynamic pool\nDevice 2 (which has StaticEndpointID) gets detected and requests EID 0x01.  Would we separate the pools?",
      "revId": "a6088460414d414906a472e4e3089087d729ee49",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "810f1ddb_b32a4091",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-12-04T22:31:39Z",
      "side": 1,
      "message": "I\u0027m not as familiar with the underlying systems as I\u0027d like (yet), but could a 2-pass solution for assigning EIDs make sense here? \n\nFirst pass handles records with specific EID request, and next pass handles everything not assigned in the fist pass?",
      "parentUuid": "9bc3b592_4db23d1a",
      "revId": "a6088460414d414906a472e4e3089087d729ee49",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f6fc509_b0665432",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1000338
      },
      "writtenOn": "2024-12-16T09:31:06Z",
      "side": 1,
      "message": "A two-pass solution would only work if we were only applying configurations once, right? (That is, not when interfaces may come and go dynamically), I wonder if static vs dynamic assignment of EIDs should just be controller via a \"any one of the two, but not both\" kind of a policy.",
      "parentUuid": "810f1ddb_b32a4091",
      "revId": "a6088460414d414906a472e4e3089087d729ee49",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9e43d57_8dc75029",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2025-02-14T05:11:44Z",
      "side": 1,
      "message": "\u003e How would this work in practice?\n\nI\u0027d propose that this should be handled entirely by the dynamic address allocation mechanism (in our case, mctpd).\n\nSpecifically, `mctpd`\u0027s own configuration should specify the dynamic pool for EID allocation, which should be predefined to avoid any platform static EIDs.\n\nIn any case, the `AssignEndpointStatic` call will fail if a static EID would conflict.",
      "parentUuid": "4f6fc509_b0665432",
      "revId": "a6088460414d414906a472e4e3089087d729ee49",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b534bdc_f1fa2427",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-02-17T03:59:43Z",
      "side": 1,
      "message": "Yes, agree with @jk@ozlabs.org here. It seems a sensible pre-condition that mctpd be configured with the dynamic pool from which to draw EIDs before any are assigned. I expect we can set things up so the pool can be configured over D-Bus (or through mctpd-specific configuration files), and then enumeration and assignment can follow.",
      "parentUuid": "b9e43d57_8dc75029",
      "revId": "a6088460414d414906a472e4e3089087d729ee49",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}