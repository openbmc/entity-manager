{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8d6110e8_33b1931f",
        "filename": "src/gpio-presence/device_presence.cpp",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-08-22T08:50:14Z",
      "side": 1,
      "message": "Fixes like this will likely eventually be undone by someone looking to simplify the code (and not understanding why we do not put the right name directly on construction).\n\nCan you modify entity-manager instead to also listen for `InterfacesAdded` and `InterfacesRemoved` signals on the interfaces it probes on?",
      "revId": "a6535cb3ced77d44c9d311f93a71f057055b0e79",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc5690fc_f6112cd0",
        "filename": "src/gpio-presence/device_presence.cpp",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1002520
      },
      "writtenOn": "2025-08-25T01:47:30Z",
      "side": 1,
      "message": "@alexander.hansen@9elements.com Thanks for sharing your experience. Yes, that happens a lot. I’ll try to fix this issue on the entity-manager side, which makes more sense and should prevent future confusion.",
      "parentUuid": "8d6110e8_33b1931f",
      "revId": "a6535cb3ced77d44c9d311f93a71f057055b0e79",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "43637016_17b34c1e",
        "filename": "src/gpio-presence/device_presence.cpp",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1002520
      },
      "writtenOn": "2025-08-26T13:11:14Z",
      "side": 1,
      "message": "Entity-manager already has InterfacesAdded and InterfacesRemoved listeners. However, after adding debug logs, I saw the interface check always failed, so these listeners didn’t behave as expected.\n\nSince `std::set_intersection` requires ordered containers, using it with `unordered_set` caused the check to always fail and caused the signal to be dropped every time. I refactored the snippet to make it simpler and clearer.\n\nRoot cause:\n```bash\n\u003c7\u003e interfacesRemovedMatch: sender\u003d:1.1013716 member\u003dInterfacesRemoved path\u003d/ interface\u003dorg.freedesktop.DBus.ObjectManager\n\u003c7\u003e irContainsProbeInterface:\n\u003c7\u003e \u003e\u003e interfaces: xyz.openbmc_project.Inventory.Source.DevicePresence\n\u003c7\u003e \u003e\u003e probeInterfaces: xyz.openbmc_project.Ipmb.FruDevice, xyz.openbmc_project.Inventory.Item, xyz.openbmc_project.Inventory.Decorator.Revision, xyz.openbmc_project.Inventory.Source.DevicePresence, com.ibm.ipzvpd.VSYS, xyz.openbmc_project.Inventory.Item.Board, xyz.openbmc_project.Inventory.Decorator.Asset, com.ibm.ipzvpd.VINI, com.ibm.ipzvpd.VSBP, xyz.openbmc_project.FruDevice\n\u003c7\u003e \u003e\u003e intersect.empty(): True\n\u003c7\u003e interfacesRemovedMatch does not contain probe interface\n\u003c7\u003e interfacesAddedMatch: sender\u003d:1.1013716 member\u003dInterfacesAdded path\u003d/ interface\u003dorg.freedesktop.DBus.ObjectManager\n\u003c7\u003e iaContainsProbeInterface:\n\u003c7\u003e \u003e\u003e interfaces: xyz.openbmc_project.Inventory.Source.DevicePresence\n\u003c7\u003e \u003e\u003e probeInterfaces: xyz.openbmc_project.Ipmb.FruDevice, xyz.openbmc_project.Inventory.Item, xyz.openbmc_project.Inventory.Decorator.Revision, xyz.openbmc_project.Inventory.Source.DevicePresence, com.ibm.ipzvpd.VSYS, xyz.openbmc_project.Inventory.Item.Board, xyz.openbmc_project.Inventory.Decorator.Asset, com.ibm.ipzvpd.VINI, com.ibm.ipzvpd.VSBP, xyz.openbmc_project.FruDevice\n\u003c7\u003e \u003e\u003e intersect.empty(): True\n\u003c7\u003e interfacesAddedMatch does not contain probe interface\n```\n\nCould you have a look at my new update when you have time?",
      "parentUuid": "bc5690fc_f6112cd0",
      "revId": "a6535cb3ced77d44c9d311f93a71f057055b0e79",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "063b765c_ea85038b",
        "filename": "src/gpio-presence/device_presence.cpp",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-08-26T16:19:02Z",
      "side": 1,
      "message": "\u003e Could you have a look at my new update when you have time?\n\nSure, my main feedback is that the handlers for intf added and intf removed can have separate functions, which Matt already said.\n\nOtherwise the fix looks good to me.\n\nFor the commit message, maybe\nyou can add your comments here to commit message to make it clearer, since not everyone is aware of preconditions for `set_intersection`.\n\n\u003e Entity-manager already has InterfacesAdded and InterfacesRemoved listeners. However, after adding debug logs, I saw the interface check always failed, so these listeners didn’t behave as expected.\n\n\u003e Since std::set_intersection requires ordered containers, using it with unordered_set caused the check to always fail and caused the signal to be dropped every time. I refactored the snippet to make it simpler and clearer.\n\nMakes complete sense, we can link to \nhttps://en.cppreference.com/w/cpp/algorithm/set_intersection.html",
      "parentUuid": "43637016_17b34c1e",
      "revId": "a6535cb3ced77d44c9d311f93a71f057055b0e79",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f287c3e0_192764e2",
        "filename": "src/gpio-presence/device_presence.cpp",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1002520
      },
      "writtenOn": "2025-08-27T03:09:58Z",
      "side": 1,
      "message": "Thanks for the detailed suggestion, it saved me time.",
      "parentUuid": "063b765c_ea85038b",
      "revId": "a6535cb3ced77d44c9d311f93a71f057055b0e79",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54393a66_b1626d51",
        "filename": "src/gpio-presence/device_presence.cpp",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-08-22T08:50:14Z",
      "side": 1,
      "message": "Is the order now wrong here?\n\nSince the properties can only change once the interface has been added, right?\n\nOtherwise we are changing properties on some interface that`s not even there (from DBus signal perspective)",
      "revId": "a6535cb3ced77d44c9d311f93a71f057055b0e79",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba7c0179_f97f27a6",
        "filename": "src/gpio-presence/device_presence.cpp",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1002520
      },
      "writtenOn": "2025-08-25T01:47:30Z",
      "side": 1,
      "message": "Sorry, copy-paste mistake when I rearranged the code — the actual order is correct.",
      "parentUuid": "54393a66_b1626d51",
      "revId": "a6535cb3ced77d44c9d311f93a71f057055b0e79",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}