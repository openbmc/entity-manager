{
  "comments": [
    {
      "key": {
        "uuid": "e0f10a02_b351de8c",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2021-05-07T18:37:37Z",
      "side": 1,
      "message": "Any particular reason the design doc template wasn\u0027t used? (https://github.com/openbmc/docs/blob/master/designs/design-template.md)",
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16d657f9_4bcddba9",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-05-07T20:45:26Z",
      "side": 1,
      "message": "Sorry, I will use the same.",
      "parentUuid": "e0f10a02_b351de8c",
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52a92c58_60f3e44c",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-11T16:51:33Z",
      "side": 1,
      "message": "nit:  Not really true.  It handles nested muxes today, just can\u0027t handle muxes within an entity, as that somewhat breaks the model a little.",
      "range": {
        "startLine": 8,
        "startChar": 15,
        "endLine": 8,
        "endChar": 41
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c59dc7b_1f85563e",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-05-12T00:13:14Z",
      "side": 1,
      "message": "mux under entity would turn out to be nested one. As currently we only support channels list under single mux but don\u0027t go further beyond channel.",
      "parentUuid": "52a92c58_60f3e44c",
      "range": {
        "startLine": 8,
        "startChar": 15,
        "endLine": 8,
        "endChar": 41
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c30108e0_74fc6ca3",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-13T00:03:51Z",
      "side": 1,
      "message": "Right.... that\u0027s different than \"no support\"",
      "parentUuid": "0c59dc7b_1f85563e",
      "range": {
        "startLine": 8,
        "startChar": 15,
        "endLine": 8,
        "endChar": 41
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f93e7312_550332e8",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-05-13T01:05:46Z",
      "side": 1,
      "message": "Ok, will change language.",
      "parentUuid": "c30108e0_74fc6ca3",
      "range": {
        "startLine": 8,
        "startChar": 15,
        "endLine": 8,
        "endChar": 41
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28ef9aaf_7f9f9a92",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-11T16:51:33Z",
      "side": 1,
      "message": "This also means that muxes on add in cards can\u0027t be used, as add in cards could be detected dynamically.  That\u0027s not going to meet the overall needs.",
      "range": {
        "startLine": 16,
        "startChar": 54,
        "endLine": 17,
        "endChar": 62
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3136c2bf_f270598e",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-11T16:51:33Z",
      "side": 1,
      "message": "This requires all downstream consumers to be \"mux aware\" as they\u0027ll need to look for both their normal config, and within a mux config.\n\nWe should be simply passing the calculated mux bus to the daemon, which already has a variable, we just need a new variable for each leg of the mux.",
      "range": {
        "startLine": 21,
        "startChar": 31,
        "endLine": 21,
        "endChar": 57
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d4323d4_3a7b1103",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-11T16:51:33Z",
      "side": 1,
      "message": "$index is already used to defined the instance of this device that was found, which doesn\u0027t really meet the intent of this.  You want the name to match the mux definition itself.\n\n\nthe \"name\" of the channel shouldn\u0027t include I2C.  That is implied.",
      "range": {
        "startLine": 73,
        "startChar": 31,
        "endLine": 73,
        "endChar": 37
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c5d0b5f_757d89ef",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-11T16:51:33Z",
      "side": 1,
      "message": "The mux channel itself shouldn\u0027t have a \"type\" of a thermal sensor.  There needs to be another TMP421 exposes node that fills in the $bus parameter.",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 75,
        "endChar": 25
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "547d23d3_32398b7f",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-05-12T00:13:14Z",
      "side": 1,
      "message": "either we can have under every mux channel, have an array of device nodes and each node can provide device details or we can copy channel number in each device node as many times each channel have only 1 device. That\u0027s why I didn\u0027t create another array here.",
      "parentUuid": "8c5d0b5f_757d89ef",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 75,
        "endChar": 25
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7eac426_cac1e195",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-13T00:03:51Z",
      "side": 1,
      "message": "Or.... we can simply enumerate the mux paths naming into the language parser, like we do with other things like bus, and forward the data onto the relevant daemons.",
      "parentUuid": "547d23d3_32398b7f",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 75,
        "endChar": 25
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74fc87e8_cfacb552",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-05-13T01:05:46Z",
      "side": 1,
      "message": "We will be parsing these arrays and create an independent node for each type of sensors or other device required by other daemons. After parsing it will look like a static entry as a json object with all parsed information like bus and address.",
      "parentUuid": "b7eac426_cac1e195",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 75,
        "endChar": 25
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20c1320a_01c82c57",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1000064
      },
      "writtenOn": "2021-05-11T11:29:36Z",
      "side": 1,
      "message": "How it\u0027s being detected which Mux is it? How to differentiate between Mux and Switch? They behaves differently, but have only one control register. How to differentiate between 4 and 8 channels muxes/switches?\n\nBTW, PCA9545 is a 4-channel switch.",
      "range": {
        "startLine": 107,
        "startChar": 17,
        "endLine": 107,
        "endChar": 30
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9bd053d_3f323867",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-11T16:51:33Z",
      "side": 1,
      "message": "\u003e How it\u0027s being detected which Mux is it?\n\nSee line 109, which determines which mux it is, which is determined by the probe statement, which was omitted from this, because it\u0027s already well defined and documented elsewhere.\n\n\u003e How to differentiate between Mux and Switch?\n\nType would be the cannonical way to differentiate.\n\n\u003e They behaves differently, but have only one control register. How to differentiate between 4 and 8 channels muxes/switches?\n\nAlso type, like we already do for other muxes today.\n\n\u003e \n\u003e BTW, PCA9545 is a 4-channel switch.\n\n+1.  Seems like something to fix.",
      "parentUuid": "20c1320a_01c82c57",
      "range": {
        "startLine": 107,
        "startChar": 17,
        "endLine": 107,
        "endChar": 30
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3b802e5_fc34bcf0",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1000064
      },
      "writtenOn": "2021-05-11T17:00:37Z",
      "side": 1,
      "message": "\u003e See line 109, which determines which mux it is\n\nSo, the topology (at least, for muxes/switches) configuration is predefined?",
      "parentUuid": "a9bd053d_3f323867",
      "range": {
        "startLine": 107,
        "startChar": 17,
        "endLine": 107,
        "endChar": 30
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00a9989d_17d06009",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-11T17:09:25Z",
      "side": 1,
      "message": "Topology for a given board/system is defined in config files.",
      "parentUuid": "a3b802e5_fc34bcf0",
      "range": {
        "startLine": 107,
        "startChar": 17,
        "endLine": 107,
        "endChar": 30
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ba42311_e91e86dc",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-05-12T00:13:14Z",
      "side": 1,
      "message": "Yes this is just an example config for user to create board specific topology. And I will fix name as 4 channel mux.",
      "parentUuid": "00a9989d_17d06009",
      "range": {
        "startLine": 107,
        "startChar": 17,
        "endLine": 107,
        "endChar": 30
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1aa8497_ebcf43f4",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 130,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-11T16:51:33Z",
      "side": 1,
      "message": "As I alluded to above, this somewhat breaks the exposes model.  an NVMe temp sensor module should not need to be aware of the mux at all, it should just be given a bus number and the mux handled transparently.",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 130,
        "endChar": 9
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "928b8d28_8de8d327",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 130,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-05-12T00:13:14Z",
      "side": 1,
      "message": "We must know what address and what channel number mux has this. Logical bus number would be defined by mux based on channel info.",
      "parentUuid": "f1aa8497_ebcf43f4",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 130,
        "endChar": 9
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5e667a5_a725dd0f",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 130,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-05-12T01:15:56Z",
      "side": 1,
      "message": "Another approach is to describe the relationship between a known bus and the desired muxed bus, and then have the code find the parent bus from the parent and child port numbers.\n\nSimilar to that how USB sysfs device path is huba-port/hubb-port/device i believe the sysfs for i2c is bus/bus/bus/device with a description linking to the mux control.  So the code would walk sysfs to find the needed bus.",
      "parentUuid": "928b8d28_8de8d327",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 130,
        "endChar": 9
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f5f8524_d2cd43c1",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 130,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-05-12T22:22:57Z",
      "side": 1,
      "message": "If we have mux driver added in dts then we can describe relations and code can find out. But we want to keep DTS as lean as possible and have multiple configuration for different board for same platform. There are some cards are dynamically detected as a riser card which may or may not available.\n\nBut I can add this approach also in the document, Thanks.",
      "parentUuid": "f5e667a5_a725dd0f",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 130,
        "endChar": 9
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af4f470a_3c254aa1",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 130,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-05-12T22:40:31Z",
      "side": 1,
      "message": "I was hoping there was already a method to add a mux device but reading this we may need to propose something maybe configfs driver to create platform data\n\nhttps://github.com/torvalds/linux/blob/master/Documentation/i2c/muxes/i2c-mux-gpio.rst",
      "parentUuid": "3f5f8524_d2cd43c1",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 130,
        "endChar": 9
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "025c8a7d_f72dea86",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 130,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-13T00:03:51Z",
      "side": 1,
      "message": "\"We must know what address and what channel number mux has this. Logical bus number would be defined by mux based on channel info.\"\n\nThe NVME device doesn\u0027t know the address or channel number today.  It only needs to know the bus number, which we already have a mechanism for passing around in a dynamic way (using $bus)\n\n\nWhat Milton suggested is roughly what I would recommend as well.",
      "parentUuid": "af4f470a_3c254aa1",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 130,
        "endChar": 9
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "894352a4_e2ed5d08",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 130,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-05-13T01:05:46Z",
      "side": 1,
      "message": "bus and channel number can be detected vi EEPROM if they have one.",
      "parentUuid": "025c8a7d_f72dea86",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 130,
        "endChar": 9
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eebb819a_48d8c55f",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 130,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-05-13T02:26:59Z",
      "side": 1,
      "message": "I think the point is we might consider a static setup to get a bus segment, but if you need to change the selectors then it needs to be done by the kernel so the normal drivers work.\n\nIt can be a driver for each topology like tv tuners or an new configurable generic one.",
      "parentUuid": "894352a4_e2ed5d08",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 130,
        "endChar": 9
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c9ae0dc_4bcdcbe8",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2021-05-07T01:28:54Z",
      "side": 1,
      "message": "How does this work at the kernel interface level? Are you proposing we use new_device and bind the i2c-mux-gpio driver to it? If so we need a mechanism to describe the GPIOs to the kernel. Or are you proposing handling this in userspace somehow?\n\nI feel this (again) starts us down the route of devicetree overlays or connectors.",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 155,
        "endChar": 17
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f38810d_6e0e0baf",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-05-07T20:49:15Z",
      "side": 1,
      "message": "Looks like I am missing something here. This is for gpio based mux switch. As we are using one of https://www.diodes.com/assets/Datasheets/PI5C3253.pdf and I am thinking of supporting this.",
      "parentUuid": "0c9ae0dc_4bcdcbe8",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 155,
        "endChar": 17
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b54a1226_7d1a8839",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2021-05-09T23:38:58Z",
      "side": 1,
      "message": "Right, but *how* are you going to support it?",
      "parentUuid": "4f38810d_6e0e0baf",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 155,
        "endChar": 17
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "978317b5_ea448984",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-05-10T21:36:47Z",
      "side": 1,
      "message": "This one is just a switch and I guess this doesn\u0027t need any driver. Only enable/disable GPIO lines and use gpio for selecting slots.",
      "parentUuid": "b54a1226_7d1a8839",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 155,
        "endChar": 17
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ce1f266_f2d58a0e",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-05-10T21:45:40Z",
      "side": 1,
      "message": "Which would also imply no kernel drivers for devices\nunder it (seeprom, thermal sense etc)",
      "parentUuid": "978317b5_ea448984",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 155,
        "endChar": 17
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acd1f82b_ecce117b",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-05-10T22:22:35Z",
      "side": 1,
      "message": "For devices under it like sensors, we can bind it from entity manager. eeprom, we may not need it as fru-device read it directly via i2c read.",
      "parentUuid": "5ce1f266_f2d58a0e",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 155,
        "endChar": 17
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb60000c_4c6fb55b",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-05-10T23:41:37Z",
      "side": 1,
      "message": "If the mux is just a buffer maybe but if you actually have multiple segments that need to be accessed then a kernel mux driver is required.",
      "parentUuid": "acd1f82b_ecce117b",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 155,
        "endChar": 17
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd8fd72c_e5ee4c20",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-05-12T00:13:14Z",
      "side": 1,
      "message": "Yes I agree and we will bind it same way as i2c mux, the first option.",
      "parentUuid": "bb60000c_4c6fb55b",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 155,
        "endChar": 17
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32767fac_96a2422b",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2021-05-13T00:53:07Z",
      "side": 1,
      "message": "Right, but how do you describe the required GPIOs to the i2c-mux-gpio driver from userspace?",
      "parentUuid": "dd8fd72c_e5ee4c20",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 155,
        "endChar": 17
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00fd3d49_2d4f6eee",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-05-13T00:59:33Z",
      "side": 1,
      "message": "Currently, I am not covering those with gpio driver. Only mux switch enabled/disabled by gpio is covered here. i2c-mux-gpio can be added through DTS currently. I am open for suggestions.\n\nSo current scope will cover PCAxxxx type and gpio based switch. This itself is going to be a big implementation and will add more enhancement slowly.",
      "parentUuid": "32767fac_96a2422b",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 155,
        "endChar": 17
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84ddb226_716705c4",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2021-05-13T02:33:46Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "00fd3d49_2d4f6eee",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 155,
        "endChar": 17
      },
      "revId": "6ce26789269908595d7bcd8c38a6c29da2499438",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}