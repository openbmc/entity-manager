{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9e5699a4_87ceb5af",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 24,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-12T01:21:37Z",
      "side": 1,
      "message": "This isn\u0027t just one port though - your defining a topology here. I think we have a few things to resolve here:\n\n- Should this be 1 port or many?\n- If many perhaps we should use a list of integers rather than a string",
      "revId": "d4ffda25111a65bca1e63fbaa01aa1c526d1c462",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6f54a0d_16c085ad",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 24,
      "author": {
        "id": 1000338
      },
      "writtenOn": "2025-06-12T02:54:13Z",
      "side": 1,
      "message": "Yes, the wording and the name here should be updated. Perhaps `PortNumbers` is more appropriate. I am kind of on the fence about the actual data type, though. Not sure what we gain by making this an int array only to later convert it to the format necessary to translate it for sysfs.",
      "parentUuid": "9e5699a4_87ceb5af",
      "revId": "d4ffda25111a65bca1e63fbaa01aa1c526d1c462",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4bacf16b_7db920bb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 24,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-12T03:09:21Z",
      "side": 1,
      "message": "Is it common for hardware schematics to use the dot notation? If so, maybe it\u0027s fine, but I suspect that representation is Linux-specific (even if it\u0027s somewhat intuitive). It\u0027s the job of `mctpreactor` to assemble the provided information into something that\u0027s useful in the context of the software implementation (interacting with Linux).",
      "parentUuid": "b6f54a0d_16c085ad",
      "revId": "d4ffda25111a65bca1e63fbaa01aa1c526d1c462",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "011e0844_41326891",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 24,
      "author": {
        "id": 1000338
      },
      "writtenOn": "2025-06-12T03:20:51Z",
      "side": 1,
      "message": "\u003e Is it common for hardware schematics to use the dot notation?\n\nNo, the HW schematics/diagrams I have seen mostly just show individual hub connections and port numbers (and the root port is often left out because it is typically 1)\n\n\u003e It\u0027s the job of mctpreactor to assemble the provided information into something that\u0027s useful in the context of the software implementation (interacting with Linux).\n\nTrue, but then the Root hub devpath is already something linux specific. As such I don\u0027t see an issue with bleeding some Linux specific detail into EM configs which are meant for a Linux based OpenBMC distribution, no?",
      "parentUuid": "4bacf16b_7db920bb",
      "revId": "d4ffda25111a65bca1e63fbaa01aa1c526d1c462",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "568e06b7_b192eaee",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 24,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-13T02:06:51Z",
      "side": 1,
      "message": "\u003e but then the Root hub devpath is already something linux specific.\n\nI\u0027m not enamoured with `RootHubPath` for that reason, which was why I was suggesting a deterministic bus index. I2C busses achieve this with aliases in the devicetree, the same might be done here (and we use `Bus` instead of `RootHubPath`).\n\nIt\u0027s probably time to find an EM maintainer to weigh in ðŸ˜Š",
      "parentUuid": "011e0844_41326891",
      "revId": "d4ffda25111a65bca1e63fbaa01aa1c526d1c462",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "717a5b48_05a92011",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 24,
      "author": {
        "id": 1002305
      },
      "writtenOn": "2025-06-18T04:58:09Z",
      "side": 1,
      "message": "Hey @andrew@codeconstruct.com.au, so adding the aliases in dt like \n```\n        usb10 \u003d \u0026ehci0;\n        usb20 \u003d \u0026ehci1;\n        usb30 \u003d \u0026uhci;\n```\nexposes them in `/proc/device-tree/aliases` and not in `/sys/bus/usb/devices` which still shows a usb1 instead of usb10, \n\nSo what I am thinking is reading the of_node property and mapping it against the device-tree alias, would that be an acceptable solution? Please feel free to point me to any other approaches which might be less cumbersome. ðŸ˜Š\n```root@gb200nvl-hmc:/sys/bus/usb/devices/usb1# readlink -f of_node\n/sys/firmware/devicetree/base/ahb/usb@1e6a1000\n```",
      "parentUuid": "568e06b7_b192eaee",
      "revId": "d4ffda25111a65bca1e63fbaa01aa1c526d1c462",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7770d2dc_4f469f4e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 24,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-06-18T10:30:21Z",
      "side": 1,
      "message": "I donâ€™t know how we make this usable without some extra code in entity manager similar to what weâ€™re doing for relative i2c busses. If you take the GB300 card as an example, you might have some USB endpoint via MCTP. That card can be plugged into a server from Meta or a server from Google, and there can be multiple of those cards. One of us could use multiple root ports off the BMC in our design and the other could use a USB hub. You canâ€™t express this by putting a static MCTP-USB device into the GB300 EM config as youâ€™ve proposed it here.",
      "parentUuid": "717a5b48_05a92011",
      "revId": "d4ffda25111a65bca1e63fbaa01aa1c526d1c462",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "678d6844_5fd3e2b3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 24,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-19T01:09:21Z",
      "side": 1,
      "message": "\u003e I donâ€™t know how we make this usable without some extra code in entity manager similar to what weâ€™re doing for relative i2c busses\n\nAs it stands its only usable in the configuration for the board containing the BMC from where we can describe the absolute topology (where while the device is USB-attached and USB supports hot-plug, the topology is fixed in the hardware design). You\u0027re right that it\u0027s not yet useful for pluggable cards.\n\nThe extra code we need in EM is probably best hashed out in a design doc. Having thought about it a bit, I suspect it might be useful for EM to process events from a `NETLINK_KOBJECT_UEVENT` socket. Other choices seem unwieldy (e.g. leaving that to udev, and then poking EM via a D-Bus interface from a helper binary launched from a udev rule like we do for phosphor-led-sysfs).\n\nUSB is self-describing so I think it\u0027s reasonable that we allow probes based on the info there and not tie it to a FRU EEPROM? This will get us inventory for the device in EM (which is necessary for the purpose of OpenBMC and eliminates a udev-only solution). From there we can fill in bus and port info from sysfs based on the uevent.\n\n\u003e So what I am thinking is reading the of_node property and mapping it against the device-tree alias, would that be an acceptable solution?\n\nIt would be better if the usb subsystem applied aliases itself like the i2c subsystem. Can you send a patch upstream?",
      "parentUuid": "7770d2dc_4f469f4e",
      "revId": "d4ffda25111a65bca1e63fbaa01aa1c526d1c462",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f824f84_c975e13d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 24,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-23T22:57:16Z",
      "side": 1,
      "message": "I\u0027m looking at the above, and I don\u0027t see how this could work.  Could you include an example of\n\nBMC -\u003e Mainboard(Embedded usb hub) -\u003e USB MCU device\n\nThe full layout for those three components?  The way you\u0027re describing 1.2.5 makes it seem like you\u0027re putting the whole topology in a single component, but remember that 1.2.5 in the above example would be\n\nBMC(USB port 1) -\u003e Mainboard (Hub port 2) -\u003e USB device (Device 5) \n\nSo that config needs split across 3 config files, similar to what patrick has pointed out.",
      "parentUuid": "678d6844_5fd3e2b3",
      "revId": "d4ffda25111a65bca1e63fbaa01aa1c526d1c462",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e9f8b82_29c4b5ac",
        "filename": "schemas/mctp.json",
        "patchSetId": 13
      },
      "lineNbr": 51,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-12T01:21:37Z",
      "side": 1,
      "message": "Can we require the value match `devpath` (i.e. without the preceding /sys)?\n\nhttps://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/Documentation/admin-guide/sysfs-rules.rst?h\u003dv6.15#n47\n\n(the whole document is worth reading)\n\n`mctpreactor` can do what needs to be done with the `devpath` value to translate it into a filesystem access.",
      "revId": "d4ffda25111a65bca1e63fbaa01aa1c526d1c462",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae123b80_8e34bcb6",
        "filename": "schemas/mctp.json",
        "patchSetId": 13
      },
      "lineNbr": 57,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-12T01:21:37Z",
      "side": 1,
      "message": "This example provided in the commit message isn\u0027t just one port though - your defining a topology (`1.2.5`). I think we have a few things to resolve here:\n\n- Should this be 1 port or many?\n- If many perhaps we should use a list of integers rather than a string",
      "range": {
        "startLine": 54,
        "startChar": 16,
        "endLine": 57,
        "endChar": 18
      },
      "revId": "d4ffda25111a65bca1e63fbaa01aa1c526d1c462",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1a2a319_65d16b70",
        "filename": "schemas/mctp.json",
        "patchSetId": 13
      },
      "lineNbr": 62,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-06-12T01:21:37Z",
      "side": 1,
      "message": "Why `InterfaceNum` rather than `Interface`? Is there some constraint that prevents use of `Interface`?",
      "range": {
        "startLine": 62,
        "startChar": 16,
        "endLine": 62,
        "endChar": 30
      },
      "revId": "d4ffda25111a65bca1e63fbaa01aa1c526d1c462",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}