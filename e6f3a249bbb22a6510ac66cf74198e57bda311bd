{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ffbc8d4b_6489993e",
        "filename": "schemas/firmware.json",
        "patchSetId": 14
      },
      "lineNbr": 20,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-12T22:49:59Z",
      "side": 1,
      "message": "This seems like inventory information, not something that would go in an exposes record?",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 51
      },
      "revId": "e6f3a249bbb22a6510ac66cf74198e57bda311bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf50dcb0_fd0eff6b",
        "filename": "schemas/firmware.json",
        "patchSetId": 14
      },
      "lineNbr": 20,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-01-20T10:13:40Z",
      "side": 1,
      "message": "Yes, right. Reworded that.",
      "parentUuid": "ffbc8d4b_6489993e",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 51
      },
      "revId": "e6f3a249bbb22a6510ac66cf74198e57bda311bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3f59190_da94b21b",
        "filename": "schemas/firmware.json",
        "patchSetId": 14
      },
      "lineNbr": 30,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-12T22:49:59Z",
      "side": 1,
      "message": "The type is bios, and the subtype has an enum that\u0027s only bios?  Somethign doesn\u0027t track there.",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 30,
        "endChar": 18
      },
      "revId": "e6f3a249bbb22a6510ac66cf74198e57bda311bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "22b50c5e_0fc46a37",
        "filename": "schemas/firmware.json",
        "patchSetId": 14
      },
      "lineNbr": 30,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-01-20T10:13:40Z",
      "side": 1,
      "message": "removed it.",
      "parentUuid": "d3f59190_da94b21b",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 30,
        "endChar": 18
      },
      "revId": "e6f3a249bbb22a6510ac66cf74198e57bda311bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a75ad55_409e7455",
        "filename": "schemas/firmware.json",
        "patchSetId": 14
      },
      "lineNbr": 38,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-12T22:49:59Z",
      "side": 1,
      "message": "This needs to be bounded on what physically exists, so this would be an index (0, 1), that would then be looked up to go find the spi lane in DT.",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 38,
        "endChar": 18
      },
      "revId": "e6f3a249bbb22a6510ac66cf74198e57bda311bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8382b0c0_5bd6b8f6",
        "filename": "schemas/firmware.json",
        "patchSetId": 14
      },
      "lineNbr": 38,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-01-20T10:13:40Z",
      "side": 1,
      "message": "Why do you want to create this dependency on dt?\nAn index can shift, the path at least contains the address.\n\nAnd why is it in {0,1}? There could be more spi devices.",
      "parentUuid": "4a75ad55_409e7455",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 38,
        "endChar": 18
      },
      "revId": "e6f3a249bbb22a6510ac66cf74198e57bda311bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f9a2c2a_053d1cbb",
        "filename": "schemas/firmware.json",
        "patchSetId": 14
      },
      "lineNbr": 38,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-01-31T12:44:36Z",
      "side": 1,
      "message": "Looking at the linux kernel docs for SPI userspace API, they \nshow that the spi device access is done via its path (e.g. in sysfs).\nSo we would need some way to convert your index into this path.\n\n```\n/sys/class/spidev/spidevB.C ...\n```\n\nhttps://www.kernel.org/doc/html/v6.13-rc7/spi/spidev.html\n\nLooking at one system, i found that\n\n```\n/sys/class/spi_master/spi0/\n```\n\nso there is a way to access by index.\nBut sysfs could be mounted somewhere else, ...\n\nIf we use a path, it is clear which device is referenced.\nWhen using the index, there is some built-in assumptions about how\nit is used to construct the path, which i would like to avoid.\n\nPlease explain to me why it must be an index.",
      "parentUuid": "8382b0c0_5bd6b8f6",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 38,
        "endChar": 18
      },
      "revId": "e6f3a249bbb22a6510ac66cf74198e57bda311bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96f78c7d_5a82ed1f",
        "filename": "schemas/firmware.json",
        "patchSetId": 14
      },
      "lineNbr": 39,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-12T22:49:59Z",
      "side": 1,
      "message": "Should be called \"MuxOutputs\"\n\nThere\u0027s no input here.",
      "range": {
        "startLine": 39,
        "startChar": 17,
        "endLine": 39,
        "endChar": 24
      },
      "revId": "e6f3a249bbb22a6510ac66cf74198e57bda311bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ddc9cba_415b1ee6",
        "filename": "schemas/firmware.json",
        "patchSetId": 14
      },
      "lineNbr": 39,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-01-20T10:13:40Z",
      "side": 1,
      "message": "I\u0027m not sure where you got this idea about \u0027Output\u0027/\u0027Input\u0027 naming scheme.\n\nIt completely breaks the usual \u0027grep -i\u0027 (or similar) for \u0027GPIO\u0027 that people do to find which gpios are used on their platform or to do any renaming of gpios. Please consider the needs of those people.\n\nIt is clear from the context that it is an output. A mux gpio is usually not used as input.\n\nUsing \u0027GPIO\u0027 in the name means that we configure a gpio here.\nIt does not indicate how the pin will be used.",
      "parentUuid": "96f78c7d_5a82ed1f",
      "range": {
        "startLine": 39,
        "startChar": 17,
        "endLine": 39,
        "endChar": 24
      },
      "revId": "e6f3a249bbb22a6510ac66cf74198e57bda311bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ca426b3_874a9854",
        "filename": "schemas/firmware.json",
        "patchSetId": 14
      },
      "lineNbr": 39,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-01-30T16:35:43Z",
      "side": 1,
      "message": "Can we make a compromise here and call it \"MuxGPIOOutputs\"?\n\nThat still allows for people to grep which GPIOs are configured in their tree\nwhile being explicit about it being an output.",
      "parentUuid": "5ddc9cba_415b1ee6",
      "range": {
        "startLine": 39,
        "startChar": 17,
        "endLine": 39,
        "endChar": 24
      },
      "revId": "e6f3a249bbb22a6510ac66cf74198e57bda311bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18b5c338_75e8e213",
        "filename": "schemas/firmware.json",
        "patchSetId": 14
      },
      "lineNbr": 39,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-01-31T12:44:36Z",
      "side": 1,
      "message": "nvm, changed it to your suggestion.",
      "parentUuid": "1ca426b3_874a9854",
      "range": {
        "startLine": 39,
        "startChar": 17,
        "endLine": 39,
        "endChar": 24
      },
      "revId": "e6f3a249bbb22a6510ac66cf74198e57bda311bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9eff2482_48a59c68",
        "filename": "schemas/firmware.json",
        "patchSetId": 14
      },
      "lineNbr": 41,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-12T22:49:59Z",
      "side": 1,
      "message": "Why is this an array?",
      "revId": "e6f3a249bbb22a6510ac66cf74198e57bda311bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9611413b_9d40afcf",
        "filename": "schemas/firmware.json",
        "patchSetId": 14
      },
      "lineNbr": 41,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-01-20T10:13:40Z",
      "side": 1,
      "message": "Changed it to be 2 arrays, one for the gpio names, the other for the gpio values. There may be multiple gpios needed to control the mux + set anything else that\u0027s required.\n\nSince the \u0027anything else\u0027 is quite open ended, we leave it out and just make it part of the mux config, which may need multiple gpios anyways.",
      "parentUuid": "9eff2482_48a59c68",
      "revId": "e6f3a249bbb22a6510ac66cf74198e57bda311bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53790f81_02df8eb7",
        "filename": "schemas/firmware.json",
        "patchSetId": 14
      },
      "lineNbr": 59,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-12T22:49:59Z",
      "side": 1,
      "message": "ME would be its own exposes record, with it\u0027s own settings.  There\u0027s already several examples of supporting it through IPMBSensor, so it\u0027s not clear what this would even do?",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 59,
        "endChar": 18
      },
      "revId": "e6f3a249bbb22a6510ac66cf74198e57bda311bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6dfa6914_4b1e1bfa",
        "filename": "schemas/firmware.json",
        "patchSetId": 14
      },
      "lineNbr": 59,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-01-20T10:13:40Z",
      "side": 1,
      "message": "On some platforms, the ME may access the host fw flash, so it needs a command to stop doing that when the update is performed. Expanded this section to explain this aspect.",
      "parentUuid": "53790f81_02df8eb7",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 59,
        "endChar": 18
      },
      "revId": "e6f3a249bbb22a6510ac66cf74198e57bda311bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db7b428f_acee4f25",
        "filename": "schemas/firmware.json",
        "patchSetId": 14
      },
      "lineNbr": 63,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-12T22:49:59Z",
      "side": 1,
      "message": "Not descriptive enough what these are or how they\u0027re used.",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 63,
        "endChar": 18
      },
      "revId": "e6f3a249bbb22a6510ac66cf74198e57bda311bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3eb86a5_f3c45995",
        "filename": "schemas/firmware.json",
        "patchSetId": 14
      },
      "lineNbr": 63,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-01-20T10:13:40Z",
      "side": 1,
      "message": "Expanded this section 👍",
      "parentUuid": "db7b428f_acee4f25",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 63,
        "endChar": 18
      },
      "revId": "e6f3a249bbb22a6510ac66cf74198e57bda311bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}