{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "374256d3_ebf7ee9c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-10-28T11:56:36Z",
      "side": 1,
      "message": "Suggest making a markdown file for the blocklist format if it isn\u0027t already documented somewhere.",
      "revId": "19fcee1024c4c6f6ae86182c14070f4afdc347ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6af5e8b3_497cc53d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-10-28T11:56:36Z",
      "side": 1,
      "message": "Please avoid tabs.",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 18,
        "endChar": 2
      },
      "revId": "19fcee1024c4c6f6ae86182c14070f4afdc347ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a41d4ec5_71787f4a",
        "filename": "src/fru_device.cpp",
        "patchSetId": 7
      },
      "lineNbr": 398,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-10-28T11:56:36Z",
      "side": 1,
      "message": "busBlackList.contains(bus)",
      "range": {
        "startLine": 398,
        "startChar": 0,
        "endLine": 398,
        "endChar": 61
      },
      "revId": "19fcee1024c4c6f6ae86182c14070f4afdc347ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64121619_3bafff73",
        "filename": "src/fru_device.cpp",
        "patchSetId": 7
      },
      "lineNbr": 398,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-10-29T02:02:04Z",
      "side": 1,
      "message": "Or since `bus` is loop invariant and `busBlacklist[bus]` is currently looked up multiple times on each iteration, maybe just assign `busBlacklist.find(bus)` to a variable outside the loop once and use that instead?",
      "parentUuid": "a41d4ec5_71787f4a",
      "range": {
        "startLine": 398,
        "startChar": 0,
        "endLine": 398,
        "endChar": 61
      },
      "revId": "19fcee1024c4c6f6ae86182c14070f4afdc347ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c377260_0f58adda",
        "filename": "src/fru_device.cpp",
        "patchSetId": 7
      },
      "lineNbr": 400,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-10-28T11:56:36Z",
      "side": 1,
      "message": "busBlacklist[bus].contains(ii)",
      "range": {
        "startLine": 400,
        "startChar": 0,
        "endLine": 400,
        "endChar": 74
      },
      "revId": "19fcee1024c4c6f6ae86182c14070f4afdc347ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07839942_ab7ec50c",
        "filename": "src/fru_device.cpp",
        "patchSetId": 7
      },
      "lineNbr": 404,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-10-28T11:56:36Z",
      "side": 1,
      "message": "I don\u0027t think this is necessary.",
      "range": {
        "startLine": 402,
        "startChar": 0,
        "endLine": 404,
        "endChar": 34
      },
      "revId": "19fcee1024c4c6f6ae86182c14070f4afdc347ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dae16798_9c410f35",
        "filename": "src/fru_device.cpp",
        "patchSetId": 7
      },
      "lineNbr": 542,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-10-28T11:56:36Z",
      "side": 1,
      "message": "I don\u0027t understand the need for this to be outside the scope.",
      "revId": "19fcee1024c4c6f6ae86182c14070f4afdc347ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a2b9732_cb18b174",
        "filename": "src/fru_device.cpp",
        "patchSetId": 7
      },
      "lineNbr": 553,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-10-28T11:56:36Z",
      "side": 1,
      "message": "Why get_to and not get?",
      "revId": "19fcee1024c4c6f6ae86182c14070f4afdc347ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19187193_110c31f5",
        "filename": "src/fru_device.cpp",
        "patchSetId": 7
      },
      "lineNbr": 557,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-10-28T11:56:36Z",
      "side": 1,
      "message": "And then what are we doing about it?  It appears that we keep going, which isn\u0027t good.",
      "revId": "19fcee1024c4c6f6ae86182c14070f4afdc347ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5c8d9fe_efd0bef6",
        "filename": "src/fru_device.cpp",
        "patchSetId": 7
      },
      "lineNbr": 563,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-10-28T11:56:36Z",
      "side": 1,
      "message": "Why get_to and not get?",
      "revId": "19fcee1024c4c6f6ae86182c14070f4afdc347ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36dba51c_10c3f2e2",
        "filename": "src/fru_device.cpp",
        "patchSetId": 7
      },
      "lineNbr": 567,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-10-28T11:56:36Z",
      "side": 1,
      "message": "What are we doing in the error path?",
      "revId": "19fcee1024c4c6f6ae86182c14070f4afdc347ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "caf4c39c_c16a4966",
        "filename": "src/fru_device.cpp",
        "patchSetId": 7
      },
      "lineNbr": 570,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-10-28T11:56:36Z",
      "side": 1,
      "message": "This seems extraneous.  Can you put 16 into line 574?\n\nIf this was to squash a clang-tidy warning, please switch to `static constexpr auto hexbase \u003d 16`.",
      "revId": "19fcee1024c4c6f6ae86182c14070f4afdc347ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6ac9e04_6c146e98",
        "filename": "src/fru_device.cpp",
        "patchSetId": 7
      },
      "lineNbr": 580,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-10-28T11:56:36Z",
      "side": 1,
      "message": "Why are we getting one type (size_t) but storing into another type (bus)?",
      "revId": "19fcee1024c4c6f6ae86182c14070f4afdc347ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67dd9e4b_a2b20f1c",
        "filename": "src/fru_device.cpp",
        "patchSetId": 7
      },
      "lineNbr": 609,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-10-29T02:02:04Z",
      "side": 1,
      "message": "The \"empty means everything\" encoding is a bit counter-intuitive; I\u0027d suggest at least putting a comment explaining it on the declaration of busBlacklist.\n\nIt also means that you\u0027ll end up with some pretty surprising results if someone does e.g.\n\n```\n{\n  \"buses\": [\n    ...\n    {\n      \"bus\": 3,\n      \"addresses\": []\n    },\n    ...\n  ]\n}\n```\n\nThe obvious reading of that is that no addresses on bus 3 should be skipped, but it\u0027ll end up skipping the entire bus instead.  I might argue for a slightly more explicit representation in the busBlacklist data structure, perhaps something like map\u003cint, optional\u003cset\u003cint\u003e\u003e\u003e, using nullopt to signal \"all addresses\" and leaving an empty set meaning the natural obvious thing (\"no addresses\").",
      "revId": "19fcee1024c4c6f6ae86182c14070f4afdc347ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1de5a143_91b5ffaf",
        "filename": "src/fru_device.cpp",
        "patchSetId": 7
      },
      "lineNbr": 611,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-10-28T11:56:36Z",
      "side": 1,
      "message": "Do we want this cerr all the time?  Seems like noise.",
      "revId": "19fcee1024c4c6f6ae86182c14070f4afdc347ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}