{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e0de56df_b3f137cd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 12,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-08-01T08:43:06Z",
      "side": 1,
      "message": "Missing `Tested:` statement",
      "revId": "41b56723fac0f02c2c1a887d3326ddc9339eb6b0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e13de79_a343a53e",
        "filename": "src/entity_manager/config_record.cpp",
        "patchSetId": 15
      },
      "lineNbr": 3,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-08-01T08:43:06Z",
      "side": 1,
      "message": "Can we pass ```std::string\u0026 name``` instead?\n\nPassing references is usually preferred over passing pointers, since references have to be initialized, and with pointers we have to check for `nullptr`\n\nhttps://en.cppreference.com/w/cpp/language/reference_initialization.html",
      "revId": "41b56723fac0f02c2c1a887d3326ddc9339eb6b0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "437ce7ab_2a37c119",
        "filename": "src/entity_manager/config_record.cpp",
        "patchSetId": 15
      },
      "lineNbr": 5,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-08-01T08:43:06Z",
      "side": 1,
      "message": "Can we pass ```std::set\u003cstd::string\u003e\u0026 interface``` instead?",
      "revId": "41b56723fac0f02c2c1a887d3326ddc9339eb6b0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ba1e07e_674ac5e8",
        "filename": "src/entity_manager/config_record.hpp",
        "patchSetId": 15
      },
      "lineNbr": 8,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-08-01T08:43:06Z",
      "side": 1,
      "message": "Can you add a small comment about what this class represents.\n\nDo you want to represent the contents of a single EM config, or a config json file.\nConfig json files may contain multiple EM configs (can refer to json schemas here)",
      "revId": "41b56723fac0f02c2c1a887d3326ddc9339eb6b0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9736f09b_a782bce1",
        "filename": "src/entity_manager/config_record.hpp",
        "patchSetId": 15
      },
      "lineNbr": 14,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-08-01T08:43:06Z",
      "side": 1,
      "message": "We may want a comment here that `name` maps to `\"Name\"`\nand same for other members which map directly to json properties.",
      "revId": "41b56723fac0f02c2c1a887d3326ddc9339eb6b0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ccefe385_9673f77d",
        "filename": "src/entity_manager/config_record.hpp",
        "patchSetId": 15
      },
      "lineNbr": 15,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-08-01T08:43:06Z",
      "side": 1,
      "message": "Should we rename `command` to `probe` or `probeStmt` since that is the property name used in the json aswell?\n\nIt could be helpful when reading code to have some hint at which json property this class member is representing.",
      "revId": "41b56723fac0f02c2c1a887d3326ddc9339eb6b0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fbbfd8e8_a0301ac6",
        "filename": "src/entity_manager/config_record.hpp",
        "patchSetId": 15
      },
      "lineNbr": 17,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-08-01T08:43:06Z",
      "side": 1,
      "message": "Can we rename this to `probeInterfaces` or similar since `interfaces` can mean a lot of things as a variable name.",
      "revId": "41b56723fac0f02c2c1a887d3326ddc9339eb6b0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6551bc0f_1ca87911",
        "filename": "src/entity_manager/configuration.hpp",
        "patchSetId": 15
      },
      "lineNbr": 20,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-08-01T08:43:06Z",
      "side": 1,
      "message": "If we copy construct the `nlohmann::json` members of `ConfigRecord`, can we get rid of the `std::vector\u003cnlohmann::json\u003e` here?",
      "revId": "41b56723fac0f02c2c1a887d3326ddc9339eb6b0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2df1582_8b28e69c",
        "filename": "src/entity_manager/entity_manager.cpp",
        "patchSetId": 15
      },
      "lineNbr": 647,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-08-01T08:43:06Z",
      "side": 1,
      "message": "Is this the `Name` field from the configuration file?\n\nThat looks wrong.",
      "revId": "41b56723fac0f02c2c1a887d3326ddc9339eb6b0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61ec8bdf_133de6b0",
        "filename": "src/entity_manager/perform_scan.hpp",
        "patchSetId": 15
      },
      "lineNbr": 42,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-08-01T08:43:06Z",
      "side": 1,
      "message": "The member will be copy-constructed, but the configuration has not changed and will not be changed by this class, right?\n\nMaybe we should change this to `std::vector\u003cConfigRecord\u003e\u0026 _configRecords`, what do you think?",
      "revId": "41b56723fac0f02c2c1a887d3326ddc9339eb6b0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}