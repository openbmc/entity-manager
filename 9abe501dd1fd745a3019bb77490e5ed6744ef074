{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a3e400b6_c5d491c7",
        "filename": "schemas/firmware.json",
        "patchSetId": 11
      },
      "lineNbr": 19,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-04-12T08:12:25Z",
      "side": 1,
      "message": "Why is this a separate schema? Is there any intent to share it?\n\nOtherwise can probably inline those properties to simplify.",
      "revId": "9abe501dd1fd745a3019bb77490e5ed6744ef074",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3bbbbd95_16a7c2c6",
        "filename": "schemas/firmware.json",
        "patchSetId": 11
      },
      "lineNbr": 19,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-04-14T02:06:50Z",
      "side": 1,
      "message": "This schema is defined separately to enable reuse of common configuration properties that are based on a combination of bus, address, and chip model. For example, both `DeviceInfo` and `EEPROMInfo` use this structure to describe how to access devices over I2C. By referencing a shared schema, we avoid duplication and ensure consistency across components that interact with similar hardware.",
      "parentUuid": "a3e400b6_c5d491c7",
      "revId": "9abe501dd1fd745a3019bb77490e5ed6744ef074",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c703886_2a7297ab",
        "filename": "schemas/firmware.json",
        "patchSetId": 11
      },
      "lineNbr": 19,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-04-14T10:23:07Z",
      "side": 1,
      "message": "Ok, looks like i missed that. Thanks for clarify ðŸ˜Š",
      "parentUuid": "3bbbbd95_16a7c2c6",
      "revId": "9abe501dd1fd745a3019bb77490e5ed6744ef074",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50c04573_14209712",
        "filename": "schemas/firmware.json",
        "patchSetId": 11
      },
      "lineNbr": 19,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-04-14T10:23:07Z",
      "side": 1,
      "message": "Since it\u0027s specifically aimed at i2c devices, can we rename it to ```I2CDeviceProperties``` or similar?",
      "revId": "9abe501dd1fd745a3019bb77490e5ed6744ef074",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b2f9893_e8bf1ad4",
        "filename": "schemas/firmware.json",
        "patchSetId": 11
      },
      "lineNbr": 19,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-04-17T08:22:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "50c04573_14209712",
      "revId": "9abe501dd1fd745a3019bb77490e5ed6744ef074",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "571ce48c_6eca5adc",
        "filename": "schemas/firmware.json",
        "patchSetId": 11
      },
      "lineNbr": 19,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-04-17T08:58:58Z",
      "side": 1,
      "message": "Removed `DevicePropertiesDef` and inlined its properties into each schema to allow ChipModel enumeration and improve clarity. Reused existing Bus and Address types from legacy.json to avoid confusion.",
      "parentUuid": "50c04573_14209712",
      "revId": "9abe501dd1fd745a3019bb77490e5ed6744ef074",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81d769b1_777dec91",
        "filename": "schemas/firmware.json",
        "patchSetId": 11
      },
      "lineNbr": 31,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-04-12T08:12:25Z",
      "side": 1,
      "message": "Is \"ChipModel\" an enum? Which values will be supported here.",
      "revId": "9abe501dd1fd745a3019bb77490e5ed6744ef074",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f937554c_d9e35a6c",
        "filename": "schemas/firmware.json",
        "patchSetId": 11
      },
      "lineNbr": 31,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-04-14T02:06:50Z",
      "side": 1,
      "message": "Yes, but I intentionally avoid restricting the supported values in this common schema since this property is shared across multiple schemas.",
      "parentUuid": "81d769b1_777dec91",
      "revId": "9abe501dd1fd745a3019bb77490e5ed6744ef074",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2817710d_395d0598",
        "filename": "schemas/firmware.json",
        "patchSetId": 11
      },
      "lineNbr": 31,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-04-14T10:23:07Z",
      "side": 1,
      "message": "Yes, but there needs to be a way for people to see which values will be supported here. There will be values which the daemon does not handle and that can already be expressed in the configuration schema.\n\nIf there is no way to enumerate, maybe 2 \"ChipModel\" properties can be part of the \"EEPROMDeviceFirmware\" schema? Then they can be enumerated there since they are no longer shared.",
      "parentUuid": "f937554c_d9e35a6c",
      "revId": "9abe501dd1fd745a3019bb77490e5ed6744ef074",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af958396_844fe5ed",
        "filename": "schemas/firmware.json",
        "patchSetId": 11
      },
      "lineNbr": 31,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-04-14T18:50:10Z",
      "side": 1,
      "message": "\u003e  I intentionally avoid restricting the supported values\n\nThe intent of EM is to have a listing of what things are supported.  Please make this an enum.\n\nALso, if these types are things like AT04 devices that we already support, please roll your definitions into those types.",
      "parentUuid": "2817710d_395d0598",
      "revId": "9abe501dd1fd745a3019bb77490e5ed6744ef074",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c493eb57_c230b990",
        "filename": "schemas/firmware.json",
        "patchSetId": 11
      },
      "lineNbr": 31,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-04-17T08:58:58Z",
      "side": 1,
      "message": "Moved the `ChipModel` into the `EEPROMDeviceFirmware` schema.",
      "parentUuid": "2817710d_395d0598",
      "revId": "9abe501dd1fd745a3019bb77490e5ed6744ef074",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd367eaf_84e51157",
        "filename": "schemas/firmware.json",
        "patchSetId": 11
      },
      "lineNbr": 38,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-04-12T08:12:25Z",
      "side": 1,
      "message": "probably needs the \n\nadditionalProperties: false\n\nstanza",
      "revId": "9abe501dd1fd745a3019bb77490e5ed6744ef074",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a32e8c37_3e999303",
        "filename": "schemas/firmware.json",
        "patchSetId": 11
      },
      "lineNbr": 38,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-04-14T02:06:50Z",
      "side": 1,
      "message": "Why do we need \"additionalProperties: false\"?",
      "parentUuid": "fd367eaf_84e51157",
      "revId": "9abe501dd1fd745a3019bb77490e5ed6744ef074",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f78ad92_316ce9d5",
        "filename": "schemas/firmware.json",
        "patchSetId": 11
      },
      "lineNbr": 38,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-04-14T10:23:07Z",
      "side": 1,
      "message": "Since we do not want configurations to pass the validator if they use properties not listed in their schema.\n\nhttps://json-schema.org/draft/2020-12/json-schema-core#section-10.3.2.3\n\n\nThere is an active patch to fix this for an IBM schema https://gerrit.openbmc.org/c/openbmc/entity-manager/+/79654\n\nand now the (reviewers) need to figure out if these additional Properties in these configurations are actually supported, if the schema has to be changed, or the configurations.\n\nSo better to avoid these problems by using \n\n```\n\"additionalProperties\": false\n```",
      "parentUuid": "a32e8c37_3e999303",
      "revId": "9abe501dd1fd745a3019bb77490e5ed6744ef074",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e8a4ea7_bdb43046",
        "filename": "schemas/firmware.json",
        "patchSetId": 11
      },
      "lineNbr": 38,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-04-14T18:50:10Z",
      "side": 1,
      "message": "EEPROMDeviceFirmware \n\nwould instead be\n\nEEPROMAT04256, which is a type we already support.  I suspect we just need to add something to the existing type that indicates the \"expected contents\"",
      "parentUuid": "2f78ad92_316ce9d5",
      "revId": "9abe501dd1fd745a3019bb77490e5ed6744ef074",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "146c6f92_4dc04d47",
        "filename": "schemas/firmware.json",
        "patchSetId": 11
      },
      "lineNbr": 38,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-04-17T08:58:58Z",
      "side": 1,
      "message": "Understood. Added \"additionalProperties: false\".\n\n@ed@tanous.net EEPROMDeviceFirmware is for devices that use a separate EEPROM to store their firmware but read the firmware version directly from the device itself, such as a Retimer.",
      "parentUuid": "2f78ad92_316ce9d5",
      "revId": "9abe501dd1fd745a3019bb77490e5ed6744ef074",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2885470_436befa1",
        "filename": "schemas/firmware.json",
        "patchSetId": 11
      },
      "lineNbr": 39,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-04-14T10:23:07Z",
      "side": 1,
      "message": "Can you add to this description which daemon will initially consume this configuration.",
      "revId": "9abe501dd1fd745a3019bb77490e5ed6744ef074",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c20e755_bc69eef8",
        "filename": "schemas/firmware.json",
        "patchSetId": 11
      },
      "lineNbr": 39,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-04-14T18:50:10Z",
      "side": 1,
      "message": "Please don\u0027t add the daemon name in the schema description.  Add it into the commit message.\n\nAt a schema level, it shouldn\u0027t matter what daemon consumes a config stanza.",
      "parentUuid": "c2885470_436befa1",
      "revId": "9abe501dd1fd745a3019bb77490e5ed6744ef074",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c668e43c_8120d251",
        "filename": "schemas/firmware.json",
        "patchSetId": 11
      },
      "lineNbr": 39,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-04-14T19:18:10Z",
      "side": 1,
      "message": "\u003e At a schema level, it shouldn\u0027t matter what daemon consumes a config stanza.\n\nYes. But how do you then find that daemon without building an image and monitoring dbus at runtime?",
      "parentUuid": "5c20e755_bc69eef8",
      "revId": "9abe501dd1fd745a3019bb77490e5ed6744ef074",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f67fa888_a0568ffa",
        "filename": "schemas/firmware.json",
        "patchSetId": 11
      },
      "lineNbr": 39,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-04-17T08:58:58Z",
      "side": 1,
      "message": "Improved the description.",
      "parentUuid": "c668e43c_8120d251",
      "revId": "9abe501dd1fd745a3019bb77490e5ed6744ef074",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80596b94_53e8894c",
        "filename": "schemas/firmware.json",
        "patchSetId": 11
      },
      "lineNbr": 50,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-04-14T10:23:07Z",
      "side": 1,
      "message": "Since DeviceInfo and EEPROMInfo use the same schema, will the bus and address be different?\n\nAre you configuring for 2 i2c devices or 1?\n\nIf it\u0027s 1 device we are duplicating Bus and Address.\n\nIf it\u0027s 2 devices, can we have some description on these properties about how they relate to each other.",
      "revId": "9abe501dd1fd745a3019bb77490e5ed6744ef074",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d15261e_a44e0684",
        "filename": "schemas/firmware.json",
        "patchSetId": 11
      },
      "lineNbr": 50,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-04-17T08:22:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "80596b94_53e8894c",
      "revId": "9abe501dd1fd745a3019bb77490e5ed6744ef074",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "861e9e1f_a2c46240",
        "filename": "schemas/firmware.json",
        "patchSetId": 11
      },
      "lineNbr": 50,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-04-17T08:58:58Z",
      "side": 1,
      "message": "Yes, the bus and address are different as they are configured for two separate I2C devices. The descriptions of these properties have been improved for clarity.",
      "parentUuid": "80596b94_53e8894c",
      "revId": "9abe501dd1fd745a3019bb77490e5ed6744ef074",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e41da03_44981e69",
        "filename": "schemas/firmware.json",
        "patchSetId": 11
      },
      "lineNbr": 67,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-04-14T10:23:07Z",
      "side": 1,
      "message": "There is already an existing schema for polarity, i would prefer we use that instead ðŸ˜Š",
      "revId": "9abe501dd1fd745a3019bb77490e5ed6744ef074",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5943fa8d_ecfa6603",
        "filename": "schemas/firmware.json",
        "patchSetId": 11
      },
      "lineNbr": 67,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-04-17T08:22:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0e41da03_44981e69",
      "revId": "9abe501dd1fd745a3019bb77490e5ed6744ef074",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9be7f74_b72bf637",
        "filename": "schemas/firmware.json",
        "patchSetId": 11
      },
      "lineNbr": 67,
      "author": {
        "id": 1002253
      },
      "writtenOn": "2025-04-17T08:58:58Z",
      "side": 1,
      "message": "Got it. Thanks for the information. Changed to use that one instead.",
      "parentUuid": "0e41da03_44981e69",
      "revId": "9abe501dd1fd745a3019bb77490e5ed6744ef074",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}