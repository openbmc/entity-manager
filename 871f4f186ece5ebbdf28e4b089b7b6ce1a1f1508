{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1a29938b_b6622764",
        "filename": "docs/entity_manager_alt_dbus_api.md",
        "patchSetId": 33
      },
      "lineNbr": 1,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-10T15:46:41Z",
      "side": 1,
      "message": "I really appreciate this is documented!\n\nCould you please integrate this with the existing docs on the topic, so we don\u0027t have to maintain both?\n\nThis seems to be in design doc format, so it might be useful in the design doc folder in its own review?  Regardless, we should update the config format docs in the em repo (once we\u0027ve agreed on what the format is).",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 37
      },
      "revId": "871f4f186ece5ebbdf28e4b089b7b6ce1a1f1508",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76b38689_8d212c9e",
        "filename": "docs/entity_manager_alt_dbus_api.md",
        "patchSetId": 33
      },
      "lineNbr": 1,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-11T08:49:06Z",
      "side": 1,
      "message": "\u003e Could you please integrate this with the existing docs on the topic, so we don\u0027t have to maintain both?\n\nIf we can make the transition, we could just delete the other doc. If there is a time when both ways will work then having both documents may help to conceptually separate the 2 representations.\n\n\u003e This seems to be in design doc format, so it might be useful in the design doc folder in its own review?\n\nIn case there are alternatives to consider, or opportunity to get input from wider community, yes, but in this case i do not see many design choices.\nAt least not anything that would make sense to me.\n\nFrom my perspective it boils down to \"how to map json to DBus\". The nesting (objects and arrays) then has to be represented in either dbus names, object paths, interfaces or properties (and their values).\n\nWe can not use dbus names, properties or interfaces for the nesting since they are not intended to be used that way. Properties should be the same for different instances of a dbus interface, so they cannot represent arrays. DBus names should be unique and traditionally services only have one name. So they cannot be used.\nMultiple DBus interfaces with different names (which have the same properties) are also not good for the code and hard to re-use.\n\nPutting the nesting in the property type and value would make it hard to work with since the property names (from the nested json) will be lost.\n\n\nThen only object paths remain to represent the nesting.\n\n@spinler@us.ibm.com @patrick@stwcx.xyz Do you think we need to go through the design doc process for this feature?",
      "parentUuid": "1a29938b_b6622764",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 37
      },
      "revId": "871f4f186ece5ebbdf28e4b089b7b6ce1a1f1508",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}