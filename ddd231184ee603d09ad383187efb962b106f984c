{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6ddc710e_06bea35c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-01T09:47:03Z",
      "side": 1,
      "message": "Another concern with this feature:\n```CompatibleHardware``` string is currently part of the EM config,\nif a file contains multiple EM configs, that may introduce some inconsistency:\n\nat least 3 options here:\n- install all EM configs in that file (and accept installing config that\u0027s not needed or wanted)\n- install only those which are selected (and introduce an inconsistency between the config files present in the tree and on the BMC)\n- print a build error due to the detected inconsistency",
      "revId": "ddd231184ee603d09ad383187efb962b106f984c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e2ad07e_32dfaf52",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-12T14:05:12Z",
      "side": 1,
      "message": "Since there was no feedback on the issue, resolved this concern by installing all EM configs in a file in case any one of them is compatible.",
      "parentUuid": "6ddc710e_06bea35c",
      "revId": "ddd231184ee603d09ad383187efb962b106f984c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a739ba5e_3a0d8087",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-12T18:11:38Z",
      "side": 1,
      "message": "nd",
      "revId": "ddd231184ee603d09ad383187efb962b106f984c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0375b6c6_56ab2701",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-12T18:38:39Z",
      "side": 1,
      "message": "Maybe we just enforce that all entities in the same file have the same compatible string in CI?  If we have more than one entity in a file that has a different compatible string, it means that the multiples in the file were used incorrectly.",
      "parentUuid": "6e2ad07e_32dfaf52",
      "revId": "ddd231184ee603d09ad383187efb962b106f984c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce8e4b70_0928e493",
        "filename": "meson.options",
        "patchSetId": 23
      },
      "lineNbr": 35,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-05-01T00:47:05Z",
      "side": 1,
      "message": "Does this mean you have to actively each and every JSON file?  That sounds painful.  Is there a way to support wildcards and/or regex?",
      "revId": "ddd231184ee603d09ad383187efb962b106f984c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e3c7d44_2effa09a",
        "filename": "meson.options",
        "patchSetId": 23
      },
      "lineNbr": 35,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-05T10:01:27Z",
      "side": 1,
      "message": "Changed the meson option to be a space separated list of regex.",
      "parentUuid": "ce8e4b70_0928e493",
      "revId": "ddd231184ee603d09ad383187efb962b106f984c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}