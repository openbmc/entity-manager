{
  "comments": [
    {
      "key": {
        "uuid": "707a6a5f_dc89bc87",
        "filename": "schemas/IBM.json",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-16T16:51:17Z",
      "side": 1,
      "message": "These four properties would normally be covered by critical and warning thresholds for said sensor.  Is there a reason that the existing thresholding didn\u0027t meet your needs for declaring warning and critical temperatures?",
      "revId": "66077db346a3e0ae24af7d498571f66dbd06ac4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb1d9dcf_8ee5652a",
        "filename": "schemas/IBM.json",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2020-11-16T18:07:35Z",
      "side": 1,
      "message": "From an entity-manager JSON point of view, since the Thresholds array is basically just free format strings, theoretically I could have just encoded these values into that, using special string labels.  That really bypasses the added value a schema provides though.\n\nIn regards to using the actual Sensor.Threshold.Warning/Critical interfaces, I couldn\u0027t see how to make that work: \n1) I have 4 levels here, not just two.\n2) The \u0027WarningLow\u0027 parameter I suppose I could use as the TempReset value, but that isn\u0027t what it\u0027s defined to be used as.  Not sure if other code uses it that way.",
      "parentUuid": "707a6a5f_dc89bc87",
      "revId": "66077db346a3e0ae24af7d498571f66dbd06ac4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cfbe1b11_30856c70",
        "filename": "schemas/IBM.json",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-16T18:20:14Z",
      "side": 1,
      "message": "\u003e From an entity-manager JSON point of view, since the Thresholds array is basically just free format strings, theoretically I could have just encoded these values into that, using special string labels.\n\nOr... you could use the existing labels as-is.  I\u0027m not following why these are different.\n\n\u003e  That really bypasses the added value a schema provides though.\n\nRegardless of what the schema definitions say, you\u0027re effectively redefining the idea of thresholds, with no new information.\n\n\u003e \n\u003e In regards to using the actual Sensor.Threshold.Warning/Critical interfaces, I couldn\u0027t see how to make that work: \n\u003e 1) I have 4 levels here, not just two.\n\nNot following.  There is IBMAmbientTemp-\u003ePerfLoss-\u003eTemp.  That looks like two levels of json to me.\n\nUnless you mean actual trigger levels, in which case, the existing json abstractions have you covered already, and there are examples of having 4 independent levels today (critical high/low and warning high/low).\nHere\u0027s an example of a sensor with 4 thresholds.\nhttps://github.com/openbmc/entity-manager/blob/9c7fd64642e4242d2422bd70abee04eda326e890/configurations/WFT%20Baseboard.json#L32\n\n\u003e 2) The \u0027WarningLow\u0027 parameter I suppose I could use as the TempReset value, but that isn\u0027t what it\u0027s defined to be used as.\n\nIn general the critical interfaces are used to define shutdown temperatures.\n\n\u003e  Not sure if other code uses it that way.\n\nThis is how a number of bmcs work, not just openbmc",
      "parentUuid": "cb1d9dcf_8ee5652a",
      "revId": "66077db346a3e0ae24af7d498571f66dbd06ac4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a9bc2c3_4a1ad14f",
        "filename": "schemas/IBM.json",
        "patchSetId": 1
      },
      "lineNbr": 199,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-16T16:51:17Z",
      "side": 1,
      "message": "How is the EPOW3 temperature different than the PerfLoss-\u003eTempReset temperature?",
      "revId": "66077db346a3e0ae24af7d498571f66dbd06ac4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3d9a419_c0ac24eb",
        "filename": "schemas/IBM.json",
        "patchSetId": 1
      },
      "lineNbr": 199,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2020-11-16T18:07:35Z",
      "side": 1,
      "message": "The perfLoss one is when our OCC starts throttling things, and that happens before it gets into EPOW conditions, which is where our operating systems are told about the alert and the impending shutdown.",
      "parentUuid": "6a9bc2c3_4a1ad14f",
      "revId": "66077db346a3e0ae24af7d498571f66dbd06ac4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8f77e6b_dfa11eab",
        "filename": "schemas/IBM.json",
        "patchSetId": 1
      },
      "lineNbr": 199,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-16T18:20:14Z",
      "side": 1,
      "message": "lets close on the other item first.  Considering the existing schemas can define as many thresholds as we need, I\u0027m not really following why we need more.",
      "parentUuid": "c3d9a419_c0ac24eb",
      "revId": "66077db346a3e0ae24af7d498571f66dbd06ac4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}