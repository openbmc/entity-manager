{
  "comments": [
    {
      "key": {
        "uuid": "707a6a5f_dc89bc87",
        "filename": "schemas/IBM.json",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-16T16:51:17Z",
      "side": 1,
      "message": "These four properties would normally be covered by critical and warning thresholds for said sensor.  Is there a reason that the existing thresholding didn\u0027t meet your needs for declaring warning and critical temperatures?",
      "revId": "66077db346a3e0ae24af7d498571f66dbd06ac4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb1d9dcf_8ee5652a",
        "filename": "schemas/IBM.json",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2020-11-16T18:07:35Z",
      "side": 1,
      "message": "From an entity-manager JSON point of view, since the Thresholds array is basically just free format strings, theoretically I could have just encoded these values into that, using special string labels.  That really bypasses the added value a schema provides though.\n\nIn regards to using the actual Sensor.Threshold.Warning/Critical interfaces, I couldn\u0027t see how to make that work: \n1) I have 4 levels here, not just two.\n2) The \u0027WarningLow\u0027 parameter I suppose I could use as the TempReset value, but that isn\u0027t what it\u0027s defined to be used as.  Not sure if other code uses it that way.",
      "parentUuid": "707a6a5f_dc89bc87",
      "revId": "66077db346a3e0ae24af7d498571f66dbd06ac4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cfbe1b11_30856c70",
        "filename": "schemas/IBM.json",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-16T18:20:14Z",
      "side": 1,
      "message": "\u003e From an entity-manager JSON point of view, since the Thresholds array is basically just free format strings, theoretically I could have just encoded these values into that, using special string labels.\n\nOr... you could use the existing labels as-is.  I\u0027m not following why these are different.\n\n\u003e  That really bypasses the added value a schema provides though.\n\nRegardless of what the schema definitions say, you\u0027re effectively redefining the idea of thresholds, with no new information.\n\n\u003e \n\u003e In regards to using the actual Sensor.Threshold.Warning/Critical interfaces, I couldn\u0027t see how to make that work: \n\u003e 1) I have 4 levels here, not just two.\n\nNot following.  There is IBMAmbientTemp-\u003ePerfLoss-\u003eTemp.  That looks like two levels of json to me.\n\nUnless you mean actual trigger levels, in which case, the existing json abstractions have you covered already, and there are examples of having 4 independent levels today (critical high/low and warning high/low).\nHere\u0027s an example of a sensor with 4 thresholds.\nhttps://github.com/openbmc/entity-manager/blob/9c7fd64642e4242d2422bd70abee04eda326e890/configurations/WFT%20Baseboard.json#L32\n\n\u003e 2) The \u0027WarningLow\u0027 parameter I suppose I could use as the TempReset value, but that isn\u0027t what it\u0027s defined to be used as.\n\nIn general the critical interfaces are used to define shutdown temperatures.\n\n\u003e  Not sure if other code uses it that way.\n\nThis is how a number of bmcs work, not just openbmc",
      "parentUuid": "cb1d9dcf_8ee5652a",
      "revId": "66077db346a3e0ae24af7d498571f66dbd06ac4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf1968a9_b1f96d83",
        "filename": "schemas/IBM.json",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2020-11-16T19:28:24Z",
      "side": 1,
      "message": "Say like for our EPOW3 section, the EPOW3 temp is 50, and the EPOW3 temp reset is 45.  So when the temperature is increasing, the EPOW3 handler doesn\u0027t do anything at all until it hits 50, then we\u0027ll stay in \u0027EPOW3\u0027 until it cools off past 45.\n\nI may be misunderstanding what \u0027lower critical\u0027 means, since isn\u0027t it the case that if I set lower critical to 45 then any temp under 45 is also critical?  How would I set up the existing interface to get the behavior I mentioned above?",
      "parentUuid": "cfbe1b11_30856c70",
      "revId": "66077db346a3e0ae24af7d498571f66dbd06ac4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d57be480_3ac3c64c",
        "filename": "schemas/IBM.json",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-16T20:21:29Z",
      "side": 1,
      "message": "\u003e Say like for our EPOW3 section, the EPOW3 temp is 50, and the EPOW3 temp reset is 45.  So when the temperature is increasing, the EPOW3 handler doesn\u0027t do anything at all until it hits 50, then we\u0027ll stay in \u0027EPOW3\u0027 until it cools off past 45.\n\u003e \n\u003e I may be misunderstanding what \u0027lower critical\u0027 means, since isn\u0027t it the case that if I set lower critical to 45 then any temp under 45 is also critical?  How would I set up the existing interface to get the behavior I mentioned above?\n\nSomething like:\n\n{\n    \"Address\": \"0x4B\",\n    \"Bus\": 6,\n    \"Name\": \"IntakeAirTemp\",\n    \"Thresholds\": [\n        {\n            \"Direction\": \"greater than\",\n            \"Name\": \"upper critical\",\n            \"Severity\": 1,\n            \"Value\": 50\n        },\n        {\n            \"Direction\": \"greater than\",\n            \"Name\": \"upper non critical\",\n            \"Severity\": 0,\n            \"Value\": 45\n        },\n        {\n            \"Direction\": \"less than\",\n            \"Name\": \"lower non critical\",\n            \"Severity\": 0,\n            \"Value\": 5\n        },\n        {\n            \"Direction\": \"less than\",\n            \"Name\": \"lower critical\",\n            \"Severity\": 1,\n            \"Value\": 0\n        }\n    ],\n    \"Type\": \"TMP75\"\n},\n\nThen another exposes section with:\n\n{\n    \"Name\": \"Chassis Host Monitor\",\n    \"SensorsToWatch\": [\n        {\n            \"Name\": \"IntakeAirTemp\",\n            \"Hysteresis\": 5\n            // Maybe add a severity field here? or can we just assume to use all severity 1 events?  Probably worth discussion.\n        }\n    ],\n    \"Type\": \"HostShutdownMonitor\"\n},\n\n\nDepending on your use cases, the second exposes might need some modifications/extended actions that can be set.  We also might discuss if hysteresis is better added to the thresholds, moving it out of the reactors control, but thusfar, sensors tend to be very regular, and all sensors of a given type seem to have the same, or a calculable hysteresis that\u0027s reasonable.",
      "parentUuid": "bf1968a9_b1f96d83",
      "revId": "66077db346a3e0ae24af7d498571f66dbd06ac4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5a57ac2_b9a40d2f",
        "filename": "schemas/IBM.json",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2020-11-16T21:39:28Z",
      "side": 1,
      "message": "I am actually using phosphor-virtual-sensors to put a virtual ambient temperature sensor on dbus that is basically the median of a handful of other regular temp sensors, so dbus-sensors will not be involved with   reading these thresholds or setting the Alarm properties.\n\nI was then going to put this proposed JSON on our chassis, and have another application, probably over in phosphor-fan or phosphor-power, watch that virtual sensor and compare it to these values, and then do IBM\u0027s requirements of PLDM alerts, notifying the OCC, creating phosphor event logs, shutting down after 2 different timeouts (EPOW3 and EPOW4), etc.",
      "parentUuid": "d57be480_3ac3c64c",
      "revId": "66077db346a3e0ae24af7d498571f66dbd06ac4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1960adcf_9aa8aa07",
        "filename": "schemas/IBM.json",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-16T21:46:13Z",
      "side": 1,
      "message": "\u003e I am actually using phosphor-virtual-sensors to put a virtual ambient temperature sensor on dbus that is basically the median of a handful of other regular temp sensors, so dbus-sensors will not be involved with   reading these thresholds or setting the Alarm properties.\n\u003e \n\u003e I was then going to put this proposed JSON on our chassis, and have another application, probably over in phosphor-fan or phosphor-power, watch that virtual sensor and compare it to these values, and then do IBM\u0027s requirements of PLDM alerts, notifying the OCC, creating phosphor event logs, shutting down after 2 different timeouts (EPOW3 and EPOW4), etc.\n\n\nAh, your problem makes a lot more sense now.  Sounds like phosphor-virtual-sensors needs EM support then.  It should be noted, I commented about this in the phosphor-virtual-sensors design review, to which the author said that it was designed for non-EM subscribers.  Which, fine by me, but it sounds like you\u0027re trying to do both.\n\nIMO, if you\u0027re going to combine phosphor-virtual-sensors with entity-manager, that\u0027s a much bigger discussion about \"static\" stacks, versus dynamic stacks, and we likely need to figure out where phosphor-virtual-sensor fits in cleanly (if at all).\n\nI\u0027d be against referencing any sensor name in a config that didn\u0027t have an associated entity-manager name, because it largely defeats the self-contained-config-file purpose of entity-manager to do so.  If you wanted to make phosphor-virtual-sensors entity-manager aware, that\u0027d probably be your path forward for something like that, although I realize that\u0027s a much bigger discussion than you were likely hoping for.",
      "parentUuid": "b5a57ac2_b9a40d2f",
      "revId": "66077db346a3e0ae24af7d498571f66dbd06ac4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b38bc8f4_85bc1ae6",
        "filename": "schemas/IBM.json",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2020-11-18T16:41:56Z",
      "side": 1,
      "message": "I can send a note to the list regarding virtual-sensors being able to read its config from entity-manager.\n\nThat leaves me with still needing some new threshold support that virtual sensors would make use of:\n\n1) Having 4 threshold levels/severities instead of just two\n2) Hysteresis\n\nWhat would you think of adding a new \u0027hysteresis\u0027 property to the existing threshold interfaces (and the new ones if you agree to those) and just default it to 0.  Support can then be added into dbus-sensors and phoshpor-hwmon later in the future if someone needs it there.\n\nI believe I would still need an IBMAmbientTemp schema to hold things like which power off delays to use for which thresholds.",
      "parentUuid": "1960adcf_9aa8aa07",
      "revId": "66077db346a3e0ae24af7d498571f66dbd06ac4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a9bc2c3_4a1ad14f",
        "filename": "schemas/IBM.json",
        "patchSetId": 1
      },
      "lineNbr": 199,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-16T16:51:17Z",
      "side": 1,
      "message": "How is the EPOW3 temperature different than the PerfLoss-\u003eTempReset temperature?",
      "revId": "66077db346a3e0ae24af7d498571f66dbd06ac4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3d9a419_c0ac24eb",
        "filename": "schemas/IBM.json",
        "patchSetId": 1
      },
      "lineNbr": 199,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2020-11-16T18:07:35Z",
      "side": 1,
      "message": "The perfLoss one is when our OCC starts throttling things, and that happens before it gets into EPOW conditions, which is where our operating systems are told about the alert and the impending shutdown.",
      "parentUuid": "6a9bc2c3_4a1ad14f",
      "revId": "66077db346a3e0ae24af7d498571f66dbd06ac4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8f77e6b_dfa11eab",
        "filename": "schemas/IBM.json",
        "patchSetId": 1
      },
      "lineNbr": 199,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-16T18:20:14Z",
      "side": 1,
      "message": "lets close on the other item first.  Considering the existing schemas can define as many thresholds as we need, I\u0027m not really following why we need more.",
      "parentUuid": "c3d9a419_c0ac24eb",
      "revId": "66077db346a3e0ae24af7d498571f66dbd06ac4a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}