{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2629aef3_599186d2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-07-14T13:55:15Z",
      "side": 1,
      "message": "Do you think we need to update `docs/associations` to cover the change?\n\nI am not sure if it is still up to date and referencing things like `BackplanePort` which i do not see configured anywhere.\n\n```\n[alexander@alexanderarchlinux entity-manager]$ rg BackplanePort\ndocs/associations.md\n21:      \"Type\": \"BackplanePort\"\n34:      \"ConnectsToType\": \"BackplanePort\",\n\ntest/test_topology.cpp\n20:        \"ConnectsToType\": \"BackplanePort\",\n28:        \"ConnectsToType\": \"BackplanePort\",\n37:        \"Name\": \"MyBackplanePort\",\n38:        \"Type\": \"BackplanePort\"\n```",
      "revId": "62f580e54feccffcfd90177a20129ac02ace8957",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83037588_790d85cb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1002065
      },
      "writtenOn": "2025-07-15T14:06:47Z",
      "side": 1,
      "message": "Also not sure about the situation with BackplanePort. It was not defined in the schema aswell. If we find agreement on the port names I would update the docs accordingly.",
      "parentUuid": "2629aef3_599186d2",
      "revId": "62f580e54feccffcfd90177a20129ac02ace8957",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65ab81c4_95245f06",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1002065
      },
      "writtenOn": "2025-07-16T17:13:32Z",
      "side": 1,
      "message": "I have added the \"Backplane\" identifier back to the schema as a more generic alternative to \"MB Upstream\" and \"Chassis\".",
      "parentUuid": "83037588_790d85cb",
      "revId": "62f580e54feccffcfd90177a20129ac02ace8957",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a8a4ae0_b4652ccd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-07-14T13:58:31Z",
      "side": 1,
      "message": "Maybe we can link to https://gerrit.openbmc.org/c/openbmc/entity-manager/+/81385/4 as an configuration example",
      "revId": "62f580e54feccffcfd90177a20129ac02ace8957",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8eea4b7e_64e5960a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1002065
      },
      "writtenOn": "2025-07-15T14:06:47Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "6a8a4ae0_b4652ccd",
      "revId": "62f580e54feccffcfd90177a20129ac02ace8957",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05a1ce31_3f282a02",
        "filename": "schemas/legacy.json",
        "patchSetId": 2
      },
      "lineNbr": 480,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-07-14T13:55:15Z",
      "side": 1,
      "message": "Since this `Port`, `ConnectsToType` and  `DownstreamPort` schemas will be used to\nconfigure topologies for current-gen and next-gen platforms with this change,\n\nmaybe it is worth it to move it from `legacy.json` to a new `topology.json` schema file in a separate patch.",
      "revId": "62f580e54feccffcfd90177a20129ac02ace8957",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8e28f0c_8e97d5b4",
        "filename": "schemas/legacy.json",
        "patchSetId": 2
      },
      "lineNbr": 480,
      "author": {
        "id": 1002065
      },
      "writtenOn": "2025-07-15T14:06:47Z",
      "side": 1,
      "message": "Sounds good (Y)",
      "parentUuid": "05a1ce31_3f282a02",
      "revId": "62f580e54feccffcfd90177a20129ac02ace8957",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5203f0b1_d5fca8d7",
        "filename": "schemas/legacy.json",
        "patchSetId": 2
      },
      "lineNbr": 480,
      "author": {
        "id": 1002065
      },
      "writtenOn": "2025-07-16T17:13:32Z",
      "side": 1,
      "message": "Done (https://gerrit.openbmc.org/c/openbmc/entity-manager/+/82075)",
      "parentUuid": "f8e28f0c_8e97d5b4",
      "revId": "62f580e54feccffcfd90177a20129ac02ace8957",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c2113c5_bf1eaf5c",
        "filename": "schemas/legacy.json",
        "patchSetId": 2
      },
      "lineNbr": 487,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-07-16T11:00:51Z",
      "side": 1,
      "message": "Since `Type` maps to a dbus interface (for most exposes records at least),\ndo you think it would be better to have another property to put the identifier?\n\nSince the identifier can be variable based on the regex and the `Type` is usually a fixed string.\n\nThis could help to avoid issues with the validator since different exposes records could accidentally overlap their regexes for `Type` if we start doing this.\n\nAlso to help folks quickly find which schema was actually configured in a config file.",
      "revId": "62f580e54feccffcfd90177a20129ac02ace8957",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f930f702_1a06714b",
        "filename": "schemas/legacy.json",
        "patchSetId": 2
      },
      "lineNbr": 487,
      "author": {
        "id": 1002065
      },
      "writtenOn": "2025-07-16T13:19:24Z",
      "side": 1,
      "message": "\u003e Since Type maps to a dbus interface (for most exposes records at least),\ndo you think it would be better to have another property to put the identifier?\n\nIdeally we would reuse the existing ones in order to not break other configs. Alternatively we could implement new definitions for upcoming platforms and document accoridingly. But I am not a huge fan of again having two options for achieving the same thing. \n\n\u003e Also to help folks quickly find which schema was actually configured in a config file.\n\nI think, refactoring topology definitions into their own json schema should suffice for folks to quickly find that out.",
      "parentUuid": "2c2113c5_bf1eaf5c",
      "revId": "62f580e54feccffcfd90177a20129ac02ace8957",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a6be7c1_a5303e54",
        "filename": "schemas/legacy.json",
        "patchSetId": 2
      },
      "lineNbr": 487,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-07-17T08:22:42Z",
      "side": 1,
      "message": "\u003e But I am not a huge fan of again having two options for achieving the same thing. \n\nFair. What if we extended `DownstreamPort` schema to have an optional `ConnectsToName` property.\n\nAnd then change the code in `topology.cpp` to prefer that notation and then look for an `MB Upstream Port` with that `Name` property.\n\nThen way we can use expressions with `$bus`, `$addr` without messing with the `Type` property.\n\n\nThat would be more consistent with the rest of the schemas since the `Name` is what becomes part of the object path and used to refer to things while `Type` is usually fixed.",
      "parentUuid": "f930f702_1a06714b",
      "revId": "62f580e54feccffcfd90177a20129ac02ace8957",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61b44073_1ae631a4",
        "filename": "schemas/legacy.json",
        "patchSetId": 2
      },
      "lineNbr": 492,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-07-14T13:55:15Z",
      "side": 1,
      "message": "Maybe have wildcard in the middle for variable substitution and expression evaluation?\n\nCurrently only `$bus` would be supported while `$addr` is also possible to appear in expressions.\nSo things like\n```\nMB Upstream ($bus+1)%3 Port\nMB Upstream $addr Port\n```\nwould not work.",
      "revId": "62f580e54feccffcfd90177a20129ac02ace8957",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4ec7592_d5e77919",
        "filename": "schemas/legacy.json",
        "patchSetId": 2
      },
      "lineNbr": 492,
      "author": {
        "id": 1002065
      },
      "writtenOn": "2025-07-15T14:06:47Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "61b44073_1ae631a4",
      "revId": "62f580e54feccffcfd90177a20129ac02ace8957",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "378207a0_e9605008",
        "filename": "schemas/legacy.json",
        "patchSetId": 2
      },
      "lineNbr": 492,
      "author": {
        "id": 1002065
      },
      "writtenOn": "2025-07-16T17:13:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c4ec7592_d5e77919",
      "revId": "62f580e54feccffcfd90177a20129ac02ace8957",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be5c040f_8df02355",
        "filename": "schemas/legacy.json",
        "patchSetId": 2
      },
      "lineNbr": 495,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-07-14T13:55:15Z",
      "side": 1,
      "message": "So in case we have \n\n`MB -\u003e Chassis` we use the `MB Upstream Port` and\nin case of \n`Chassis -\u003e Chassis` containment we use `Chassis Upstream Port` ?\n\nSince EM already knows what type of config something is `Type: Board` vs `Type: Chassis`, what do you think about only having one way to configure the \u0027contains\u0027 concept.",
      "revId": "62f580e54feccffcfd90177a20129ac02ace8957",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9e9e8ec_9191094c",
        "filename": "schemas/legacy.json",
        "patchSetId": 2
      },
      "lineNbr": 495,
      "author": {
        "id": 1002065
      },
      "writtenOn": "2025-07-15T14:06:47Z",
      "side": 1,
      "message": "\u003e So in case we have\n\n\u003e MB -\u003e Chassis we use the MB Upstream Port and\n\u003e in case of\n\u003e Chassis -\u003e Chassis containment we use Chassis Upstream Port ?\n\nCorrect. However, other port names could be added aswell (i.e Backplane Port) if needed.\n\n\u003e Since EM already knows what type of config something is Type: Board vs Type:  \u003e Chassis, what do you think about only having one way to configure the \u0027contains\u0027 \u003e concept.\n\nIn the sense of a single, generic port name used to create all associations?",
      "parentUuid": "be5c040f_8df02355",
      "revId": "62f580e54feccffcfd90177a20129ac02ace8957",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55316fb2_2dc63102",
        "filename": "schemas/legacy.json",
        "patchSetId": 2
      },
      "lineNbr": 495,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-07-16T11:00:51Z",
      "side": 1,
      "message": "Ok, after further discussion, i do not care about having one name as much anymore,\nas long as we document that these all represent the same concept (configuring the hardware topology).\n\n@ed@tanous.net what do you think?",
      "parentUuid": "c9e9e8ec_9191094c",
      "revId": "62f580e54feccffcfd90177a20129ac02ace8957",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}