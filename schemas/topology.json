{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$defs": {
        "Port": {
            "description": "https://github.com/openbmc/docs/blob/master/designs/physical-topology.md",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "$ref": "#/$defs/Types/Name"
                },
                "Type": {
                    "description": "This enum may be extended as described in the design",
                    "type": "string",
<<<<<<< PATCH SET (9e7533 cooling/cooled_by associations in entity-manager)
                    "pattern": "^[A-Za-z].*Port$"
=======
                    "enum": ["MB Upstream Port", "BackplanePort"]
>>>>>>> BASE      (e66518 entity-manager: Add meson option to cache config)
                }
            },
            "required": ["Name", "Type"],
            "type": "object"
        },
        "DownstreamPort": {
            "description": "https://github.com/openbmc/docs/blob/master/designs/physical-topology.md",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "$ref": "#/$defs/Types/Name"
                },
                "ConnectsToType": {
                    "description": "Should be equal to the 'Type' property on the upstream port",
                    "type": "string",
<<<<<<< PATCH SET (9e7533 cooling/cooled_by associations in entity-manager)
                    "pattern": "^[A-Za-z].*Port$"
=======
                    "enum": ["MB Upstream Port", "BackplanePort"]
>>>>>>> BASE      (e66518 entity-manager: Add meson option to cache config)
                },
                "PowerPort": {
                    "type": "boolean"
                },
                "FanPort": {
                    "type": "boolean"
                },
                "Type": {
                    "type": "string",
                    "const": "DownstreamPort"
                }
            },
            "required": ["Name", "Type", "ConnectsToType"],
            "type": "object"
        },
        "Types": {
            "Name": {
                "type": "string"
            }
        }
    }
}
