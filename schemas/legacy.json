{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$defs": {
        "ExitAirTempSensor": {
            "description": "implemented in dbus-sensors: ExitAirTempSensor",
            "additionalProperties": false,
            "properties": {
                "AlphaF": {
                    "type": "number"
                },
                "AlphaS": {
                    "type": "number"
                },
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "PowerFactorMax": {
                    "$ref": "types.json#/$defs/Types/PowerFactorMax"
                },
                "PowerFactorMin": {
                    "$ref": "types.json#/$defs/Types/PowerFactorMin"
                },
                "QMax": {
                    "type": "number"
                },
                "QMin": {
                    "type": "number"
                },
                "Thresholds": {
                    "$ref": "types.json#/$defs/Types/Thresholds"
                },
                "Type": {
                    "type": "string",
                    "const": "ExitAirTempSensor"
                }
            },
            "required": [
                "Name",
                "Type",
                "AlphaF",
                "AlphaS",
                "PowerFactorMax",
                "PowerFactorMin",
                "QMax",
                "QMin"
            ],
            "type": "object"
        },
        "CFMSensor": {
            "additionalProperties": false,
            "properties": {
                "C1": {
                    "type": "number"
                },
                "C2": {
                    "type": "number"
                },
                "MaxCFM": {
                    "type": "number"
                },
                "TachMaxPercent": {
                    "type": "number"
                },
                "TachMinPercent": {
                    "type": "number"
                },
                "Tachs": {
                    "$ref": "types.json#/$defs/Types/Tachs"
                },
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Type": {
                    "type": "string",
                    "const": "CFMSensor"
                }
            },
            "required": ["Name", "Type"],
            "type": "object"
        },
        "FanRedundancy": {
            "additionalProperties": false,
            "properties": {
                "AllowedFailures": {
                    "$ref": "types.json#/$defs/Types/AllowedFailures"
                },
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Type": {
                    "type": "string",
                    "const": "FanRedundancy"
                }
            },
            "required": ["Name", "Type"],
            "type": "object"
        },
        "PURedundancy": {
            "additionalProperties": false,
            "properties": {
                "RedundantCount": {
                    "$ref": "types.json#/$defs/Types/RedundantCount"
                },
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Type": {
                    "type": "string",
                    "const": "PURedundancy"
                }
            },
            "required": ["RedundantCount", "Name", "Type"],
            "type": "object"
        },
        "ChassisIntrusionSensor": {
            "description": "implemented in dbus-sensors: ChassisIntrusionSensor",
            "additionalProperties": false,
            "properties": {
                "Address": {
                    "$ref": "types.json#/$defs/Types/Address"
                },
                "Bus": {
                    "$ref": "types.json#/$defs/Types/Bus"
                },
                "Class": {
                    "$ref": "types.json#/$defs/Types/Class"
                },
                "GpioPolarity": {
                    "$ref": "types.json#/$defs/Types/GpioPolarity"
                },
                "Rearm": {
                    "enum": ["Automatic", "Manual"]
                },
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Type": {
                    "type": "string",
                    "const": "ChassisIntrusionSensor"
                }
            },
            "required": ["Name", "Type", "Class"],
            "type": "object"
        },
        "AspeedFan": {
            "additionalProperties": false,
            "properties": {
                "BindConnector": {
                    "$ref": "types.json#/$defs/Types/BindConnector"
                },
                "Index": {
                    "$ref": "types.json#/$defs/Types/Index"
                },
                "PowerState": {
                    "$ref": "types.json#/$defs/Types/PowerState"
                },
                "Connector": {
                    "$ref": "types.json#/$defs/Types/Connector"
                },
                "EntityId": {
                    "$ref": "types.json#/$defs/Types/EntityId"
                },
                "EntityInstance": {
                    "$ref": "types.json#/$defs/Types/EntityInstance"
                },
                "Presence": {
                    "$ref": "types.json#/$defs/Types/Presence"
                },
                "MaxReading": {
                    "$ref": "types.json#/$defs/Types/MaxReading"
                },
                "Thresholds": {
                    "$ref": "types.json#/$defs/Types/Thresholds"
                },
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Type": {
                    "type": "string",
                    "const": "AspeedFan"
                }
            },
            "required": ["Name", "Type"],
            "type": "object"
        },
        "I2CFan": {
            "additionalProperties": false,
            "properties": {
                "BindConnector": {
                    "$ref": "types.json#/$defs/Types/BindConnector"
                },
                "Address": {
                    "$ref": "types.json#/$defs/Types/Address"
                },
                "Bus": {
                    "$ref": "types.json#/$defs/Types/Bus"
                },
                "EntityId": {
                    "$ref": "types.json#/$defs/Types/EntityId"
                },
                "EntityInstance": {
                    "$ref": "types.json#/$defs/Types/EntityInstance"
                },
                "Index": {
                    "$ref": "types.json#/$defs/Types/Index"
                },
                "PowerState": {
                    "$ref": "types.json#/$defs/Types/PowerState"
                },
                "Presence": {
                    "$ref": "types.json#/$defs/Types/Presence"
                },
                "MaxReading": {
                    "$ref": "types.json#/$defs/Types/MaxReading"
                },
                "Connector": {
                    "$ref": "types.json#/$defs/Types/Connector"
                },
                "Thresholds": {
                    "$ref": "types.json#/$defs/Types/Thresholds"
                },
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Type": {
                    "type": "string",
                    "const": "I2CFan"
                }
            },
            "required": ["Name", "Type"],
            "type": "object"
        },
        "NuvotonFan": {
            "additionalProperties": false,
            "properties": {
                "EntityId": {
                    "$ref": "types.json#/$defs/Types/EntityId"
                },
                "EntityInstance": {
                    "$ref": "types.json#/$defs/Types/EntityInstance"
                },
                "Index": {
                    "$ref": "types.json#/$defs/Types/Index"
                },
                "PowerState": {
                    "$ref": "types.json#/$defs/Types/PowerState"
                },
                "MaxReading": {
                    "$ref": "types.json#/$defs/Types/MaxReading"
                },
                "Connector": {
                    "$ref": "types.json#/$defs/Types/Connector"
                },
                "Thresholds": {
                    "$ref": "types.json#/$defs/Types/Thresholds"
                },
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Type": {
                    "type": "string",
                    "const": "NuvotonFan"
                }
            },
            "required": ["Name", "Type", "Connector"],
            "type": "object"
        },
        "XeonCPU": {
            "description": "implemented in dbus-sensors: IntelCPUSensor",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Address": {
                    "$ref": "types.json#/$defs/Types/Address"
                },
                "Bus": {
                    "$ref": "types.json#/$defs/Types/Bus"
                },
                "PowerState": {
                    "$ref": "types.json#/$defs/Types/PowerState"
                },
                "Thresholds": {
                    "$ref": "types.json#/$defs/Types/Thresholds"
                },
                "DtsCritOffset": {
                    "$ref": "types.json#/$defs/Types/DtsCritOffset"
                },
                "PresenceGpio": {
                    "$ref": "types.json#/$defs/Types/PresenceGpio"
                },
                "CpuID": {
                    "$ref": "types.json#/$defs/Types/CpuID"
                },
                "Type": {
                    "type": "string",
                    "const": "XeonCPU"
                }
            },
            "required": ["Name", "Type", "CpuID", "Address"],
            "type": "object"
        },
        "IpmbSensor": {
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Class": {
                    "$ref": "types.json#/$defs/Types/Class"
                },
                "Address": {
                    "$ref": "types.json#/$defs/Types/Address"
                },
                "Thresholds": {
                    "$ref": "types.json#/$defs/Types/Thresholds"
                },
                "HostSMbusIndex": {
                    "$ref": "types.json#/$defs/Types/HostSMbusIndex"
                },
                "PowerState": {
                    "$ref": "types.json#/$defs/Types/PowerState"
                },
                "SensorType": {
                    "$ref": "types.json#/$defs/Types/SensorType"
                },
                "ScaleValue": {
                    "$ref": "types.json#/$defs/Types/ScaleValue"
                },
                "OffsetValue": {
                    "$ref": "types.json#/$defs/Types/OffsetValue"
                },
                "Type": {
                    "type": "string",
                    "const": "IpmbSensor"
                }
            },
            "required": ["Name", "Type", "Address", "Class"],
            "type": "object"
        },
        "I2CMux": {
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Bus": {
                    "$ref": "types.json#/$defs/Types/Bus"
                },
                "Address": {
                    "$ref": "types.json#/$defs/Types/Address"
                },
                "ChannelNames": {
                    "$ref": "types.json#/$defs/Types/ChannelNames"
                },
                "Type": {
                    "type": "string",
                    "enum": [
                        "PCA9543Mux",
                        "PCA9544Mux",
                        "PCA9545Mux",
                        "PCA9546Mux"
                    ]
                }
            },
            "required": ["Name", "Type", "Address", "Bus", "ChannelNames"],
            "type": "object"
        },
        "Gpio": {
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Index": {
                    "$ref": "types.json#/$defs/Types/Index"
                },
                "Direction": {
                    "type": "string"
                },
                "Polarity": {
                    "$ref": "types.json#/$defs/Types/Polarity"
                },
                "Type": {
                    "type": "string",
                    "const": "Gpio"
                }
            },
            "required": ["Name", "Type", "Index", "Direction", "Polarity"],
            "type": "object"
        },
        "MultiNodeID": {
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "GpioPins": {
                    "$ref": "types.json#/$defs/Types/GpioPins"
                },
                "Type": {
                    "type": "string",
                    "const": "MultiNodeID"
                }
            },
            "required": ["Name", "Type", "GpioPins"],
            "type": "object"
        },
        "MultiNodePresence": {
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Bus": {
                    "$ref": "types.json#/$defs/Types/Bus"
                },
                "Address": {
                    "$ref": "types.json#/$defs/Types/Address"
                },
                "Type": {
                    "type": "string",
                    "const": "MultiNodePresence"
                }
            },
            "required": ["Name", "Type", "Bus", "Address"],
            "type": "object"
        },
        "HostCpuUtilization": {
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Polling": {
                    "$ref": "types.json#/$defs/Types/Polling"
                },
                "Type": {
                    "type": "string",
                    "const": "HostCpuUtilization"
                }
            },
            "required": ["Name", "Type", "Polling"],
            "type": "object"
        },
        "ExternalSensor": {
            "description": "implemented in dbus-sensors: ExternalSensor",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Timeout": {
                    "$ref": "types.json#/$defs/Types/Timeout"
                },
                "Units": {
                    "$ref": "types.json#/$defs/Types/Units"
                },
                "MaxValue": {
                    "$ref": "types.json#/$defs/Types/MaxValue"
                },
                "MinValue": {
                    "$ref": "types.json#/$defs/Types/MinValue"
                },
                "EntityId": {
                    "$ref": "types.json#/$defs/Types/EntityId"
                },
                "EntityInstance": {
                    "$ref": "types.json#/$defs/Types/EntityInstance"
                },
                "Type": {
                    "type": "string",
                    "const": "ExternalSensor"
                }
            },
            "required": ["Name", "Type", "Units", "EntityId", "EntityInstance"],
            "type": "object"
        },
        "Port": {
            "description": "https://github.com/openbmc/docs/blob/master/designs/physical-topology.md",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Type": {
                    "description": "This enum may be extended as described in the design",
                    "type": "string",
                    "enum": ["MB Upstream Port"]
                }
            },
            "required": ["Name", "Type"],
            "type": "object"
        },
        "DownstreamPort": {
            "description": "https://github.com/openbmc/docs/blob/master/designs/physical-topology.md",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "ConnectsToType": {
                    "description": "Should be equal to the 'Type' property on the upstream port",
                    "$ref": "types.json#/$defs/Types/ConnectsToType"
                },
                "PowerPort": {
                    "$ref": "types.json#/$defs/Types/PowerPort"
                },
                "Type": {
                    "type": "string",
                    "const": "DownstreamPort"
                }
            },
            "required": ["Name", "Type", "ConnectsToType"],
            "type": "object"
        },
        "PSUPresence": {
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Bus": {
                    "$ref": "types.json#/$defs/Types/Bus"
                },
                "Address": {
                    "oneOf": [
                        {
                            "$ref": "types.json#/$defs/Types/Address"
                        },
                        {
                            "$ref": "types.json#/$defs/Types/AddressArray"
                        }
                    ]
                },
                "Type": {
                    "const": "PSUPresence"
                }
            },
            "required": ["Name", "Type", "Bus", "Address"],
            "type": "object"
        },
        "EmmcDevice": {
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Type": {
                    "const": "EmmcDevice"
                }
            },
            "required": ["Name", "Type"],
            "type": "object"
        },
        "IpmbDevice": {
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Bus": {
                    "$ref": "types.json#/$defs/Types/Bus"
                },
                "Address": {
                    "$ref": "types.json#/$defs/Types/Address"
                },
                "Class": {
                    "$ref": "types.json#/$defs/Types/Class"
                },
                "PowerState": {
                    "$ref": "types.json#/$defs/Types/PowerState"
                },
                "Type": {
                    "const": "IpmbDevice"
                }
            },
            "required": ["Name", "Type", "Bus", "Address", "Class"],
            "type": "object"
        },
        "IpmbPowerMonitor": {
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Bus": {
                    "$ref": "types.json#/$defs/Types/Bus"
                },
                "Address": {
                    "$ref": "types.json#/$defs/Types/Address"
                },
                "Class": {
                    "$ref": "types.json#/$defs/Types/Class"
                },
                "Type": {
                    "const": "IpmbPowerMonitor"
                }
            },
            "required": ["Name", "Type", "Bus", "Address", "Class"],
            "type": "object"
        },
        "ADC": {
            "description": "implemented in dbus-sensors: ADCSensor",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "BridgeGpio": {
                    "$ref": "types.json#/$defs/Types/BridgeGpio"
                },
                "PowerState": {
                    "$ref": "types.json#/$defs/Types/PowerState"
                },
                "EntityId": {
                    "$ref": "types.json#/$defs/Types/EntityId"
                },
                "EntityInstance": {
                    "$ref": "types.json#/$defs/Types/EntityInstance"
                },
                "Index": {
                    "$ref": "types.json#/$defs/Types/Index"
                },
                "PollRate": {
                    "$ref": "types.json#/$defs/Types/PollRate"
                },
                "CPURequired": {
                    "$ref": "types.json#/$defs/Types/CPURequired"
                },
                "PresenceGpio": {
                    "$ref": "types.json#/$defs/Types/PresenceGpio"
                },
                "MaxValue": {
                    "$ref": "types.json#/$defs/Types/MaxValue"
                },
                "MinValue": {
                    "$ref": "types.json#/$defs/Types/MinValue"
                },
                "ScaleFactor": {
                    "$ref": "types.json#/$defs/Types/ScaleFactor"
                },
                "Thresholds": {
                    "$ref": "types.json#/$defs/Types/Thresholds"
                },
                "Type": {
                    "const": "ADC"
                }
            },
            "required": ["Name", "Type", "Index"],
            "type": "object"
        },
        "TempSensor": {
            "description": "implemented in dbus-sensors: HwmonTempSensor",
            "additionalProperties": false,
            "patternProperties": {
                "Name([1-9][0-9]*)?$": {
                    "$ref": "types.json#/$defs/Types/Name"
                }
            },
            "properties": {
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Address": {
                    "$ref": "types.json#/$defs/Types/Address"
                },
                "Bus": {
                    "$ref": "types.json#/$defs/Types/Bus"
                },
                "EntityId": {
                    "$ref": "types.json#/$defs/Types/EntityId"
                },
                "EntityInstance": {
                    "$ref": "types.json#/$defs/Types/EntityInstance"
                },
                "PowerState": {
                    "$ref": "types.json#/$defs/Types/PowerState"
                },
                "CPURequired": {
                    "$ref": "types.json#/$defs/Types/CPURequired"
                },
                "Labels": {
                    "$ref": "types.json#/$defs/Types/Labels"
                },
                "PollRate": {
                    "$ref": "types.json#/$defs/Types/PollRate"
                },
                "MinValue": {
                    "$ref": "types.json#/$defs/Types/MinValue"
                },
                "MaxValue": {
                    "$ref": "types.json#/$defs/Types/MaxValue"
                },
                "Thresholds": {
                    "$ref": "types.json#/$defs/Types/Thresholds"
                },
                "Type": {
                    "enum": [
                        "ADM1021",
                        "DPS310",
                        "EMC1403",
                        "EMC1412",
                        "EMC1413",
                        "EMC1414",
                        "HDC1080",
                        "JC42",
                        "LM75A",
                        "LM95234",
                        "MAX31725",
                        "MAX31730",
                        "MAX6581",
                        "MAX6654",
                        "MAX6639",
                        "MCP9600",
                        "NCT6779",
                        "NCT7802",
                        "PT5161L",
                        "SBTSI",
                        "SI7020",
                        "TMP100",
                        "TMP1075",
                        "TMP112",
                        "TMP175",
                        "TMP411",
                        "TMP421",
                        "TMP432",
                        "TMP441",
                        "TMP461",
                        "TMP464",
                        "TMP468",
                        "TMP75",
                        "W83773G"
                    ]
                }
            },
            "required": ["Name", "Type", "Bus", "Address"],
            "type": "object"
        },
        "NVME1000": {
            "description": "implemented in dbus-sensors: NVMEeSensor",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Bus": {
                    "$ref": "types.json#/$defs/Types/Bus"
                },
                "Address": {
                    "$ref": "types.json#/$defs/Types/Address"
                },
                "PowerState": {
                    "$ref": "types.json#/$defs/Types/PowerState"
                },
                "Thresholds": {
                    "$ref": "types.json#/$defs/Types/Thresholds"
                },
                "Type": {
                    "const": "NVME1000"
                }
            },
            "required": ["Name", "Type", "Bus", "Address"],
            "type": "object"
        },
        "EEPROM": {
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Bus": {
                    "$ref": "types.json#/$defs/Types/Bus"
                },
                "Address": {
                    "$ref": "types.json#/$defs/Types/Address"
                },
                "Type": {
                    "enum": [
                        "EEPROM",
                        "EEPROM_24C01",
                        "EEPROM_24C02",
                        "EEPROM_24C04",
                        "EEPROM_24C08",
                        "EEPROM_24C16",
                        "EEPROM_24C32",
                        "EEPROM_24C64",
                        "EEPROM_24C128",
                        "EEPROM_24C256"
                    ]
                }
            },
            "required": ["Name", "Type", "Bus", "Address"],
            "type": "object"
        },
        "PSUSensor": {
            "description": "implemented in dbus-sensors: PSUSensor",
            "additionalProperties": false,
            "patternProperties": {
                "Name(1[0-7]|[1-9])?$": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "(vin|vmon|iin|pin|maxpin)_Name$": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "(in|in_voltage|vout)(1[0-7]|[0-9])_Name$": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "(curr|iin|iout|pin|pout|power|temp)(1[0-7]|[1-9])_Name$": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "(in|in_voltage)(1[0-7]|[0-9])_Scale$": {
                    "$ref": "types.json#/$defs/Types/ScaleValue"
                },
                "(curr|power|iout)(1[0-7]|[1-9])_Scale$": {
                    "$ref": "types.json#/$defs/Types/ScaleValue"
                },
                "in(1[0-7]|[0-9])_PowerState$": {
                    "$ref": "types.json#/$defs/Types/PowerState"
                },
                "(in|vout|in_voltage)(1[0-7]|[0-9])_(Min|Max)$": {
                    "$ref": "types.json#/$defs/Types/MinMaxType"
                },
                "(iin|vin|vmon|curr|iout|pin|pout|temp)(1[0-7]|[1-9])?_(Min|Max)$": {
                    "$ref": "types.json#/$defs/Types/MinMaxType"
                },
                "power(1[0-7]|[1-9])?_Max$": {
                    "$ref": "types.json#/$defs/Types/MinMaxType"
                },
                "(power|curr|iout|pout|pin)(1[0-7]|[1-9])?_Offset$": {
                    "$ref": "types.json#/$defs/Types/OffsetType"
                }
            },
            "properties": {
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "EntityId": {
                    "$ref": "types.json#/$defs/Types/EntityId"
                },
                "EntityInstance": {
                    "$ref": "types.json#/$defs/Types/EntityInstance"
                },
                "CPURequired": {
                    "$ref": "types.json#/$defs/Types/CPURequired"
                },
                "maxiout1_Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "fan1_Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "pin_Scale": {
                    "$ref": "types.json#/$defs/Types/ScaleValue"
                },
                "pout1_Scale": {
                    "$ref": "types.json#/$defs/Types/ScaleValue"
                },
                "Bus": {
                    "$ref": "types.json#/$defs/Types/Bus"
                },
                "Address": {
                    "$ref": "types.json#/$defs/Types/Address"
                },
                "BridgeGpio": {
                    "$ref": "types.json#/$defs/Types/BridgeGpio"
                },
                "CurrScaleFactor": {
                    "$ref": "types.json#/$defs/Types/CurrScaleFactor"
                },
                "InScaleFactor": {
                    "$ref": "types.json#/$defs/Types/InScaleFactor"
                },
                "Labels": {
                    "$ref": "types.json#/$defs/Types/Labels"
                },
                "SlotId": {
                    "$ref": "types.json#/$defs/Types/SlotId"
                },
                "PowerState": {
                    "$ref": "types.json#/$defs/Types/PowerState"
                },
                "PowerScaleFactor": {
                    "$ref": "types.json#/$defs/Types/PowerScaleFactor"
                },
                "Polling": {
                    "$ref": "types.json#/$defs/Types/Polling"
                },
                "PollRate": {
                    "$ref": "types.json#/$defs/Types/PollRate"
                },
                "Thresholds": {
                    "$ref": "types.json#/$defs/Types/Thresholds"
                },
                "Type": {
                    "enum": [
                        "ADC128D818",
                        "ADM1266",
                        "ADM1272",
                        "ADM1275",
                        "ADM1278",
                        "ADM1281",
                        "ADM1293",
                        "ADS1015",
                        "ADS7830",
                        "AHE50DC_FAN",
                        "BMR490",
                        "cffps",
                        "cffps1",
                        "cffps2",
                        "cffps3",
                        "CRPS185",
                        "DPS800",
                        "INA219",
                        "INA230",
                        "INA233",
                        "INA238",
                        "IPSPS1",
                        "IR35221",
                        "IR38060",
                        "IR38164",
                        "IR38263",
                        "ISL28022",
                        "ISL68137",
                        "ISL68220",
                        "ISL68223",
                        "ISL69225",
                        "ISL69243",
                        "ISL69260",
                        "ISL69269",
                        "LM25066",
                        "LM5066I",
                        "LTC2945",
                        "LTC4282",
                        "LTC4286",
                        "LTC4287",
                        "MAX5970",
                        "MAX11607",
                        "MAX11615",
                        "MAX11617",
                        "MAX16601",
                        "MAX20710",
                        "MAX20730",
                        "MAX20734",
                        "MAX20796",
                        "MAX34451",
                        "MP2856",
                        "MP2857",
                        "MP2971",
                        "MP2973",
                        "MP2975",
                        "MP5023",
                        "MP5990",
                        "MPQ8785",
                        "NCP4200",
                        "PLI1209BC",
                        "pmbus",
                        "PXE1610",
                        "RAA228000",
                        "RAA228004",
                        "RAA228228",
                        "RAA228620",
                        "RAA229001",
                        "RAA229004",
                        "RAA229126",
                        "RTQ6056",
                        "SBRMI",
                        "smpro_hwmon",
                        "SY24655",
                        "TDA38640",
                        "TPS53679",
                        "TPS546D24",
                        "XDP710",
                        "XDPE11280",
                        "XDPE12284",
                        "XDPE132G5C",
                        "XDPE152C4"
                    ]
                }
            },
            "required": ["Name", "Type"],
            "type": "object"
        },
        "NMSensor": {
            "description": "unknown purpose",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Type": {
                    "const": "NMSensor"
                }
            }
        },
        "IntelHsbpFruDevice": {
            "description": "unknown purpose",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Type": {
                    "const": "IntelHsbpFruDevice"
                }
            }
        },
        "IntelHsbpTempSensor": {
            "description": "unknown purpose",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Type": {
                    "const": "IntelHsbpTempSensor"
                }
            }
        },
        "IntelHsbpCPLD": {
            "description": "https://github.com/openbmc/s2600wf-misc",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Address": {
                    "$ref": "types.json#/$defs/Types/Address"
                },
                "Bus": {
                    "$ref": "types.json#/$defs/Types/Bus"
                },
                "Type": {
                    "const": "Intel HSBP CPLD"
                }
            }
        },
        "GenericSMBusMux": {
            "description": "unknown purpose",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Address": {
                    "$ref": "types.json#/$defs/Types/Address"
                },
                "Type": {
                    "const": "GenericSMBusMux"
                }
            }
        },
        "BMC": {
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Type": {
                    "const": "BMC"
                }
            }
        },
        "UCD90XXX": {
            "description": "used in https://github.com/openbmc/phosphor-power",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "$ref": "types.json#/$defs/Types/Name"
                },
                "Address": {
                    "$ref": "types.json#/$defs/Types/Address"
                },
                "Bus": {
                    "$ref": "types.json#/$defs/Types/Bus"
                },
                "Type": {
                    "enum": ["UCD90160", "UCD90320"]
                }
            }
        }
    }
}
