{
  "comments": [
    {
      "key": {
        "uuid": "4e69d0d8_d29389f4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 17,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-04-20T16:23:55Z",
      "side": 1,
      "message": "See previous comment.  I\u0027m not sure tying these to entities is going to work in the long run.  Entities are for specific devices, and supported configurations really feels like a non-entity thing, or its own entity that\u0027s standalone from the collection.  Said another way, a chassis itself doesn\u0027t not denote that it has a required supported config.  Especially as systems age, there will be those that want to reuse a chassis, but not require a supported configuration.\n\nThe supported config enforcement stuff probably needs to come from compile time, where you\u0027d basically say \"I\u0027d like to enforce supported configurations\", and the \"Supported\" list in your below somewhat becomes your probe.",
      "range": {
        "startLine": 16,
        "startChar": 60,
        "endLine": 17,
        "endChar": 12
      },
      "revId": "78091a73b60c9c006bc96bbb00f2a22d1219e234",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33759117_83130c82",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 17,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-04-20T18:24:34Z",
      "side": 1,
      "message": "Trying to understand how the probe should work, because even if components were missing, we still want the Supported d-bus object to show up since it\u0027s the list of expected components. Maybe some way to have a wildcard Probe that always makes the object show up, and add specific Supported configuration json files based on compile flags?",
      "parentUuid": "4e69d0d8_d29389f4",
      "range": {
        "startLine": 16,
        "startChar": 60,
        "endLine": 17,
        "endChar": 12
      },
      "revId": "78091a73b60c9c006bc96bbb00f2a22d1219e234",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01722120_e73dabc5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 17,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-04-21T17:31:54Z",
      "side": 1,
      "message": "We can probably do the Probe by OR\u0027ing each component, like \"Rainier chassis\" OR \"Power supply X\", then the configurations d-bus object would show up.\n\nFor enforcing the supported config at compile time, yeah i guess compiling the supported json files based on a compile flag, or perhaps adding a property to an existing configurations json file, like Supported\u003dTrue.",
      "parentUuid": "33759117_83130c82",
      "range": {
        "startLine": 16,
        "startChar": 60,
        "endLine": 17,
        "endChar": 12
      },
      "revId": "78091a73b60c9c006bc96bbb00f2a22d1219e234",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "159a8c5c_a54539af",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 1000502
      },
      "writtenOn": "2021-04-19T21:11:33Z",
      "side": 1,
      "message": "I don\u0027t understand how the Severity cases interact with multiple supported configurations. If you match the 1000W config, does that trigger the error on the 2000W config? If you match none of them, does that trigger the errors an all of them? Trigger Critical because it\u0027s more severe than Error?",
      "revId": "78091a73b60c9c006bc96bbb00f2a22d1219e234",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45184c7c_9c5a3534",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-04-20T15:17:48Z",
      "side": 1,
      "message": "My thought is that the power supply monitoring app for example, would read the model that\u0027s plugged in the system, then query the supported configurations to see which one (if any) had that model listed, then check the number of times listed to verify it has the right number of power supplies, therefore it wouldn\u0027t trigger the error on the 2000W config. If none match, yeah it\u0027s up to the app on what to do, like logging an error or failing, because it means the system is running in an unsupported configuration. Yeah, Critical is more severe than Error, just using the standard severities from syslog/logging which are also used in redfish.",
      "parentUuid": "159a8c5c_a54539af",
      "revId": "78091a73b60c9c006bc96bbb00f2a22d1219e234",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c0a3ca6_e370bdf9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 1000502
      },
      "writtenOn": "2021-04-20T18:42:06Z",
      "side": 1,
      "message": "Ok, so you\u0027re imaging match based on entity and error based on quantity. That makes sense.\n\nWhat are your thoughts on more heterogeneous configurations? For example, if I have a system with 10 PCIe slots, I might support 1 X, 3 Y\u0027s, and 6 Z\u0027s?",
      "parentUuid": "45184c7c_9c5a3534",
      "revId": "78091a73b60c9c006bc96bbb00f2a22d1219e234",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee9e98f2_5d429823",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-04-21T17:31:54Z",
      "side": 1,
      "message": "I\u0027d say based on the latest feedback from Ed, the Supported set would look like:\n[\"X\", \"Y\", \"Y\", \"Y\", \"Z\", \"Z\", \"Z\", \"Z\", \"Z\", \"Z\"].",
      "parentUuid": "9c0a3ca6_e370bdf9",
      "revId": "78091a73b60c9c006bc96bbb00f2a22d1219e234",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}