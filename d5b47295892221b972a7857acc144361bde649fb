{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "70ab47e5_7a9cf17e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-03T16:20:04Z",
      "side": 1,
      "message": "Overall in support.  Just want to document how long it\u0027s been this way.",
      "revId": "d5b47295892221b972a7857acc144361bde649fb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad81c782_585604db",
        "filename": "configurations/meta/yv4/yosemite4_cpu.json",
        "patchSetId": 4
      },
      "lineNbr": 5,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-03T16:20:04Z",
      "side": 1,
      "message": "What kind of CPU has an ipmi fru for its model detection and serial number?\n\nThis probably should be Board?",
      "range": {
        "startLine": 5,
        "startChar": 13,
        "endLine": 5,
        "endChar": 16
      },
      "revId": "d5b47295892221b972a7857acc144361bde649fb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "41b4af99_989d18ee",
        "filename": "configurations/meta/yv4/yosemite4_cpu.json",
        "patchSetId": 4
      },
      "lineNbr": 5,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-10-03T16:35:27Z",
      "side": 1,
      "message": "We program the CPU serial number into the \"Sentinel Dome\" card (which is the compute card that has the CPU, memory and BIC on it).  The CPU is not a FRU, so this cannot change.",
      "parentUuid": "ad81c782_585604db",
      "range": {
        "startLine": 5,
        "startChar": 13,
        "endLine": 5,
        "endChar": 16
      },
      "revId": "d5b47295892221b972a7857acc144361bde649fb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f7c2e8a_41860922",
        "filename": "configurations/meta/yv4/yosemite4_cpu.json",
        "patchSetId": 4
      },
      "lineNbr": 5,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-03T17:32:15Z",
      "side": 1,
      "message": "\u003e The CPU is not a FRU, so this cannot change.\n\nBut the \"sentiel dome\" card... is a card (ie board), right?  The CPU is just soldered onto the board?  That generally would mean you have one file of type board for that sentinel card, and something similar to Exposes \u003d XeonSocket to denote the CPU type (presumably not a xeon in this case, but you\u0027d use socket all the same even for soldered.).",
      "parentUuid": "41b4af99_989d18ee",
      "range": {
        "startLine": 5,
        "startChar": 13,
        "endLine": 5,
        "endChar": 16
      },
      "revId": "d5b47295892221b972a7857acc144361bde649fb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2d932cd7_4351d9eb",
        "filename": "configurations/meta/yv4/yosemite4_cpu.json",
        "patchSetId": 4
      },
      "lineNbr": 5,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-10-03T17:57:30Z",
      "side": 1,
      "message": "There is a separate EM file for the SD card and a separate EM file for the SD \"chassis\" (being the hunk of metal that it is all enclosed in).  All 3 entities (CPU, SD board, SD chassis) come from the same EEPROM.\n\nChassis:\nyosemite4_sentineldome_chassis.json\n\nBoard variants:\nyosemite4_sentineldome_t1.json\nyosemite4_sentineldome_t1_retimer.json\nyosemite4_sentineldome_t2.json\nyosemite4_sentineldome_t2_retimer.json",
      "parentUuid": "2f7c2e8a_41860922",
      "range": {
        "startLine": 5,
        "startChar": 13,
        "endLine": 5,
        "endChar": 16
      },
      "revId": "d5b47295892221b972a7857acc144361bde649fb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0c9caa2_d3eb7e3c",
        "filename": "configurations/meta/yv4/yosemite4_cpu.json",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-03T17:59:15Z",
      "side": 1,
      "message": "These will result in Redfish Interfaces that don\u0027t meet the spec (redfish doesn\u0027t allow placeholders like N/A)\n\nmy understanding is that PDI uses empty string for this case, so that\u0027s what we should do here, or just remove entirely like we\u0027ve done on other systems (but might break PDI, so that\u0027s likely not the answer you want).",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 9,
        "endChar": 28
      },
      "revId": "d5b47295892221b972a7857acc144361bde649fb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4eb7a143_0315597f",
        "filename": "configurations/meta/yv4/yosemite4_cpu.json",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-10-03T18:00:30Z",
      "side": 1,
      "message": "I\u0027ll have another commit to add empty strings rather than N/A.",
      "parentUuid": "d0c9caa2_d3eb7e3c",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 9,
        "endChar": 28
      },
      "revId": "d5b47295892221b972a7857acc144361bde649fb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6dfd3350_b92d1e83",
        "filename": "configurations/meta/yv4/yosemite4_cpu.json",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-03T18:40:38Z",
      "side": 1,
      "message": "Sounds good.  Didn\u0027t want to hold up this review, just something I noticed.\n\nI also just put up:\n\nhttps://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/84236\n\nAs a proposal to get this documented.  Feel free to throw stones.",
      "parentUuid": "4eb7a143_0315597f",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 9,
        "endChar": 28
      },
      "revId": "d5b47295892221b972a7857acc144361bde649fb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1be8715a_8c50614c",
        "filename": "configurations/meta/yv4/yosemite4_cpu.json",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-10-03T19:31:14Z",
      "side": 1,
      "message": "I pushed up commits on top of this with them changed to UNAVAILABLE also.",
      "parentUuid": "6dfd3350_b92d1e83",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 9,
        "endChar": 28
      },
      "revId": "d5b47295892221b972a7857acc144361bde649fb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e71a35b5_29b09a23",
        "filename": "schemas/global.json",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-03T16:20:04Z",
      "side": 1,
      "message": "Can we get a little trace of how long this has been this way (ideally a sha that was wrong)?  Is this a recently introduced error, or is this ancient?",
      "range": {
        "startLine": 49,
        "startChar": 25,
        "endLine": 49,
        "endChar": 28
      },
      "revId": "d5b47295892221b972a7857acc144361bde649fb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b1de08c_f2ef9b1c",
        "filename": "schemas/global.json",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-10-03T16:38:42Z",
      "side": 1,
      "message": "The PDI interface pre-dates EM.\n\n```\ncommit a948d268ffed67381d75fe17607fd84ecb498e8b\nAuthor: Brad Bishop \u003cbradleyb@us.ibm.com\u003e\nDate:   Wed Oct 5 19:51:48 2016 -0400\n\n    Add inventory interfaces for OpenBMC\n    \n    A first pass at a machine parseable DBus specification for the\n    inventory features of OpenBMC.\n    \n    Change-Id: Ia061ab2d5c2ea9d06cd991940303250cef48ab66\n    Signed-off-by: Brad Bishop \u003cbradleyb@fuzziesquirrel.com\u003e\n```\n\nThe bmcweb commits are probably from at least 2018:\n\n```\n$ git blame -w redfish-core/lib/systems.hpp | grep Item.Cpu\ndeae6a789 (Ed Tanous                  2024-11-11 21:58:57 -0800  158)         service, path, \"xyz.openbmc_project.Inventory.Item.Cpu\",\n04a258f40 (Ed Tanous                  2018-10-15 08:00:41 -0700  378)                          \"xyz.openbmc_project.Inventory.Item.Cpu\")\na974c132c (Lakshmi Yadlapati          2023-10-25 15:31:25 -0500  434)         \"xyz.openbmc_project.Inventory.Item.Cpu\",\n```",
      "parentUuid": "e71a35b5_29b09a23",
      "range": {
        "startLine": 49,
        "startChar": 25,
        "endLine": 49,
        "endChar": 28
      },
      "revId": "d5b47295892221b972a7857acc144361bde649fb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90cb24e2_cc63f057",
        "filename": "schemas/global.json",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-03T17:32:15Z",
      "side": 1,
      "message": "\u003e The PDI interface pre-dates EM.\n\nYep, I was worried about the EM schema that was wrong.\n\n\u003e The bmcweb commits are probably from at least 2018:\n\nbmcweb commits look correct though, and didn\u0027t use entity-manager as a backend in their testing, but instead used XeonSocket and an application.  I want to understand when EM was broken and put the sha in the commit message.  Is this just because we haven\u0027t had an entity use the CPU type yet, because most CPUs don\u0027t identify themselves in a FRU?\n\nIf it\u0027s a problem I can just go find the offending commit.",
      "parentUuid": "8b1de08c_f2ef9b1c",
      "range": {
        "startLine": 49,
        "startChar": 25,
        "endLine": 49,
        "endChar": 28
      },
      "revId": "d5b47295892221b972a7857acc144361bde649fb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a56caf72_26854d30",
        "filename": "schemas/global.json",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-03T17:45:23Z",
      "side": 1,
      "message": "48e44b75001a69b6ca1c114427f65f3ac967b62c\n\nLooks like this was incorrectly added on the above sha, specifically for this system. August 20th 2024.  That\u0027s the source of why this is wrong, and likely only impacts Yosemite 4.  That\u0027s mostly what I wanted to know.\n\nIt\u0027s probably worth having a discussion about whether we really want to start inventorying CPUs in EM.  We specifically didn\u0027t initially, only adding a \"socket\" type, because the majority of CPUs have some sort of API to get their make/model/serial (pirom/peci for intel cpus) so having something common here didn\u0027t make a ton of sense.  Obviously you guys have a more unique case than a CPU in a socket, and some manufacturing process to get the CPU serial into the FRU, but that\u0027s also why this is showing up as a bug.\n\nIs the XeonSocket patterns something you guys looked at and discounted?",
      "parentUuid": "90cb24e2_cc63f057",
      "range": {
        "startLine": 49,
        "startChar": 25,
        "endLine": 49,
        "endChar": 28
      },
      "revId": "d5b47295892221b972a7857acc144361bde649fb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0145dca5_279491dc",
        "filename": "schemas/global.json",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-10-03T17:57:30Z",
      "side": 1,
      "message": "\u003e 48e44b75001a69b6ca1c114427f65f3ac967b62c\n\nLet me add a Fixes for that then.\n\n\u003e Is the XeonSocket patterns something you guys looked at and discounted?\n\nI don\u0027t think it is something we even considered.  Looking at the XeonCPU in legacy.json, assuming that\u0027s what you\u0027re referring to, seems to be configuration for IntelCPUSensor and not FRU information.  In this case we\u0027re trying to expose the CPU FRU data itself (even though I know that sounds funny considering that I said the CPU isn\u0027t a FRU; having the serial number, etc., is useful for dealing with CPU mfg vintage concerns).",
      "parentUuid": "a56caf72_26854d30",
      "range": {
        "startLine": 49,
        "startChar": 25,
        "endLine": 49,
        "endChar": 28
      },
      "revId": "d5b47295892221b972a7857acc144361bde649fb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dab5af24_1727ea37",
        "filename": "schemas/global.json",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-10-03T17:59:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0145dca5_279491dc",
      "range": {
        "startLine": 49,
        "startChar": 25,
        "endLine": 49,
        "endChar": 28
      },
      "revId": "d5b47295892221b972a7857acc144361bde649fb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}