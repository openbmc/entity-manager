{
  "comments": [
    {
      "key": {
        "uuid": "5de12df9_b298f03c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-02-26T18:54:57Z",
      "side": 1,
      "message": "Another option would be to create a \"PSU Supported Configuration\" schema that would contain properties related only to PSUs. Or have this schema be part of a vendor-specific file such as the IBM.json.",
      "revId": "687a99e474759e011df91d8948631e51a8c8c8d7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2fb9ef55_b6bb4f62",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-26T19:49:24Z",
      "side": 1,
      "message": "If at all possible, I\u0027d really like to make this generic.  \"supported configurations\" have usefulness outside of just power supplies.",
      "parentUuid": "5de12df9_b298f03c",
      "revId": "687a99e474759e011df91d8948631e51a8c8c8d7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4bef4e87_7eb01397",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-03-08T19:54:51Z",
      "side": 1,
      "message": "Sounds good, leaving it as a generic \u0027supported configuration\u0027 schema.",
      "parentUuid": "2fb9ef55_b6bb4f62",
      "revId": "687a99e474759e011df91d8948631e51a8c8c8d7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71fe5774_3d93d963",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2021-03-02T20:42:15Z",
      "side": 1,
      "message": "Example",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 2
      },
      "revId": "687a99e474759e011df91d8948631e51a8c8c8d7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ef8d554_c88ecd78",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-03-08T19:54:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "71fe5774_3d93d963",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 2
      },
      "revId": "687a99e474759e011df91d8948631e51a8c8c8d7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc1bc84a_c09036cb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2021-03-02T20:42:15Z",
      "side": 1,
      "message": "models",
      "range": {
        "startLine": 17,
        "startChar": 33,
        "endLine": 17,
        "endChar": 38
      },
      "revId": "687a99e474759e011df91d8948631e51a8c8c8d7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fc66a01_9b87945e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-03-08T19:54:51Z",
      "side": 1,
      "message": "Done. Reworded.",
      "parentUuid": "fc1bc84a_c09036cb",
      "range": {
        "startLine": 17,
        "startChar": 33,
        "endLine": 17,
        "endChar": 38
      },
      "revId": "687a99e474759e011df91d8948631e51a8c8c8d7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "541942c7_57f2474d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-26T19:49:24Z",
      "side": 1,
      "message": "Can add some details about behaviors here?  for example, what would this would do if it somehow found 3 power supplies?  What about if it found a power supply that isn\u0027t a delta-123?  What happens in the case where everything is good?  Why would I want to add this to my chassis config?\n\nI suspect I know some of the answers, but I\u0027d like to get that documented in the commit message for future users of this.\n\n\n\n\nOne thing that I\u0027d like to sort through in this is to figure out a way to impose new policies for these supported configurations.  For example, this param should really be modifying the required redundancy parameters on the chassis, not coming up with a new parameter for it.  We don\u0027t have to have code to do it, but I\u0027d like to at least make sure we have a path to get there that isn\u0027t in conflict with this.\n\nHow would this work for something like:\n\"If we are outside of a supported configuration, increase the fan speed to 50%\"\n\nWould we do that in configuration?  Code?\n\n\"If XYZ card is installed, increase the minimum fan floor to Y.\"\n\n\"If ABC fabric cable is installed on this chassis, decrease the exit air temp limit.\"\n\n\"If one power supply is installed, and we require 2, boost the fans\"\n\nThose are some other use cases I\u0027ve heard of for these \"supported\" configurations.  Can you theorize a little bit about how your supported configurations schema could handle some of these?",
      "range": {
        "startLine": 27,
        "startChar": 5,
        "endLine": 27,
        "endChar": 13
      },
      "revId": "687a99e474759e011df91d8948631e51a8c8c8d7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76f03ae4_e603cc42",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-03-08T19:54:51Z",
      "side": 1,
      "message": "I removed the custom MaxCount in favor of the existing RedundantCount property. Removed also InputVoltage as that can also be specified with a vin_Max property. The thought is that we can leave it open to the user to add whatever property they want, or another option is to specify the properties that we believe should be supported here instead of having the user add any property name to their supported configuration implementation.\n\nAdded use cases that should describe what the power supply app would do in general. The plan is to have these decisions be set via configuration in the phosphor-power repo, for example default to log an error if redundantcount does not match the number of power supplies present, and additional optional policies such as boost fan speed.",
      "parentUuid": "541942c7_57f2474d",
      "range": {
        "startLine": 27,
        "startChar": 5,
        "endLine": 27,
        "endChar": 13
      },
      "revId": "687a99e474759e011df91d8948631e51a8c8c8d7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4ccbc03_01600aac",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1000502
      },
      "writtenOn": "2021-04-19T21:11:33Z",
      "side": 1,
      "message": "A use case I am interested in is loading different PID coefficients for different supported configurations. Unsupported configurations should run at failsafe.\n\nThinking very roughly, I\u0027m imagining being able to put any EMExposesElement inside a SupportedConfiguration. If it matches that configuration, expose all of those entries. Some open questions:\n- How would it handle multiple matches?\n- An else case for no matches succeed would be handy.",
      "parentUuid": "76f03ae4_e603cc42",
      "range": {
        "startLine": 27,
        "startChar": 5,
        "endLine": 27,
        "endChar": 13
      },
      "revId": "687a99e474759e011df91d8948631e51a8c8c8d7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "125ebf48_f519b11c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-04-20T15:17:48Z",
      "side": 1,
      "message": "Just some thoughts. In order to expose a set of entries, the Probe could have conditions ANDd together, such as \u0027chassis present AND GPU present AND power supply present\u0027. The Probe can be added to any configurations json file, not necessarily in a SupportedConfiguration standalone json, since the idea is that the SupportedConfigurations are a static list that tells you what the system supports, although it could also be implemented via a standalone \u0027supported\u0027 configurations json file.",
      "parentUuid": "e4ccbc03_01600aac",
      "range": {
        "startLine": 27,
        "startChar": 5,
        "endLine": 27,
        "endChar": 13
      },
      "revId": "687a99e474759e011df91d8948631e51a8c8c8d7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d550f1eb_1fcdd86d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-04-20T16:23:55Z",
      "side": 1,
      "message": "I\u0027d like to steer us away from the thought of using probes here, for a couple reasons.\nFirst, probes are designed to be a runtime-modifiable thing;  Considering that supported configurations are going to need to be build-time configurable (I think?) ie at build time I would like to enforce a given set of configurations, and warn if it\u0027s outside those sets, I\u0027m not sure how probes would mate up with that.  Just because someone is using an IBM chassis for example, doesn\u0027t necessarily mean they care about what IBM thinks is recommended, and in the case of second-hand hardware providers, they\u0027ll likely come up with their own supported configs against the same chassis.\n\nAlso, a Chassis is a mediocre way to detect whether or not you\u0027re on something that needs a supported configuration.  What if you have everything but the Chassis?  presumably you\u0027d still want to trigger a warning.",
      "parentUuid": "125ebf48_f519b11c",
      "range": {
        "startLine": 27,
        "startChar": 5,
        "endLine": 27,
        "endChar": 13
      },
      "revId": "687a99e474759e011df91d8948631e51a8c8c8d7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}