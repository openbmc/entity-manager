{
  "comments": [
    {
      "key": {
        "uuid": "dacc0cca_93177d52",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-11-04T20:40:54Z",
      "side": 1,
      "message": "50/72 please",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 13,
        "endChar": 25
      },
      "revId": "ed085e5f54771f60a1d2d5ed0a9f07456c289b32",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d433a1e_8d7c0e17",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-11-10T00:11:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "dacc0cca_93177d52",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 13,
        "endChar": 25
      },
      "revId": "ed085e5f54771f60a1d2d5ed0a9f07456c289b32",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0202a881_4afbc1c7",
        "filename": "include/Parser.hpp",
        "patchSetId": 3
      },
      "lineNbr": 3,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-11-04T20:40:54Z",
      "side": 1,
      "message": "iostream doesn\u0027t look used here?",
      "range": {
        "startLine": 3,
        "startChar": 0,
        "endLine": 3,
        "endChar": 19
      },
      "revId": "ed085e5f54771f60a1d2d5ed0a9f07456c289b32",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2fb561de_7b6ac976",
        "filename": "include/Parser.hpp",
        "patchSetId": 3
      },
      "lineNbr": 3,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-11-10T00:11:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0202a881_4afbc1c7",
      "range": {
        "startLine": 3,
        "startChar": 0,
        "endLine": 3,
        "endChar": 19
      },
      "revId": "ed085e5f54771f60a1d2d5ed0a9f07456c289b32",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1facd0c9_2e69f077",
        "filename": "include/Parser.hpp",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-11-04T20:40:54Z",
      "side": 1,
      "message": "missing \u003cutility\u003e",
      "revId": "ed085e5f54771f60a1d2d5ed0a9f07456c289b32",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe0b412a_024a9746",
        "filename": "include/Parser.hpp",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-11-10T00:11:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1facd0c9_2e69f077",
      "revId": "ed085e5f54771f60a1d2d5ed0a9f07456c289b32",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6fc3d50_a48cfe2f",
        "filename": "src/Parser.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-11-04T20:40:54Z",
      "side": 1,
      "message": "On the version of boost we\u0027re using, do we need this?",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 43
      },
      "revId": "ed085e5f54771f60a1d2d5ed0a9f07456c289b32",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e221993_81b4d07a",
        "filename": "src/Parser.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-11-10T00:11:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e6fc3d50_a48cfe2f",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 43
      },
      "revId": "ed085e5f54771f60a1d2d5ed0a9f07456c289b32",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "483c8bb2_bcc1dc37",
        "filename": "src/Parser.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-11-04T20:45:36Z",
      "side": 1,
      "message": "Is there a more specific header we can include here, per the openbmc coding standard?",
      "range": {
        "startLine": 3,
        "startChar": 0,
        "endLine": 3,
        "endChar": 35
      },
      "revId": "ed085e5f54771f60a1d2d5ed0a9f07456c289b32",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea83dd9e_3bdf8e76",
        "filename": "src/Parser.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-11-10T00:11:14Z",
      "side": 1,
      "message": "let me have a look",
      "parentUuid": "483c8bb2_bcc1dc37",
      "range": {
        "startLine": 3,
        "startChar": 0,
        "endLine": 3,
        "endChar": 35
      },
      "revId": "ed085e5f54771f60a1d2d5ed0a9f07456c289b32",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90f5d5ba_5837a441",
        "filename": "src/Parser.cpp",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-11-04T20:40:54Z",
      "side": 1,
      "message": "Can we change this to \"NumericVariable\" given that it only represents ints?",
      "range": {
        "startLine": 49,
        "startChar": 7,
        "endLine": 49,
        "endChar": 15
      },
      "revId": "ed085e5f54771f60a1d2d5ed0a9f07456c289b32",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9346107c_4fe2abf7",
        "filename": "src/Parser.cpp",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-11-10T00:11:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "90f5d5ba_5837a441",
      "range": {
        "startLine": 49,
        "startChar": 7,
        "endLine": 49,
        "endChar": 15
      },
      "revId": "ed085e5f54771f60a1d2d5ed0a9f07456c289b32",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a616b37_8aad5785",
        "filename": "src/Parser.cpp",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-11-04T20:40:54Z",
      "side": 1,
      "message": "std::vector is preferred here.",
      "range": {
        "startLine": 55,
        "startChar": 9,
        "endLine": 55,
        "endChar": 13
      },
      "revId": "ed085e5f54771f60a1d2d5ed0a9f07456c289b32",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e4e88e4_8876a002",
        "filename": "src/Parser.cpp",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-11-10T00:11:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6a616b37_8aad5785",
      "range": {
        "startLine": 55,
        "startChar": 9,
        "endLine": 55,
        "endChar": 13
      },
      "revId": "ed085e5f54771f60a1d2d5ed0a9f07456c289b32",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e85ffe8a_60e8fcef",
        "filename": "src/Parser.cpp",
        "patchSetId": 3
      },
      "lineNbr": 190,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-11-04T20:40:54Z",
      "side": 1,
      "message": "Please avoid non const globals like this.  They can cause problems when methods are called repeatedly.\n\nSymbols is specific to the parse call being done, so therefore shouldn\u0027t be at global scope.",
      "range": {
        "startLine": 190,
        "startChar": 0,
        "endLine": 190,
        "endChar": 32
      },
      "revId": "ed085e5f54771f60a1d2d5ed0a9f07456c289b32",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75741c88_869c50b8",
        "filename": "src/Parser.cpp",
        "patchSetId": 3
      },
      "lineNbr": 190,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-11-10T00:11:14Z",
      "side": 1,
      "message": "These are being used in following rules that\u0027s why declared here. I have taken care of this by cleaning up before exiting function.",
      "parentUuid": "e85ffe8a_60e8fcef",
      "range": {
        "startLine": 190,
        "startChar": 0,
        "endLine": 190,
        "endChar": 32
      },
      "revId": "ed085e5f54771f60a1d2d5ed0a9f07456c289b32",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3173479f_c951a64e",
        "filename": "src/Parser.cpp",
        "patchSetId": 3
      },
      "lineNbr": 190,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-11-13T18:19:40Z",
      "side": 1,
      "message": "Then they need to be part of a parse context object.  They should not be globals.",
      "parentUuid": "75741c88_869c50b8",
      "range": {
        "startLine": 190,
        "startChar": 0,
        "endLine": 190,
        "endChar": 32
      },
      "revId": "ed085e5f54771f60a1d2d5ed0a9f07456c289b32",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dba44302_bc0ae0b8",
        "filename": "src/Parser.cpp",
        "patchSetId": 3
      },
      "lineNbr": 190,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-11-18T21:18:54Z",
      "side": 1,
      "message": "Currently it has single context usage so shouldn\u0027t be issues. Let me look into this.",
      "parentUuid": "3173479f_c951a64e",
      "range": {
        "startLine": 190,
        "startChar": 0,
        "endLine": 190,
        "endChar": 32
      },
      "revId": "ed085e5f54771f60a1d2d5ed0a9f07456c289b32",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "839a1d72_2bf04585",
        "filename": "src/Parser.cpp",
        "patchSetId": 3
      },
      "lineNbr": 190,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-11-18T21:34:13Z",
      "side": 1,
      "message": "\u003e Currently it has single context usage so shouldn\u0027t be issues. Let me look into this.\n\nI\u0027m not sure where you got that idea.  There are multiple contexts.  There is a context per file parsed.  As written symbols from other files will get intermixed into this global.",
      "parentUuid": "dba44302_bc0ae0b8",
      "range": {
        "startLine": 190,
        "startChar": 0,
        "endLine": 190,
        "endChar": 32
      },
      "revId": "ed085e5f54771f60a1d2d5ed0a9f07456c289b32",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8dde30f3_2c149be9",
        "filename": "src/Parser.cpp",
        "patchSetId": 3
      },
      "lineNbr": 190,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-11-23T22:12:43Z",
      "side": 1,
      "message": "I am trying to change rules but not able to find rules where I can change template variable in evaluate function and that should become part of expression if it is a integer replacement. I may give another try on rules addition and evaluate function change.",
      "parentUuid": "839a1d72_2bf04585",
      "range": {
        "startLine": 190,
        "startChar": 0,
        "endLine": 190,
        "endChar": 32
      },
      "revId": "ed085e5f54771f60a1d2d5ed0a9f07456c289b32",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}