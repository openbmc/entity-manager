{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "50c5cf4e_7277bef8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 29
      },
      "lineNbr": 27,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-22T18:47:42Z",
      "side": 1,
      "message": "Would this require any change to dbus-sensors or would those continue to work as such since you necessitating the need for a Type property for new Dbus paths?",
      "revId": "da81067658ff2464f35993b2b0c03bbf65a3454f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d389cc81_b7b6bab8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 29
      },
      "lineNbr": 27,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-22T19:48:10Z",
      "side": 1,
      "message": "It should depend on which value the ```Type``` property has in the nested records, if any.\n\nIn the current schemas the nested records like ```FirmwareInfoDef``` usually do not have their own ```Type``` property which means they should not be affected by this change. \n\nSo the dbus tree should look the same and the code should work as before.\n\n\nIf then in the future someone wants to refactor a daemon in dbus-sensors to use the PDI generated code, enablement would look something like:\n\n- Update the specific schema to require that ```Type``` field on the nested records.\n- Create (or preferably, generate) the PDI interface definitions for the involved interfaces from the schemas involved\n- Use some script to add ```Type``` property to all the nested records and array records of that specific configuration schema on all existing configurations\n- Update the daemon to start consuming the interfaces which were newly added to the dbus tree via the generated clients.\n- Profit",
      "parentUuid": "50c5cf4e_7277bef8",
      "revId": "da81067658ff2464f35993b2b0c03bbf65a3454f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c87aea8_c2763ad4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 29
      },
      "lineNbr": 27,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-06-02T23:14:10Z",
      "side": 1,
      "message": "Normally i see all configuration interfaces have \"Name\" property as well but i suppose that can be generated by suffixing some index, @spinler@us.ibm.com is it required to have Name property or not?",
      "parentUuid": "d389cc81_b7b6bab8",
      "revId": "da81067658ff2464f35993b2b0c03bbf65a3454f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da4f18c9_ce234b80",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 29
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-05-22T23:55:34Z",
      "side": 1,
      "message": "Oooh! Moral support +1",
      "revId": "da81067658ff2464f35993b2b0c03bbf65a3454f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d173ded4_f3695223",
        "filename": "src/entity_manager/dbus_interface.cpp",
        "patchSetId": 29
      },
      "lineNbr": 177,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-06-02T23:14:10Z",
      "side": 1,
      "message": "You can use PHOSPHOR_LOG2_USING and cut short these to just debug.",
      "revId": "da81067658ff2464f35993b2b0c03bbf65a3454f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}