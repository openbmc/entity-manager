{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3bc357c5_abffbf2d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-10T15:16:15Z",
      "side": 1,
      "message": "Overall in support of this.",
      "revId": "ef3b5618c6fef6ec8b514fc60ba5792955fed2d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a1be695c_9a4707dd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-10T15:42:27Z",
      "side": 1,
      "message": "Thanks for the quick review üòé",
      "revId": "ef3b5618c6fef6ec8b514fc60ba5792955fed2d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61044ba9_975cf7ab",
        "filename": "src/entity_manager/dbus_interface.cpp",
        "patchSetId": 1
      },
      "lineNbr": 107,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-10T15:15:57Z",
      "side": 1,
      "message": "Please don\u0027t use anything in a detail namespace in your code.  details are intended to be internal to the library.",
      "range": {
        "startLine": 107,
        "startChar": 49,
        "endLine": 107,
        "endChar": 55
      },
      "revId": "ef3b5618c6fef6ec8b514fc60ba5792955fed2d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "653d33ae_b8b35291",
        "filename": "src/entity_manager/dbus_interface.cpp",
        "patchSetId": 1
      },
      "lineNbr": 107,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-10T15:42:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "61044ba9_975cf7ab",
      "range": {
        "startLine": 107,
        "startChar": 49,
        "endLine": 107,
        "endChar": 55
      },
      "revId": "ef3b5618c6fef6ec8b514fc60ba5792955fed2d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70536fe4_4534a519",
        "filename": "src/entity_manager/dbus_interface.cpp",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-10T15:15:57Z",
      "side": 1,
      "message": "Now that this is its own method, it\u0027s not clear that this doesn\u0027t throw an exception, because nlohmann::json could be any type.  Maybe change the calling code to use\n\nconst nlohmann::json::array_t* arr \u003d value.get_ptr\u003cnlohmann::json::array_t\u003e();\nif (arr !\u003d nullptr){\n    checkArrayElementsSameType(...., *arr);\n}",
      "range": {
        "startLine": 109,
        "startChar": 33,
        "endLine": 109,
        "endChar": 38
      },
      "revId": "ef3b5618c6fef6ec8b514fc60ba5792955fed2d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4377e82a_ffd79230",
        "filename": "src/entity_manager/dbus_interface.cpp",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-10T15:17:18Z",
      "side": 1,
      "message": "Example of this same operation:\nhttps://github.com/openbmc/bmcweb/blob/5c467f93d9dd4fc8de98dd51639f9039d5a52e7a/redfish-core/lib/thermal_metrics.hpp#L64",
      "parentUuid": "70536fe4_4534a519",
      "range": {
        "startLine": 109,
        "startChar": 33,
        "endLine": 109,
        "endChar": 38
      },
      "revId": "ef3b5618c6fef6ec8b514fc60ba5792955fed2d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b151f0b2_2d656b4d",
        "filename": "src/entity_manager/dbus_interface.cpp",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-10T15:42:27Z",
      "side": 1,
      "message": "Added a check there based on your example code üòä",
      "parentUuid": "4377e82a_ffd79230",
      "range": {
        "startLine": 109,
        "startChar": 33,
        "endLine": 109,
        "endChar": 38
      },
      "revId": "ef3b5618c6fef6ec8b514fc60ba5792955fed2d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0f36538_890a5b2d",
        "filename": "src/entity_manager/dbus_interface.cpp",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-10T15:15:57Z",
      "side": 1,
      "message": "Do we want to do a little code golf here?\n\n```\nif (value.size() \u003d\u003d 0){\n   return true;\n}\nnlohmann::json::type first_type \u003d value[0].type();\nstd::ranges::all_of(value, [first_type](const json\u0026 el){ return el.type() \u003d\u003d first_type; }\n```",
      "revId": "ef3b5618c6fef6ec8b514fc60ba5792955fed2d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87b9e329_c56219ba",
        "filename": "src/entity_manager/dbus_interface.cpp",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-10T15:42:27Z",
      "side": 1,
      "message": "Yes, we can avoid the loop with ranges algorithm, code becomes shorter but we have an inline lambda now.\nNo complain, it is very short. Adjusted the code as described üëç",
      "parentUuid": "a0f36538_890a5b2d",
      "revId": "ef3b5618c6fef6ec8b514fc60ba5792955fed2d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}