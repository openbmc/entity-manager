{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4b8e9cc2_1bd8a590",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 10,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2022-03-28T21:55:26Z",
      "side": 1,
      "message": "nit: missing space",
      "range": {
        "startLine": 10,
        "startChar": 44,
        "endLine": 10,
        "endChar": 46
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd47630e_bc7d15ed",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 10,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-04-12T00:48:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4b8e9cc2_1bd8a590",
      "range": {
        "startLine": 10,
        "startChar": 44,
        "endLine": 10,
        "endChar": 46
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d67fa61_585fc19b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 16,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-12T20:19:21Z",
      "side": 1,
      "message": "Please add more details on how this change effects all platforms (ideally making the required changes to the config files for the mainboards effected).  Considering that EVERY system has a BMC, how would a user use this?  Where would the user add it?  How does it get used by other services?",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 16,
        "endChar": 19
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "52ad3dd0_f5f62761",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 16,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-04-14T17:25:00Z",
      "side": 1,
      "message": "Added some more description.",
      "parentUuid": "5d67fa61_585fc19b",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 16,
        "endChar": 19
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d584cb0a_438b7949",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-12T20:19:21Z",
      "side": 1,
      "message": "Can you please check a \"full\" example, including a baseboard, dcscm module, and this content into an EM review somewhere.  It doesn\u0027t have to be complete, but given that this is non-trivial, we need to figure out how to model it.",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 50
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ad515b1_e50fbf9e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-04-14T17:25:00Z",
      "side": 1,
      "message": "Ack\n\nWill also try to come up with some example that cover the different possible fields (\"HasBMC\", \"SubItem\")",
      "parentUuid": "d584cb0a_438b7949",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 50
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7336e7ff_94d83ecd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-07-26T00:35:17Z",
      "side": 1,
      "message": "Updated an example in change 55907.",
      "parentUuid": "1ad515b1_e50fbf9e",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 50
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08f1e1ae_e6a3cc7a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 27,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-12T20:19:21Z",
      "side": 1,
      "message": "I\u0027m not sure what the FRU EEPROM has to do with things?",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 27,
        "endChar": 10
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c57f523f_407f0a14",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 27,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-04-14T17:25:00Z",
      "side": 1,
      "message": "They are only included here to show that existing Configurations can be exposed together with the newly-introduced Inventory.Item\u0027s.",
      "parentUuid": "08f1e1ae_e6a3cc7a",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 27,
        "endChar": 10
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7542f19c_f9c893ed",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 27,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-14T21:16:40Z",
      "side": 1,
      "message": "Gotcha.  Lets omit it for the moment.",
      "parentUuid": "c57f523f_407f0a14",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 27,
        "endChar": 10
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a79ba343_eb87964e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 30,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-12T20:19:21Z",
      "side": 1,
      "message": "Type, as a field should not include the dbus interface.  If you look at the dbus interface this produces, this would produce something like:\n\nxyz.openbmc_project.Configuration.xyz.openbmc_project.Inventory.Item.BMC, which is I don\u0027t think it what you intended.",
      "range": {
        "startLine": 30,
        "startChar": 20,
        "endLine": 30,
        "endChar": 58
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "004a17e3_4d59dc47",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 30,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-04-14T17:25:00Z",
      "side": 1,
      "message": "This change allows a user to expose a `Configuration` as well as an `Item` and requires the user to fully-qualify the `Item` (thus the check in line 727.)\n\nI\u0027m not sure about what a better solution should look like ..",
      "parentUuid": "a79ba343_eb87964e",
      "range": {
        "startLine": 30,
        "startChar": 20,
        "endLine": 30,
        "endChar": 58
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15c454c2_4b8831b1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 30,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-14T21:16:40Z",
      "side": 1,
      "message": "Type: \"BMC\"\n\nwould be generally how we would model it.",
      "parentUuid": "004a17e3_4d59dc47",
      "range": {
        "startLine": 30,
        "startChar": 20,
        "endLine": 30,
        "endChar": 58
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bd08c874_8595989d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 30,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-04-18T20:41:38Z",
      "side": 1,
      "message": "I see, so with the current code structure, checking the name \"BMC\" would be in step 6) of the traversal process with some refactoring in this change due to how 6) calls the other 2 functions (populateInterfaceFromJson and postValuesToDbus):\n\n```\n1) postToDBus\n2) for (auto\u0026 [boardId, boardConfig] : newConfiguration.items())\n3)   populateInterfaceFromJson populates json::{number,string}\n4)   postValuesToDbus populates json::object\n5)     for (auto\u0026 item : *exposes)\n6)       postExposedItemToDbus\n7)         (If applicable to the \"expose an Inventory.Item\" hack)\n8)           populateInterfaceFromJson populates json::{number, string}\n9)           postValuesToDbus populates json::object\n10)        (Otherwise, treat as exposing a Configuration)\n11)          populateInterfaceFromJson populates json::{number, string}\n  \n```\n\nFor \"HasThisBMC\", it would be inserted to 3) as it is a property of the board .json.\n\nThis is assuming most of the possibilities fall into the scope of the postToDBus function.\n\n(note: phosphor-dbus-interfaces uses \"Bmc\" rather than \"BMC\")",
      "parentUuid": "15c454c2_4b8831b1",
      "range": {
        "startLine": 30,
        "startChar": 20,
        "endLine": 30,
        "endChar": 58
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c2bdfad_1760d353",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 31,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-12T20:19:21Z",
      "side": 1,
      "message": "I\u0027m not sure what this is trying to represent.  The BMC is not on a slot, and on the DC-SCM system you\u0027re working on, I would expect the \"BMC\" node to be on the DC-SCM board itself, not on the \"superboard\"",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 63
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f0934005_11a0c54d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 31,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-04-14T17:25:00Z",
      "side": 1,
      "message": "This line is purely for showing that \"a property can be added to the exposed `Inventory.Item` object and its contents do not carry any meaning.",
      "parentUuid": "2c2bdfad_1760d353",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 63
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "004adbeb_d540463a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 31,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-14T21:16:40Z",
      "side": 1,
      "message": "Lets just omit this for the moment.  As-written, it doesn\u0027t look right for any system, and I suspect that will confuse people.",
      "parentUuid": "f0934005_11a0c54d",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 63
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af93048e_a394f64c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 31,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-04-18T20:41:38Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "004adbeb_d540463a",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 63
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82b0595b_2299c216",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 32,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-03-28T19:07:43Z",
      "side": 1,
      "message": "can\u0027t you just do\n\n```\n\"xyz.openbmc_project.Inventory.Item.Bmc\":{\n  \"CCC\": \"DDD\",\n}\n```\n\nand such?",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 32,
        "endChar": 25
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06823cc8_f34549dd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 32,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2022-03-28T21:55:26Z",
      "side": 1,
      "message": "Something like that would be nice, since \"CCC\" is meant to be a property under the Item.Bmc interface.",
      "parentUuid": "82b0595b_2299c216",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 32,
        "endChar": 25
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "259a1b6b_7d7f60fa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 32,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-04-12T00:48:31Z",
      "side": 1,
      "message": "Added a code path to allow an entry like this in the Exposes directive:\n```\n{\n  \"T\": {\n    \"Key1\": \"Value1\",\n    \"Key2\": \"Value2\",\n    ...\n  }\n}\n```\n\nIt\u0027s essentially identical to the following:\n```\n{\n  \"Type\": \"T\",\n  \"Key1\": \"Value1\",\n  \"Key2\": \"Value2\",\n  ...\n}\n```\n(Notably, the type of \"Exposes\" is a json::array so each entry has to be its own object, thus the \"dictionary in dictionary\" in the new method)",
      "parentUuid": "06823cc8_f34549dd",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 32,
        "endChar": 25
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84051115_4be0433a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 39,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-12T20:19:21Z",
      "side": 1,
      "message": "Exposes record in an exposes record?  Please takea  look, this doesn\u0027t seem like it\u0027s what you intended, and I can\u0027t tell if it\u0027s just a copy/paste error or what the deal is.  I\u0027m would assume a name of \"Invalid\" isn\u0027t what you intended.",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 39,
        "endChar": 13
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "66907425_bc04a681",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 39,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-04-14T17:25:00Z",
      "side": 1,
      "message": "This is just a contrived wrong configuration for showing that such configurations are rejected by the code in this change list.",
      "parentUuid": "84051115_4be0433a",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 39,
        "endChar": 13
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d386b41f_cb68a4b6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 39,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-14T21:16:40Z",
      "side": 1,
      "message": "In examples, lets try to focus on things that we would expect to see.  Yes, error handling is important, but lets keep the error handling examples relegated to unit tests if we can, so people don\u0027t make the same mistake I did and think they\u0027re a valid example.",
      "parentUuid": "66907425_bc04a681",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 39,
        "endChar": 13
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "135deef7_36e3eba1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 39,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-04-18T20:41:38Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d386b41f_cb68a4b6",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 39,
        "endChar": 13
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa5ac1af_9daf2e6d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 45,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-12T20:19:21Z",
      "side": 1,
      "message": "????",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 45,
        "endChar": 16
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "74f51c02_4109962a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 45,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-04-14T17:25:00Z",
      "side": 1,
      "message": "This is a random property for showing the existing functionality of E-M works normally. It\u0027s now removed to avoid confusion.",
      "parentUuid": "aa5ac1af_9daf2e6d",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 45,
        "endChar": 16
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0a13116_5a5bbd64",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 91,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-12T20:19:21Z",
      "side": 1,
      "message": "?  The nested field shouldn\u0027t really exist.  We have patterns for having \"sub\" objects using the Found() probe type, that lets us split stuff up.  This looks like it\u0027s duplicating that?",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 91,
        "endChar": 73
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d443b913_d4d13ceb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 91,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-04-14T17:25:00Z",
      "side": 1,
      "message": "It looks like the Found() probe type doesn\u0027t create sub-objects; the object created and the object that serves as the Found() probe are on the same level (board/boardA and board/boardB, rather than \"board/boardA/boardB\").\n\nThe intent of Exposing an Inventory.Item does not supersede the practice of splitting items into multiple .json files, for example in the intended use case, the Exposed item (BMC) usually cannot be split from its board using regular methods.",
      "parentUuid": "a0a13116_5a5bbd64",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 91,
        "endChar": 73
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d46ac671_6cad5457",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 91,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-14T21:16:40Z",
      "side": 1,
      "message": "\u003e probe are on the same level (board/boardA and board/boardB, rather than \"board/boardA/boardB\").\n\nYou mean the dbus interfaces?  Yes, all entities are flat on dbus;  That\u0027s the intent so that entities can be removed and added without their child objects being added or removed.\n\n\n\u003e The intent of Exposing an Inventory.Item does not supersede the practice of splitting items into multiple .json files, for example in the intended use case, the Exposed item (BMC) usually cannot be split from its board using regular methods.\n\nThis detail would\u0027ve been really helpful in your commit message.",
      "parentUuid": "d443b913_d4d13ceb",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 91,
        "endChar": 73
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a992372_4a071b6c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 91,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-04-18T20:41:38Z",
      "side": 1,
      "message": "Added to the commit message (difference between this change and splitting into 2 json files).",
      "parentUuid": "d46ac671_6cad5457",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 91,
        "endChar": 73
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97fd887c_c7243e12",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 112,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-12T20:19:21Z",
      "side": 1,
      "message": "One thing I wonder a little is if we can automatically detect any of this.  Presumably, everything running OpenBMC has a BMC, so does it make sense to make edits to every single mainboard file to add a BMC inventory item?",
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "937c6aab_b2920ed2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 112,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-04-14T17:25:00Z",
      "side": 1,
      "message": "I think it depends on the viewpoint.\nFrom the conciseness point of view, editing every file is too redundant and doesn\u0027t make sense.\nFrom the completeness point of view, we\u0027re just describing the boards in a bit more detail, so it makes sense.\n\nI think if the BMC cannot autonomously determine its physical location (I am not sure with my current knowledge), this information needs to be injected in some form, maybe by adding a BMC entry to the .json configs or some other methods.",
      "parentUuid": "97fd887c_c7243e12",
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "162a30f0_0277cbd7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 112,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-14T21:16:40Z",
      "side": 1,
      "message": "\u003e I think it depends on the viewpoint.\n\u003e From the conciseness point of view, editing every file is too redundant and doesn\u0027t make sense.\n\u003e From the completeness point of view, we\u0027re just describing the boards in a bit more detail, so it makes sense.\n\u003e \n\u003e I think if the BMC cannot autonomously determine its physical location (I am not sure with my current knowledge), this information needs to be injected in some form, maybe by adding a BMC entry to the .json configs or some other methods.\n\nAgreed.  I wonder if we need to promote \"This is the config this bmc lives on\" to a higher scope so we can do stuff like this without having to edit every baseboard file.",
      "parentUuid": "937c6aab_b2920ed2",
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "217fcf9a_9145c632",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 112,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-04-18T20:41:38Z",
      "side": 1,
      "message": "To avoid having to edit every baseboard file, it would be good if the BMC has some way to localize itself. A few ways that I know about:\n\nOne possibility is to examine the existing association graph. I took a look at some existing systems, this method doesn\u0027t guarantee a 100% precise result, since it appears association edges may be arbitrarily specified:\n\n* For some platform without a DC-SCM module that comes with multiple boards: the board that has the BMC also has a few BMC margin sensors associated with it, while the other boards do not.\n\n* For some platform with a DC-SCM module: A sensor appears to be including the DC-SCM module\u0027s name and \"bmc\" (the snapshot was obtained a while back, I\u0027m not sure the meaning in the names ..)\n\nAnother possibility ... if the BMC can tell the interface used by the BMC\u003c-\u003ehost IPMI communication, it may be easier to guess which inventory the BMC is contained in. \"ipmipci\" probably indicates the BMC is on a DC-SCM module; \"ipmilpc\" probably indicates the BMC is on the motherboard. This, plus the association graph, may give some heuristics for the BMC to figure out its own location.\n\nSo the conclusion is I don\u0027t yet have a very good idea on how to enable the BMC to localize itself with what I currently know, but I can take a closer look at the \"association graphs\" or add a small program to test the \"heuristics\".",
      "parentUuid": "162a30f0_0277cbd7",
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c66bc51c_d6faaa4f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 112,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-07-26T00:35:17Z",
      "side": 1,
      "message": "If there are no existing mechanisms (like a function call) to do this, this becomes a research question, in my understanding.",
      "parentUuid": "217fcf9a_9145c632",
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "218a1fb9_a406c100",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 112,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-08-30T15:29:54Z",
      "side": 1,
      "message": "According to discussion on Discord, the user should indicate in the .JSON configuration which Board contains the current BMC.\n\nUpdated this change accordingly.\n\nOpened a new change for allowing the user to indicate the board containing the \"current BMC\", in response to the discussion on August 10:\nhttps://gerrit.openbmc.org/c/openbmc/entity-manager/+/56769",
      "parentUuid": "c66bc51c_d6faaa4f",
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "578645cf_942f9fc7",
        "filename": "src/EntityManager.cpp",
        "patchSetId": 7
      },
      "lineNbr": 283,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-12T20:19:21Z",
      "side": 1,
      "message": "Please avoid default parameters in this case, it makes it less clear what all the other calling code does.",
      "range": {
        "startLine": 283,
        "startChar": 40,
        "endLine": 283,
        "endChar": 45
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67c57db4_54742f8d",
        "filename": "src/EntityManager.cpp",
        "patchSetId": 7
      },
      "lineNbr": 283,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-04-14T17:25:00Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "578645cf_942f9fc7",
      "range": {
        "startLine": 283,
        "startChar": 40,
        "endLine": 283,
        "endChar": 45
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a7b8829_a3d66206",
        "filename": "src/EntityManager.cpp",
        "patchSetId": 7
      },
      "lineNbr": 739,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-12T20:19:21Z",
      "side": 1,
      "message": "I\u0027d really prefer we not special case hardcoded names in the config.  This makes me wonder if we modeled the config files properly.",
      "range": {
        "startLine": 725,
        "startChar": 0,
        "endLine": 739,
        "endChar": 13
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0c5a956_74a0fdd3",
        "filename": "src/EntityManager.cpp",
        "patchSetId": 7
      },
      "lineNbr": 739,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-04-14T17:25:00Z",
      "side": 1,
      "message": "How about:\n\n1. Add a new flag \"HasBMC\" for board .json\u0027s that indicate the board has a BMC on it (it effectively replaces the \"Exposes:[{\"Type\":\"Bmc\",\"Name\":\"Bmc\"}]\" snippet in the Exposes field)\n\n2. Add a new flag \"SubItems\" to differentiate from the \"Exposes\" field (all objects in SubItems are prepended with \"xyz.openbmc_project.Inventory.Item.\" while all objects in Exposes are still prepended with \"xyz.openbmc_project.Configuration.\"",
      "parentUuid": "2a7b8829_a3d66206",
      "range": {
        "startLine": 725,
        "startChar": 0,
        "endLine": 739,
        "endChar": 13
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dceaf2f4_236e4155",
        "filename": "src/EntityManager.cpp",
        "patchSetId": 7
      },
      "lineNbr": 739,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-14T21:16:40Z",
      "side": 1,
      "message": "\u003e How about:\n\u003e \n\u003e 1. Add a new flag \"HasBMC\" for board .json\u0027s that indicate the board has a BMC on it (it effectively replaces the \"Exposes:[{\"Type\":\"Bmc\",\"Name\":\"Bmc\"}]\" snippet in the Exposes field)\n\nCan you post an example somewhere?  Also, can we make the parameter \"HasThisBMC\" or something that indicates that it\u0027s not just \"a\" bmc, but literally the bmc we\u0027re running on (systems commonly have multiple bmcs).\n\nAssuming I\u0027m visualizing what you\u0027re talking about, this seems like the way I would go.\n\n\u003e \n\u003e 2. Add a new flag \"SubItems\" to differentiate from the \"Exposes\" field (all objects in SubItems are prepended with \"xyz.openbmc_project.Inventory.Item.\" while all objects in Exposes are still prepended with \"xyz.openbmc_project.Configuration.\"\n\nIf this is a route you want to go down, lets talk through it, but it seems like a case where we would want multiple files (or maybe multiple definitions in one file) with associations between them to denote their connectedness, but, lets scope out what you\u0027re thinking and see if we can come to something similar.",
      "parentUuid": "a0c5a956_74a0fdd3",
      "range": {
        "startLine": 725,
        "startChar": 0,
        "endLine": 739,
        "endChar": 13
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eabd2192_ba8766d8",
        "filename": "src/EntityManager.cpp",
        "patchSetId": 7
      },
      "lineNbr": 739,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-04-18T20:41:38Z",
      "side": 1,
      "message": "I added the following snippets in the JSON file \"ASRock_E3C246D4I\" as an example for the different ways to add a BMC:\n\n* Method 1: An \"xyz.openbmc_project.Inventory.Item\" entry in the \"Exposes\" stanza (this is going to be removed per the comments ..)\n* Method 2: A \"HasThisBMC\" flag in the board JSON\n* Method 3: A \"SubItems\" stanza allowing the user to create sub-items that exist as children DBus objects. Same as Exposes except that all items created will be Inventory.Item\u0027s rather than Configurations.\n\nI\u0027m not sure which one is the best or if this change is to be considered together with other proposals such as 52487 (association interfaces for cables), and the discussion on Discord on April 15 (PhysicalLocation\u0027s). Please advise?",
      "parentUuid": "dceaf2f4_236e4155",
      "range": {
        "startLine": 725,
        "startChar": 0,
        "endLine": 739,
        "endChar": 13
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ad241ee_da64e035",
        "filename": "src/EntityManager.cpp",
        "patchSetId": 7
      },
      "lineNbr": 739,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-07-26T00:35:17Z",
      "side": 1,
      "message": "I separated this change and moved the sample JSON change to change 55907.",
      "parentUuid": "eabd2192_ba8766d8",
      "range": {
        "startLine": 725,
        "startChar": 0,
        "endLine": 739,
        "endChar": 13
      },
      "revId": "23e80a8baaea3ad4ffa89638dce3934aaec3550e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}