{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e05defd4_47d1cb98",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-09T09:02:19Z",
      "side": 1,
      "message": "Can you note which specific eeprom chip has this issue you are fixing here, that `i2c_smbus_write_byte_data` does not work.",
      "revId": "737cbfebf1f6020900411a865b6a92a60b40a822",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eddd6f12_4a3ab5d6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2025-09-09T13:33:12Z",
      "side": 1,
      "message": "+1.  Also how it fails and why it doesn\u0027t work.",
      "parentUuid": "e05defd4_47d1cb98",
      "revId": "737cbfebf1f6020900411a865b6a92a60b40a822",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8bd1b03_8bb3bc86",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1002505
      },
      "writtenOn": "2025-09-10T18:33:09Z",
      "side": 1,
      "message": "@alexander.hansen@9elements.com @spinler@us.ibm.com this is for 24AA64. Given it\u0027s 64kibit EEPROM looks like you need to pass in a 2-byte address (higher and lower order bytes) [1] which smbus commands does not support [2].\n\n[1] 24AA64 data sheet -\u003e see section 6.0 WRITE OPERATIONS: https://ww1.microchip.com/downloads/aemDocuments/documents/MPD/ProductDocuments/DataSheets/24AA64-24FC64-24LC64-64-Kbit-I2C-Serial-EEPROM-DS20001189.pdf\n\n[2] https://docs.kernel.org/i2c/smbus-protocol.html -\u003e command bytes is only 8 bits",
      "parentUuid": "eddd6f12_4a3ab5d6",
      "revId": "737cbfebf1f6020900411a865b6a92a60b40a822",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ea0a7ee_3516567f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-10T19:50:26Z",
      "side": 1,
      "message": "Nice, thanks for the explanation üëç, can you kindly add it to the commit message for future reference?\n\n\nDo you think your code will work as well for eeproms accepting a 1-byte address?\n\nOtherwise, does it make sense to make a separate function to handle things differently depending on which eeprom is used.",
      "parentUuid": "b8bd1b03_8bb3bc86",
      "revId": "737cbfebf1f6020900411a865b6a92a60b40a822",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5832669b_80e19976",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1002505
      },
      "writtenOn": "2025-09-11T09:53:12Z",
      "side": 1,
      "message": "You\u0027re right. The ioctl command writes both higher and lower byte which may not work with 8-bit address.\n\nUpdated the code to check if device is 16 or 8 bits. Then calls ioctl or smbus commands respectively.\n\nUpdated my commit message.",
      "parentUuid": "4ea0a7ee_3516567f",
      "revId": "737cbfebf1f6020900411a865b6a92a60b40a822",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}