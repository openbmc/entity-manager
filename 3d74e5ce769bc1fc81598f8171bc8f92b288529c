{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "28d58818_c5b02511",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 38
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-12T18:14:25Z",
      "side": 1,
      "message": "As written, this would now make all Tyan boards stop detecting add in cards, hsbps or other devices that would otherwise be compatible?  It\u0027s difficult to tell if that\u0027s the intent.",
      "revId": "3d74e5ce769bc1fc81598f8171bc8f92b288529c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fff5c896_ba5eee3e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 38
      },
      "lineNbr": 0,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-13T08:48:42Z",
      "side": 1,
      "message": "The configuration which is to be installed is determined by the meson option.\n\nIt\u0027s something to configure when building a firmware image.\nThe configuration files themselves only declare which type of hardware or which specific hardware they are compatible with.\n\nThen later when building the EM we can select which hardware it should support.\n\nSo \"what is supported\" by EM is determined by whoever is building the BMC firmware image.",
      "parentUuid": "28d58818_c5b02511",
      "revId": "3d74e5ce769bc1fc81598f8171bc8f92b288529c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "357b2ff9_e3d7422b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 38
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-24T17:16:35Z",
      "side": 1,
      "message": "\u003e by EM is determined by whoever is building the BMC firmware image.\n\nI really have no idea what you mean by this.  You\u0027re adding a meson option that removes the config files for all the pcie devices, for boards that have PCIe slots.\n\nHow would one building the bmc image \"determine\" which hardware should be supported?  How is that (likely very large) list maintained?",
      "parentUuid": "fff5c896_ba5eee3e",
      "revId": "3d74e5ce769bc1fc81598f8171bc8f92b288529c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b377adf1_e4ab34e3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 38
      },
      "lineNbr": 0,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-26T10:20:07Z",
      "side": 1,
      "message": "\u003e You\u0027re adding a meson option that removes the config files for all the pcie devices, for boards that have PCIe slots.\n\nThe option *does nothing* unless you configure it.\n\nAnyone who does configure it may want to adjust the configurations which they need for their platform. Clarified this point by adding the ```CompatibleHardware``` property to some PSU configurations as well which i need for my use-case.\n\nThis (figuring out compatibility for many components) is not something i want to do in a single commit.\n\nFor my use-case i do not need the pcie configs, as none of them probes true for my hardware configuration.\n\nSo if i configure the option as ```tyan-s8030 psu-1u``` then it will be ideal for my use-case. I will have all the configurations i need and zero bloat.\n\n\u003e How would one building the bmc image \"determine\" which hardware should be supported? How is that (likely very large) list maintained?\n\nThey can determine which hardware the platform has based on BOM, schematics, and devicetree.\n\nIf there are multiple platforms to be supported then they can make a union.\n\n\nIf the platform is general-purpose and not a fixed configuration (e.g. for sale to various customers doing who-knows-what with the platform) then the meson option should be left as default.\n\n\nIf the platform is fixed from the hardware side and will not be changed, then go via the 4-step process:\n- option as default\n- see which configs probe true\n- check these should have a ```CompatibleHardware``` property\n- configure the option to match the actual hardware",
      "parentUuid": "357b2ff9_e3d7422b",
      "revId": "3d74e5ce769bc1fc81598f8171bc8f92b288529c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02cb8018_c6db359d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 38
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-26T16:53:28Z",
      "side": 1,
      "message": "\u003e for their platform\n\nThis would mean it goes in an meta layer config for that platform?  Who determines for tyan (Which I also have boards that I used regularly), which PCIe cards are supported?  This is the problem for normal boards that multiple people might have.\n\n\u003e For my use-case i do not need the pcie configs\n\nRight... but others (including me) do.  How do you separate the idea of a hardware image itself from what is supported.  This patch as a whole breaks that idea, and now fragments things.\n\n\u003e They can determine which hardware the platform has based on BOM, schematics, and devicetree.\n\nOk, so the tyan boards you have changed have support for several PCIe ports, NVMe drives, and other things that this config has disabled.  That\u0027s broken in my opinion.\n\n\u003e If the platform is fixed from the hardware side and will not be changed, then go via the 4-step process:\n\nPlatforms are not fixed.  Add in cards are added/removed all the time.  We cannot be hardcoding a single config in EM.  If you want to do that, phosphor-inventory is the tool to use for a \"I know all things about the config at compile time\" use cases.",
      "parentUuid": "b377adf1_e4ab34e3",
      "revId": "3d74e5ce769bc1fc81598f8171bc8f92b288529c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fec691e_00b9deb5",
        "filename": "configurations/tyan/tyan_s8030_baseboard.json",
        "patchSetId": 38
      },
      "lineNbr": 2,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-24T17:14:29Z",
      "side": 1,
      "message": "I have one of these boards that I use regularly for testing.  This would now cause all other configs to no longer install in that build?",
      "range": {
        "startLine": 2,
        "startChar": 27,
        "endLine": 2,
        "endChar": 37
      },
      "revId": "3d74e5ce769bc1fc81598f8171bc8f92b288529c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f782a5dd_9c24497e",
        "filename": "configurations/tyan/tyan_s8030_baseboard.json",
        "patchSetId": 38
      },
      "lineNbr": 2,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-26T10:20:07Z",
      "side": 1,
      "message": "The change in the configuration json has no effect unless the meson option is configured to something other than the default value.",
      "parentUuid": "1fec691e_00b9deb5",
      "range": {
        "startLine": 2,
        "startChar": 27,
        "endLine": 2,
        "endChar": 37
      },
      "revId": "3d74e5ce769bc1fc81598f8171bc8f92b288529c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38aa01eb_e935d066",
        "filename": "docs/compatible_hardware.md",
        "patchSetId": 38
      },
      "lineNbr": 29,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-12T18:14:25Z",
      "side": 1,
      "message": "There\u0027s any number of add in cards that could be plugged into this baseboard?  How is that supposed to work if we haven\u0027t marked all of them as compatible?",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 29,
        "endChar": 0
      },
      "revId": "3d74e5ce769bc1fc81598f8171bc8f92b288529c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09a9d132_366460ee",
        "filename": "docs/compatible_hardware.md",
        "patchSetId": 38
      },
      "lineNbr": 29,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-13T08:48:42Z",
      "side": 1,
      "message": "Determining the compatibility and figuring out a schema there is an open issue that will require some consideration to get right. \n\nIf a type of add-in card is not yet covered in our naming scheme then we can just go with ```\"CompatibleHardware\": \"\"``` as documented.\n\nIn that case it will be installed no matter the value of the meson option and there is no way to opt out of it.\n\nPeople who want to avoid installing some configuration file must then figure out which type of hardware a configuration file is for and then add the ```CompatibleHardware``` appropriately.\n\n\n\u003e How is that supposed to work if we haven\u0027t marked all of them as compatible?\n\nThat\u0027s one of the reasons for why the meson option is a list of regexes.\nIt should be easy to configure it correctly without too much investigation.\n\nFor example when going with some product listing like \nhttps://www.mitaccomputing.com/en/spec/Barebones/TS70B8056_B8056T70V8E6HR-2T-HE-TU\n\nwe see it has\n- SATA\n- NVMe\n- hot-swap 8056 fans\n- CRPS PSU\n- PCIe\n- ...\n\nI\u0027m not sure if SATA does support any kind of management so we could go with an initial value for the meson option of ```nvme-* psu-crps-* tyan-*```\n\nThere is some leeway in this feature for how far one wants to go with determining compatibility. \n\nWe can start out by looking into the baseboard compatibility which is easy to determine. So that is phase 1.\n\nThen perhaps look into power supplies. Should also be easy to determine the compatibility there.\n\nCovering baseboards and power-supplies will already go a long way.",
      "parentUuid": "38aa01eb_e935d066",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 29,
        "endChar": 0
      },
      "revId": "3d74e5ce769bc1fc81598f8171bc8f92b288529c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9e8269f_ed05efdb",
        "filename": "meson.options",
        "patchSetId": 38
      },
      "lineNbr": 41,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-12T18:30:00Z",
      "side": 1,
      "message": "How does is this value get maintained as we add components?  Every time we add a pcie add in card, are we going to ask every platform maintainer with a pcie port on their system to update their regex?  That seems like a lot of effort for very little payoff.",
      "range": {
        "startLine": 41,
        "startChar": 18,
        "endLine": 41,
        "endChar": 126
      },
      "revId": "3d74e5ce769bc1fc81598f8171bc8f92b288529c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "649ba60b_2911b9b9",
        "filename": "meson.options",
        "patchSetId": 38
      },
      "lineNbr": 41,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-13T11:35:35Z",
      "side": 1,
      "message": "That\u0027s why it is a list of regex and not plain strings 😊.\n\nIf one wants to support all PSU, go with ```psu-*```\n\nIf one wants to support only the CRPS PSU, go with ```psu-crps```\n\nIf one wants to support all the pcie hardware, go with ```pcie-*```\n\nSo there is a choice for the yocto layer maintainer in how fine-grained they want to configure this.\n\nNow the time where someone may need to adjust their regex list is when we annotate a new category of hardware. In that case the config would no longer be installed automatically.\n\nFor example if we start with the baseboards, my regex would look something like ```tyan-*```. Then at a later state we may start evaluating the PSU compatibility and i may need to adjust the regex to be like ```tyan-* psu-*```.\n\nI would assume anyone using this feature to fine-grain pick their configuration will be able to keep up with those changes.\n\nFor people who don\u0027t care and just want to have support support for everything they can always leave the meson option as default.",
      "parentUuid": "e9e8269f_ed05efdb",
      "range": {
        "startLine": 41,
        "startChar": 18,
        "endLine": 41,
        "endChar": 126
      },
      "revId": "3d74e5ce769bc1fc81598f8171bc8f92b288529c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}