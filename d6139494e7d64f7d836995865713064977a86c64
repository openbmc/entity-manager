{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2e2aeddc_600f5888",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2025-09-25T20:11:06Z",
      "side": 1,
      "message": "Maybe you could advertise this somehow, seems like something useful to others.",
      "revId": "d6139494e7d64f7d836995865713064977a86c64",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29e507a9_d531a286",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-26T09:44:37Z",
      "side": 1,
      "message": "i like the feature, a helpful alternative to the `WriteFru`.",
      "revId": "d6139494e7d64f7d836995865713064977a86c64",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95ea541d_1e67242b",
        "filename": "src/fru_device/fru_device.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1032,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-26T09:44:37Z",
      "side": 1,
      "message": "```suggestion\nbool writeFruFromFile(uint16_t bus, uint8_t address, const std::filesystem::path\u0026 file)\n```\n\nBus is `uint16_t` as seen in \n\n```\n\"WriteFruFromFile\", [\u0026](const uint16_t bus, const uint8_t address,\n                                const std::string\u0026 file) {\n```",
      "range": {
        "startLine": 1032,
        "startChar": 22,
        "endLine": 1032,
        "endChar": 33
      },
      "revId": "d6139494e7d64f7d836995865713064977a86c64",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb3ab079_319f86f6",
        "filename": "src/fru_device/fru_device.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1038,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-26T09:44:37Z",
      "side": 1,
      "message": "new function to use the `phosphor-logging`",
      "revId": "d6139494e7d64f7d836995865713064977a86c64",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37d5525f_4a537980",
        "filename": "src/fru_device/fru_device.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1043,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-26T09:44:37Z",
      "side": 1,
      "message": "```suggestion\n    const size_t fileSize \u003d std::filesystem::file_size(file, ec);\n```",
      "revId": "d6139494e7d64f7d836995865713064977a86c64",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1928afa2_3bfafa46",
        "filename": "src/fru_device/fru_device.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1049,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-26T09:44:37Z",
      "side": 1,
      "message": "can construct the vector here with the correct size instead of resizing later on.\n\nWe save 1 line and it reduces scope of variable to where it is actually used.",
      "revId": "d6139494e7d64f7d836995865713064977a86c64",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}