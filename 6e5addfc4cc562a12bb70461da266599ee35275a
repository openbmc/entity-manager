{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "23191918_9abe8452",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2023-06-08T18:32:41Z",
      "side": 1,
      "message": "When this gets another +1 I can +2 it.",
      "revId": "6e5addfc4cc562a12bb70461da266599ee35275a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8b5cc1a_b6a6bd13",
        "filename": "src/utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 290,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2023-06-23T19:26:29Z",
      "side": 1,
      "message": "This changes the flow. Is the change for a bug fix, or equivalent to old code. Any test done?",
      "revId": "6e5addfc4cc562a12bb70461da266599ee35275a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "159cb582_234f05d0",
        "filename": "src/utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 290,
      "author": {
        "id": 1001540
      },
      "writtenOn": "2023-06-23T23:11:15Z",
      "side": 1,
      "message": "Yes, I see your concern. Currently the substitution logic would replace all occurences of `propName` with `propValue` and then try to perform math. If the math syntax was incorrect, then we\u0027d abort and move onto the the next `propName`.\n\nWith my patch, since the substitution happens at the end, we won\u0027t partially substitute the string, nor try to substitute the rest of the interfaces. I\u0027ll add test cases for such strings.",
      "parentUuid": "c8b5cc1a_b6a6bd13",
      "revId": "6e5addfc4cc562a12bb70461da266599ee35275a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}