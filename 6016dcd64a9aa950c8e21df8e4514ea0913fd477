{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "76976712_27de673a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-08-25T07:56:20Z",
      "side": 1,
      "message": "template char replace is already unit-tested",
      "revId": "6016dcd64a9aa950c8e21df8e4514ea0913fd477",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e7b1d24e_e9007f66",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2025-08-25T21:27:17Z",
      "side": 1,
      "message": "I\u0027m not sure how I feel about removing well tested boost functions for hand written functions.  Or are these just lifted from the boost source?",
      "revId": "6016dcd64a9aa950c8e21df8e4514ea0913fd477",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a5fe9cfb_ac90d109",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2025-08-26T00:50:34Z",
      "side": 1,
      "message": "I didn‚Äôt copy from Boost ‚Äî this is just std::search with a case-insensitive comparator. The logic is simple enough, and the main reason for the change is to reduce the Boost dependency now that the standard library covers this functionality. I‚Äôll also add unit tests for these methods to make sure we don‚Äôt miss any edge cases.",
      "parentUuid": "e7b1d24e_e9007f66",
      "revId": "6016dcd64a9aa950c8e21df8e4514ea0913fd477",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0301452c_e3df74fe",
        "filename": "src/utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 182,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2025-08-25T21:23:41Z",
      "side": 1,
      "message": "Should be easy to add some testcases for?",
      "revId": "6016dcd64a9aa950c8e21df8e4514ea0913fd477",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f104cbad_f4edc5b4",
        "filename": "src/utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 182,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2025-08-26T00:50:34Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "0301452c_e3df74fe",
      "revId": "6016dcd64a9aa950c8e21df8e4514ea0913fd477",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d7154de_2cb2da0b",
        "filename": "src/utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 182,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-01T22:54:45Z",
      "side": 1,
      "message": "George, you closed this then didn\u0027t add test cases.  Please leave this open until you\u0027ve done so.",
      "parentUuid": "f104cbad_f4edc5b4",
      "revId": "6016dcd64a9aa950c8e21df8e4514ea0913fd477",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6a89411_01ac55e3",
        "filename": "src/utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 182,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2025-10-07T06:57:51Z",
      "side": 1,
      "message": "`test/test_utils.cpp` has been added in the current commit.",
      "parentUuid": "8d7154de_2cb2da0b",
      "revId": "6016dcd64a9aa950c8e21df8e4514ea0913fd477",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d080f5b5_df4f9630",
        "filename": "src/utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 182,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-07T21:27:47Z",
      "side": 1,
      "message": "üëç",
      "parentUuid": "f6a89411_01ac55e3",
      "revId": "6016dcd64a9aa950c8e21df8e4514ea0913fd477",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19ac2e45_a0694e44",
        "filename": "src/utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 184,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-01T22:54:45Z",
      "side": 1,
      "message": "should we be using std::ranges::search here?",
      "range": {
        "startLine": 184,
        "startChar": 21,
        "endLine": 184,
        "endChar": 26
      },
      "revId": "6016dcd64a9aa950c8e21df8e4514ea0913fd477",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d23aec01_5db41cd7",
        "filename": "src/utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 184,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2025-10-07T06:57:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "19ac2e45_a0694e44",
      "range": {
        "startLine": 184,
        "startChar": 21,
        "endLine": 184,
        "endChar": 26
      },
      "revId": "6016dcd64a9aa950c8e21df8e4514ea0913fd477",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63a00c65_70914e75",
        "filename": "src/utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-01T22:54:45Z",
      "side": 1,
      "message": "we shouldn\u0027t be using the std::locale based tolower for this, as it implements far more features than we use here.  Look at the simple version of this that bmcweb implements and use that.",
      "range": {
        "startLine": 186,
        "startChar": 24,
        "endLine": 186,
        "endChar": 31
      },
      "revId": "6016dcd64a9aa950c8e21df8e4514ea0913fd477",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "73b40253_f2cf77bc",
        "filename": "src/utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2025-10-07T06:57:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "63a00c65_70914e75",
      "range": {
        "startLine": 186,
        "startChar": 24,
        "endLine": 186,
        "endChar": 31
      },
      "revId": "6016dcd64a9aa950c8e21df8e4514ea0913fd477",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "592a1d45_f488ba04",
        "filename": "src/utils.hpp",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-01T22:54:45Z",
      "side": 1,
      "message": "nit capital F on find.",
      "range": {
        "startLine": 77,
        "startChar": 27,
        "endLine": 77,
        "endChar": 28
      },
      "revId": "6016dcd64a9aa950c8e21df8e4514ea0913fd477",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c42a829f_b137b04e",
        "filename": "src/utils.hpp",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2025-10-07T06:57:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "592a1d45_f488ba04",
      "range": {
        "startLine": 77,
        "startChar": 27,
        "endLine": 77,
        "endChar": 28
      },
      "revId": "6016dcd64a9aa950c8e21df8e4514ea0913fd477",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}