{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2376cfbb_278aff71",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 65
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-22T18:01:35Z",
      "side": 1,
      "message": "Overall, I\u0027m in support of simplifying things and cleaning them up.  I don\u0027t think this design as written gets us there.  I DO think there is likely a design that could after some iteration and cleanups.",
      "revId": "399f4bd902a4cc73728fa89526343f5d9fd01cb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "025104af_25d1800c",
        "filename": "docs/entity_manager_dbus_api.md",
        "patchSetId": 65
      },
      "lineNbr": 134,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-22T18:01:35Z",
      "side": 1,
      "message": "Remove this.  The goal is to make the types on dbus sane and easy to use.  If the DBUS api were good, we could just as easily change PDI to support a good API.  The problem is that the API right now is insane.",
      "range": {
        "startLine": 134,
        "startChar": 18,
        "endLine": 134,
        "endChar": 32
      },
      "revId": "399f4bd902a4cc73728fa89526343f5d9fd01cb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c7ad15d_4a488491",
        "filename": "docs/entity_manager_dbus_api.md",
        "patchSetId": 65
      },
      "lineNbr": 134,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-08-25T15:52:31Z",
      "side": 1,
      "message": "I don\u0027t understand this comment. I\u0027m making a section title about\nEM PDI compatible DBus API. \n\nIf i remove the \"PDI compatible\" then what\u0027s left is just \"Entity-Manager DBus API\" which is the title of the whole document (see line 1).\n\nSo i am repeating the title of the document as a section title?\n\nDoes not make sense to me.",
      "parentUuid": "025104af_25d1800c",
      "range": {
        "startLine": 134,
        "startChar": 18,
        "endLine": 134,
        "endChar": 32
      },
      "revId": "399f4bd902a4cc73728fa89526343f5d9fd01cb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f443a31c_aa1d0c29",
        "filename": "docs/entity_manager_dbus_api.md",
        "patchSetId": 65
      },
      "lineNbr": 145,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-22T18:01:35Z",
      "side": 1,
      "message": "Lets rewrite this in terms of:\n1. The API that is produced is not consistent or easy to parse\n2. That API being difficult to parse prevents us from inserting deeper structures.\n\nAnd lets get details about WHY it\u0027s difficult to parse back into structures.",
      "range": {
        "startLine": 143,
        "startChar": 0,
        "endLine": 145,
        "endChar": 46
      },
      "revId": "399f4bd902a4cc73728fa89526343f5d9fd01cb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "73355923_46c39dd2",
        "filename": "docs/entity_manager_dbus_api.md",
        "patchSetId": 65
      },
      "lineNbr": 145,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-08-25T15:52:31Z",
      "side": 1,
      "message": "\u003e easy to parse\n\nThe API is quite easy to parse, there is not a lot of code needed.\n\n\u003e That API being difficult to parse prevents us from inserting deeper structures.\n\nThe old API theoretically allows even further nesting.\n\nYou could have `xyz.openbmc_project.Configuration.ADC.Thresholds0.NestedObject`\n\nfor example. So it is not \u0027preventing\u0027 us from inserting deeper structures.\n\n\u003e And lets get details about WHY it\u0027s difficult to parse back into structures.\n\nIt\u0027s fairly easy to parse back into structures if you know which property is an array and which is an object. It\u0027s just wrong from a DBus perspective.",
      "parentUuid": "f443a31c_aa1d0c29",
      "range": {
        "startLine": 143,
        "startChar": 0,
        "endLine": 145,
        "endChar": 46
      },
      "revId": "399f4bd902a4cc73728fa89526343f5d9fd01cb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2802b531_ba0529fb",
        "filename": "docs/entity_manager_dbus_api.md",
        "patchSetId": 65
      },
      "lineNbr": 188,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-22T18:01:35Z",
      "side": 1,
      "message": "In this config, why wouldn\u0027t we just promote this up a level?  This seems like we added some depth just for the sake of it\n\nFirmwareVendorIANA: 3733\n\nSeems fairly descriptive.",
      "range": {
        "startLine": 188,
        "startChar": 0,
        "endLine": 188,
        "endChar": 27
      },
      "revId": "399f4bd902a4cc73728fa89526343f5d9fd01cb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15381d3f_3b8eeae3",
        "filename": "docs/entity_manager_dbus_api.md",
        "patchSetId": 65
      },
      "lineNbr": 188,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-08-25T08:57:41Z",
      "side": 1,
      "message": "That\u0027s not a review concern for this patch, right?\n\nIt\u0027s a review concern for the schema, which was already accepted.",
      "parentUuid": "2802b531_ba0529fb",
      "range": {
        "startLine": 188,
        "startChar": 0,
        "endLine": 188,
        "endChar": 27
      },
      "revId": "399f4bd902a4cc73728fa89526343f5d9fd01cb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee876491_b0ff74b2",
        "filename": "docs/entity_manager_dbus_api.md",
        "patchSetId": 65
      },
      "lineNbr": 189,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-22T18:01:35Z",
      "side": 1,
      "message": "Remove.  This is a string that exists only in OpenBMC software, therefore doesn\u0027t belong in an exposes record.",
      "range": {
        "startLine": 189,
        "startChar": 0,
        "endLine": 189,
        "endChar": 58
      },
      "revId": "399f4bd902a4cc73728fa89526343f5d9fd01cb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "83f870dd_f3633155",
        "filename": "docs/entity_manager_dbus_api.md",
        "patchSetId": 65
      },
      "lineNbr": 189,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-08-25T08:57:41Z",
      "side": 1,
      "message": "It\u0027s as per the schema. I am using the schema as an example.",
      "parentUuid": "ee876491_b0ff74b2",
      "range": {
        "startLine": 189,
        "startChar": 0,
        "endLine": 189,
        "endChar": 58
      },
      "revId": "399f4bd902a4cc73728fa89526343f5d9fd01cb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cba4b775_de6d61fb",
        "filename": "docs/entity_manager_dbus_api.md",
        "patchSetId": 65
      },
      "lineNbr": 196,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-22T18:01:35Z",
      "side": 1,
      "message": "Requiring every sub tree element to have a type seems messy and duplicates a lot of things between the trees.  In terms of this file, what value does it add?\n\nIn this case, why would I (in this case a config file writer) ever put:\n\nType: \"DifferentMuxOutput\" ?\n\nDoing so would break the one type per property case, right?\n\n\nI think anything but the top level type can be removed.",
      "range": {
        "startLine": 196,
        "startChar": 0,
        "endLine": 196,
        "endChar": 31
      },
      "revId": "399f4bd902a4cc73728fa89526343f5d9fd01cb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d6e0d43_27c93269",
        "filename": "docs/entity_manager_dbus_api.md",
        "patchSetId": 65
      },
      "lineNbr": 196,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-08-25T08:57:41Z",
      "side": 1,
      "message": "\u003e In terms of this file, what value does it add?\n\nIt was added to easily check which config should be exposed in PDI compatible way.\n\nIf we do not have `Type` field on the nested object, we will need some other way to construct the DBus interface name.\n\nI will consider what can be done there to follow your suggestion and only have `Type` on the top level.",
      "parentUuid": "cba4b775_de6d61fb",
      "range": {
        "startLine": 196,
        "startChar": 0,
        "endLine": 196,
        "endChar": 31
      },
      "revId": "399f4bd902a4cc73728fa89526343f5d9fd01cb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6dcdc2d5_18f31ee2",
        "filename": "docs/entity_manager_dbus_api.md",
        "patchSetId": 65
      },
      "lineNbr": 196,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-08-25T15:52:31Z",
      "side": 1,
      "message": "I briefly looked into going via the schema files to construct `Type` property of nested objects by looking at schema names and property names in case of inline schemas.\n\nBut that\u0027s not easily possible in all cases, for example:\n```\n\"MuxOutputs\": {\n                    \"description\": \"The pin names and values for the mux which toggles the flash to BMC\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": false,\n                        \"properties\": {\n                            \"Name\": {\n                                \"$ref\": \"legacy.json#/$defs/Types/Name\"\n                            },  \n                            \"Polarity\": {\n                                \"$ref\": \"legacy.json#/$defs/Types/Polarity\"\n                            }   \n                        },  \n                        \"required\": [\"Name\", \"Polarity\"]\n                    }   \n                },  \n```\n\nInstead, settled on hardcoding this information in a tree structure.\nThe tree structure can be extended as needed.\n\nBased on that structure we know which configuration to expose in the new vs. old way. The structure is in `config_type_tree.cpp`.\n\n\nThanks for your comment here. It was some work to create the structure and adjust the patch but it will be good to reduce overall config bloat.",
      "parentUuid": "7d6e0d43_27c93269",
      "range": {
        "startLine": 196,
        "startChar": 0,
        "endLine": 196,
        "endChar": 31
      },
      "revId": "399f4bd902a4cc73728fa89526343f5d9fd01cb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5abbbff3_3194a77b",
        "filename": "docs/entity_manager_dbus_api.md",
        "patchSetId": 65
      },
      "lineNbr": 209,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-22T18:01:35Z",
      "side": 1,
      "message": "Could we also get what the prior tree was for this?",
      "revId": "399f4bd902a4cc73728fa89526343f5d9fd01cb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a37b7d44_e07bd7e3",
        "filename": "docs/entity_manager_dbus_api.md",
        "patchSetId": 65
      },
      "lineNbr": 209,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-08-25T15:52:31Z",
      "side": 1,
      "message": "This section of the documentation is for documenting the new API. So i should not go into detail here on the old way which is discussed above starting at line 1.",
      "parentUuid": "5abbbff3_3194a77b",
      "revId": "399f4bd902a4cc73728fa89526343f5d9fd01cb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "047e52cf_7d333221",
        "filename": "docs/entity_manager_dbus_api.md",
        "patchSetId": 65
      },
      "lineNbr": 212,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-22T18:01:35Z",
      "side": 1,
      "message": "I\u0027m not terribly comfortable with these dbus paths.  They are half containment structure, representing a physical object\n/xyz/openbmc_project/inventory/system/board/chassis\n\nAnd half configuration structure:\nMyRecord/FirmwareInfo\n\n\nIf the path is to represent anything at all, it should be consistently representing that thing.  It\u0027s not clear to me if we did it this way to try to separate things.",
      "range": {
        "startLine": 212,
        "startChar": 57,
        "endLine": 212,
        "endChar": 78
      },
      "revId": "399f4bd902a4cc73728fa89526343f5d9fd01cb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17370484_5ecedef5",
        "filename": "docs/entity_manager_dbus_api.md",
        "patchSetId": 65
      },
      "lineNbr": 212,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-08-25T08:57:41Z",
      "side": 1,
      "message": "Fan Zones are also exposed by EM and they are just configuration structures.\n\nEM does expose configuration. It is not only for configuring the physical hardware.\n\nFor example\n\n`virtual_sensor.json#/$defs/VirtualSensor`\n`pid_zone.json#/$defs/PidZone`\n`ibm.json#/$defs/PowerModeProperties`\n`pid.json#/$defs/Pid`\n\n\u003e If the path is to represent anything at all, it should be consistently representing that thing. It\u0027s not clear to me if we did it this way to try to separate things.\n\none object path per `thing` does not work if the `thing` becomes too complicated (e.g. various thresholds, various gpio definitions, etc..)\n\n\u003e I\u0027m not terribly comfortable with these dbus paths.\n\nLet me know, how can i improve it?",
      "parentUuid": "047e52cf_7d333221",
      "range": {
        "startLine": 212,
        "startChar": 57,
        "endLine": 212,
        "endChar": 78
      },
      "revId": "399f4bd902a4cc73728fa89526343f5d9fd01cb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13fc672c_01fe045e",
        "filename": "docs/entity_manager_dbus_api.md",
        "patchSetId": 65
      },
      "lineNbr": 215,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-22T18:01:35Z",
      "side": 1,
      "message": "Do you have an example of how this would be consumed in a dbus-sensors reactor?  This is going to produce 4 properties changed events on 4 different paths.  Condensing those seems difficult.\n\nAlso, how would we port the bmcweb APIs over for property modification?  Presumably that would need to change?",
      "range": {
        "startLine": 214,
        "startChar": 0,
        "endLine": 215,
        "endChar": 80
      },
      "revId": "399f4bd902a4cc73728fa89526343f5d9fd01cb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ddd07ac_bea0f2dc",
        "filename": "docs/entity_manager_dbus_api.md",
        "patchSetId": 65
      },
      "lineNbr": 215,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-22T18:01:35Z",
      "side": 1,
      "message": "It\u0027s not clear to me from this which paths expose which interfaces?  Are they still exposing xyz.openbmc_project.Configuration.X interfaces?",
      "revId": "399f4bd902a4cc73728fa89526343f5d9fd01cb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04909ef8_9afa4725",
        "filename": "docs/entity_manager_dbus_api.md",
        "patchSetId": 65
      },
      "lineNbr": 215,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-08-25T08:57:41Z",
      "side": 1,
      "message": "The interface exposed is as per the configuration record.",
      "parentUuid": "6ddd07ac_bea0f2dc",
      "revId": "399f4bd902a4cc73728fa89526343f5d9fd01cb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5353d0f_b727af4c",
        "filename": "docs/entity_manager_dbus_api.md",
        "patchSetId": 65
      },
      "lineNbr": 215,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-08-25T08:57:41Z",
      "side": 1,
      "message": "No, i do not have any example.\n\nAs for DBus matches, for the `InterfacesAdded`, the toplevel config needs to be signalled last. When receiving the signal, the reactor can then also query the nested config.\n\n\u003e Condensing those seems difficult.\n\nmicro optimizing this patch is not on the list of things i want to do here. Since the patch is considered to be a larger change already (in terms of review effort).\n\n\u003e Also, how would we port the bmcweb APIs over for property modification? Presumably that would need to change?\n\nThis can be done on a per schema level. I assume bmcweb is not going to modify any and all properties, so there will be schemas we can migrate without problems there?",
      "parentUuid": "13fc672c_01fe045e",
      "range": {
        "startLine": 214,
        "startChar": 0,
        "endLine": 215,
        "endChar": 80
      },
      "revId": "399f4bd902a4cc73728fa89526343f5d9fd01cb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fdbbe607_9ecd7f7a",
        "filename": "docs/entity_manager_dbus_api.md",
        "patchSetId": 65
      },
      "lineNbr": 233,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-22T18:01:35Z",
      "side": 1,
      "message": "H",
      "revId": "399f4bd902a4cc73728fa89526343f5d9fd01cb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b133ab84_728fcdd3",
        "filename": "docs/entity_manager_dbus_api.md",
        "patchSetId": 65
      },
      "lineNbr": 233,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-08-25T08:57:41Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "fdbbe607_9ecd7f7a",
      "revId": "399f4bd902a4cc73728fa89526343f5d9fd01cb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb21a824_da72de43",
        "filename": "meson.options",
        "patchSetId": 65
      },
      "lineNbr": 42,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-22T18:01:35Z",
      "side": 1,
      "message": "We can\u0027t have a default option that breaks the majority of the system without some amount of documentation and staging.",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 42,
        "endChar": 1
      },
      "revId": "399f4bd902a4cc73728fa89526343f5d9fd01cb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03953603_71d43ec5",
        "filename": "meson.options",
        "patchSetId": 65
      },
      "lineNbr": 42,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-08-25T08:57:41Z",
      "side": 1,
      "message": "There is nothing broken by this patch. Everything stays the same.\nIt\u0027s only enabling this code path. The code (as of current revision) needs `Type` field on nested configuration record to do anything at all.",
      "parentUuid": "cb21a824_da72de43",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 42,
        "endChar": 1
      },
      "revId": "399f4bd902a4cc73728fa89526343f5d9fd01cb8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}