{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "19920e5b_bc9436ab",
        "filename": "src/fru_device.cpp",
        "patchSetId": 9
      },
      "lineNbr": 680,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-08-29T21:19:19Z",
      "side": 1,
      "message": "Refer comments inline with this function, this can be changed to \n\nstd::optional\u003cint\u003e index \u003d findIndexForFRU();\nif (index) {\nproductname +\u003d \"_\";\nproductName +\u003d  std::to_string(index);\n}",
      "range": {
        "startLine": 680,
        "startChar": 4,
        "endLine": 680,
        "endChar": 70
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c73cd83_fd1bcc11",
        "filename": "src/fru_device.cpp",
        "patchSetId": 9
      },
      "lineNbr": 680,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-08-30T12:58:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "19920e5b_bc9436ab",
      "range": {
        "startLine": 680,
        "startChar": 4,
        "endLine": 680,
        "endChar": 70
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e1ca18c6_c01dad97",
        "filename": "src/fru_device.cpp",
        "patchSetId": 9
      },
      "lineNbr": 680,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-09-05T15:29:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1c73cd83_fd1bcc11",
      "range": {
        "startLine": 680,
        "startChar": 4,
        "endLine": 680,
        "endChar": 70
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4796eee4_6bc19555",
        "filename": "src/fru_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 794,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-08-29T21:19:19Z",
      "side": 1,
      "message": "This function finds the next index if the same FRU already exists. The function name does not describe it. \nCreate a function\n\nstd::optional\u003cint\u003e findIndexForFRU()\n{\n....\n\nif (highest \u003d\u003d -1) \n{\nreturn std::nullopt;\n}\nelse\n{\nreturn highest;\n}\n}",
      "range": {
        "startLine": 794,
        "startChar": 5,
        "endLine": 794,
        "endChar": 25
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34c7f89c_6c2e6785",
        "filename": "src/fru_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 794,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-08-30T12:58:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4796eee4_6bc19555",
      "range": {
        "startLine": 794,
        "startChar": 5,
        "endLine": 794,
        "endChar": 25
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e96e98eb_b5d749af",
        "filename": "src/fru_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 794,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-09-05T15:29:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "34c7f89c_6c2e6785",
      "range": {
        "startLine": 794,
        "startChar": 5,
        "endLine": 794,
        "endChar": 25
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1cfbb1e_cfb0f2a1",
        "filename": "src/fru_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 803,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-08-29T21:19:19Z",
      "side": 1,
      "message": "bus can be 0",
      "range": {
        "startLine": 803,
        "startChar": 4,
        "endLine": 803,
        "endChar": 16
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac6c0a4e_83938c60",
        "filename": "src/fru_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 803,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-08-30T12:58:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f1cfbb1e_cfb0f2a1",
      "range": {
        "startLine": 803,
        "startChar": 4,
        "endLine": 803,
        "endChar": 16
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fa7348b3_9fbf5e3f",
        "filename": "src/fru_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 803,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-09-05T15:36:03Z",
      "side": 1,
      "message": "Agree. I2c bus started with 0. I think, some other platforms has dts entries for i2c-0.\n\nBut here, I think it is checking duplicate bus is present or not.\n\nAlso, I didn\u0027t change any design logic and implementation. This is existing logic.\n\nBus is unsigned int variable, We have to remove this condition \"if (bus \u003e 0) \" from the code. is it fine ?",
      "parentUuid": "ac6c0a4e_83938c60",
      "range": {
        "startLine": 803,
        "startChar": 4,
        "endLine": 803,
        "endChar": 16
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4b6ffa5_b8feb497",
        "filename": "src/fru_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 803,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-09-06T21:11:04Z",
      "side": 1,
      "message": "This is checking for duplicated FRU, which can be on different address, but same bus",
      "parentUuid": "fa7348b3_9fbf5e3f",
      "range": {
        "startLine": 803,
        "startChar": 4,
        "endLine": 803,
        "endChar": 16
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f0950aa_d1721ec0",
        "filename": "src/fru_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 803,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-09-08T10:06:49Z",
      "side": 1,
      "message": "Done. Removed if(bus \u003e 0). Now, bus can be 0.",
      "parentUuid": "a4b6ffa5_b8feb497",
      "range": {
        "startLine": 803,
        "startChar": 4,
        "endLine": 803,
        "endChar": 16
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a99d3a0_7afb51d9",
        "filename": "src/fru_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 818,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-08-29T21:19:19Z",
      "side": 1,
      "message": "This is existing code, but I do see a bug in this logic. If identical FRUs are connected to the same address onto different legs of the mux, it does not increment the index as it should. \nThis can be addressed in a separate review. except that isMuxBus does not need to be moved if the issue is fixed first.",
      "range": {
        "startLine": 813,
        "startChar": 1,
        "endLine": 818,
        "endChar": 64
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23bc8420_c203366e",
        "filename": "src/fru_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 818,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-08-30T12:58:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7a99d3a0_7afb51d9",
      "range": {
        "startLine": 813,
        "startChar": 1,
        "endLine": 818,
        "endChar": 64
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ccb4703_4ec6d60e",
        "filename": "src/fru_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 818,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-09-05T15:29:05Z",
      "side": 1,
      "message": "I will submit the separate patch for this fix.",
      "parentUuid": "23bc8420_c203366e",
      "range": {
        "startLine": 813,
        "startChar": 1,
        "endLine": 818,
        "endChar": 64
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a1101dc_b3bc1534",
        "filename": "src/fru_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 818,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-09-06T05:55:59Z",
      "side": 1,
      "message": "We Will discuss separately on this. How to find the mux leg number here ?",
      "parentUuid": "0ccb4703_4ec6d60e",
      "range": {
        "startLine": 813,
        "startChar": 1,
        "endLine": 818,
        "endChar": 64
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34dd7490_4bd42fc8",
        "filename": "src/fru_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 818,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-09-06T21:11:04Z",
      "side": 1,
      "message": "I agree a separate patch for this specific issue is good. At the same time, I would like to avoid moving isMuxBus() into the common code since I think it is an i2c eeprom fru specific function. Can you please add a comment here to indicate that isMuxBus can be moved back to fru-device when it is not used here?",
      "parentUuid": "6a1101dc_b3bc1534",
      "range": {
        "startLine": 813,
        "startChar": 1,
        "endLine": 818,
        "endChar": 64
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a9490d13_fa2cf95d",
        "filename": "src/fru_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 818,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-09-08T10:06:49Z",
      "side": 1,
      "message": "Agree. isMuxBus(bus) function is i2c eeprom fru specific.\nBut the reason is moving isMuxBus(bus) function to fru_utils.cpp file is,\n1. isMuxBus(bus) function is calling from fru_utils.cpp (Refer this patch)\n2. test_fru_utils test getting failed when we keep isMuxBus(bus) function in fru_device.cpp file.\n3. Have to add dependencies like i2c, sdbusplus in test_fru_utils.\nhttps://gerrit.openbmc.org/c/openbmc/entity-manager/+/51555/43/meson.build#240\n4. Have to add dependency files in test_fru_utils. \nhttps://gerrit.openbmc.org/c/openbmc/entity-manager/+/51555/43/meson.build#231\n\nSo, avoid these changes, moving isMuxBus(bus) function to fru_utils.cpp",
      "parentUuid": "34dd7490_4bd42fc8",
      "range": {
        "startLine": 813,
        "startChar": 1,
        "endLine": 818,
        "endChar": 64
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "abd54619_bae4db92",
        "filename": "src/fru_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 818,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-09-13T15:48:04Z",
      "side": 1,
      "message": "Is #1 the root reason for #2-4?\nLet me ask another way,  if (with a separate change) checking duplicate FRU is fixed, i.e. the high lighted block is no longer needed, are #2-4 still required?",
      "parentUuid": "a9490d13_fa2cf95d",
      "range": {
        "startLine": 813,
        "startChar": 1,
        "endLine": 818,
        "endChar": 64
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "715149ee_5e2e210a",
        "filename": "src/fru_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 818,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-09-14T14:50:04Z",
      "side": 1,
      "message": "Is #1 the root reason for #2-4?  \n\nyes. for #2-#4 issues only, moved isMuxBus(bus) function to fru-utils.cpp.\n\nif (with a separate change) checking duplicate FRU is fixed, i.e. the high lighted block is no longer needed, are #2-4 still required?\n\nYou mean the below highlighted part can be removed ?\n\n```\n     if (isMuxBus(bus) \u0026\u0026 bus !\u003d busIface.first.first \u0026\u0026\n                    address \u003d\u003d busIface.first.second \u0026\u0026\n                    (getFRUInfo(static_cast\u003cuint8_t\u003e(busIface.first.first),\n                                static_cast\u003cuint8_t\u003e(busIface.first.second)) \u003d\u003d\n                     getFRUInfo(static_cast\u003cuint8_t\u003e(bus),\n                                static_cast\u003cuint8_t\u003e(address))))\n```\n\nIf we remove this part, then isMuxBus(bus) function also removed. So, #2-#4 issues will be resolved.",
      "parentUuid": "abd54619_bae4db92",
      "range": {
        "startLine": 813,
        "startChar": 1,
        "endLine": 818,
        "endChar": 64
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77408e27_c5edf616",
        "filename": "src/fru_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 818,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-10-07T23:02:38Z",
      "side": 1,
      "message": "I think we should fix #1 first, so this patch can be done cleanly. No FRU on a muxed channel should be added to the root bus",
      "parentUuid": "715149ee_5e2e210a",
      "range": {
        "startLine": 813,
        "startChar": 1,
        "endLine": 818,
        "endChar": 64
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0033e60e_6f388f01",
        "filename": "src/fru_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 818,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-10-10T14:21:45Z",
      "side": 1,
      "message": "This code block is there for long time. Won\u0027t this be affected this in some other platforms, if this block removed ? is this fine to remove the above highlighted part ?\n\nCould you please confirm ?",
      "parentUuid": "77408e27_c5edf616",
      "range": {
        "startLine": 813,
        "startChar": 1,
        "endLine": 818,
        "endChar": 64
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}