{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "19920e5b_bc9436ab",
        "filename": "src/fru_device.cpp",
        "patchSetId": 9
      },
      "lineNbr": 680,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-08-29T21:19:19Z",
      "side": 1,
      "message": "Refer comments inline with this function, this can be changed to \n\nstd::optional\u003cint\u003e index \u003d findIndexForFRU();\nif (index) {\nproductname +\u003d \"_\";\nproductName +\u003d  std::to_string(index);\n}",
      "range": {
        "startLine": 680,
        "startChar": 4,
        "endLine": 680,
        "endChar": 70
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c73cd83_fd1bcc11",
        "filename": "src/fru_device.cpp",
        "patchSetId": 9
      },
      "lineNbr": 680,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-08-30T12:58:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "19920e5b_bc9436ab",
      "range": {
        "startLine": 680,
        "startChar": 4,
        "endLine": 680,
        "endChar": 70
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e1ca18c6_c01dad97",
        "filename": "src/fru_device.cpp",
        "patchSetId": 9
      },
      "lineNbr": 680,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-09-05T15:29:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1c73cd83_fd1bcc11",
      "range": {
        "startLine": 680,
        "startChar": 4,
        "endLine": 680,
        "endChar": 70
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4796eee4_6bc19555",
        "filename": "src/fru_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 794,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-08-29T21:19:19Z",
      "side": 1,
      "message": "This function finds the next index if the same FRU already exists. The function name does not describe it. \nCreate a function\n\nstd::optional\u003cint\u003e findIndexForFRU()\n{\n....\n\nif (highest \u003d\u003d -1) \n{\nreturn std::nullopt;\n}\nelse\n{\nreturn highest;\n}\n}",
      "range": {
        "startLine": 794,
        "startChar": 5,
        "endLine": 794,
        "endChar": 25
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34c7f89c_6c2e6785",
        "filename": "src/fru_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 794,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-08-30T12:58:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4796eee4_6bc19555",
      "range": {
        "startLine": 794,
        "startChar": 5,
        "endLine": 794,
        "endChar": 25
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e96e98eb_b5d749af",
        "filename": "src/fru_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 794,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-09-05T15:29:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "34c7f89c_6c2e6785",
      "range": {
        "startLine": 794,
        "startChar": 5,
        "endLine": 794,
        "endChar": 25
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1cfbb1e_cfb0f2a1",
        "filename": "src/fru_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 803,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-08-29T21:19:19Z",
      "side": 1,
      "message": "bus can be 0",
      "range": {
        "startLine": 803,
        "startChar": 4,
        "endLine": 803,
        "endChar": 16
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac6c0a4e_83938c60",
        "filename": "src/fru_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 803,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-08-30T12:58:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f1cfbb1e_cfb0f2a1",
      "range": {
        "startLine": 803,
        "startChar": 4,
        "endLine": 803,
        "endChar": 16
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fa7348b3_9fbf5e3f",
        "filename": "src/fru_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 803,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-09-05T15:36:03Z",
      "side": 1,
      "message": "Agree. I2c bus started with 0. I think, some other platforms has dts entries for i2c-0.\n\nBut here, I think it is checking duplicate bus is present or not.\n\nAlso, I didn\u0027t change any design logic and implementation. This is existing logic.\n\nBus is unsigned int variable, We have to remove this condition \"if (bus \u003e 0) \" from the code. is it fine ?",
      "parentUuid": "ac6c0a4e_83938c60",
      "range": {
        "startLine": 803,
        "startChar": 4,
        "endLine": 803,
        "endChar": 16
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a99d3a0_7afb51d9",
        "filename": "src/fru_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 818,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2022-08-29T21:19:19Z",
      "side": 1,
      "message": "This is existing code, but I do see a bug in this logic. If identical FRUs are connected to the same address onto different legs of the mux, it does not increment the index as it should. \nThis can be addressed in a separate review. except that isMuxBus does not need to be moved if the issue is fixed first.",
      "range": {
        "startLine": 813,
        "startChar": 1,
        "endLine": 818,
        "endChar": 64
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23bc8420_c203366e",
        "filename": "src/fru_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 818,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-08-30T12:58:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7a99d3a0_7afb51d9",
      "range": {
        "startLine": 813,
        "startChar": 1,
        "endLine": 818,
        "endChar": 64
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ccb4703_4ec6d60e",
        "filename": "src/fru_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 818,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-09-05T15:29:05Z",
      "side": 1,
      "message": "I will submit the separate patch for this fix.",
      "parentUuid": "23bc8420_c203366e",
      "range": {
        "startLine": 813,
        "startChar": 1,
        "endLine": 818,
        "endChar": 64
      },
      "revId": "eaf8281ed655623fd28608108797a07eae69258a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}