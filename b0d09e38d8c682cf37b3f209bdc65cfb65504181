{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "864b89ab_6934ee29",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-03-04T16:21:13Z",
      "side": 1,
      "message": "This defeats most of the purpose of entity manager supporting multiple systems with a single binary.",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 24,
        "endChar": 0
      },
      "revId": "b0d09e38d8c682cf37b3f209bdc65cfb65504181",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9f174ef_97a5026d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-03-04T16:23:17Z",
      "side": 1,
      "message": "I\u0027d also say, we shouldn\u0027t allow selecting on a per folder basis.  That incentivizes people to put configs in their companies folder even if they don\u0027t belong (such as in the case of a shared NIC, or other add in card).",
      "parentUuid": "864b89ab_6934ee29",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 24,
        "endChar": 0
      },
      "revId": "b0d09e38d8c682cf37b3f209bdc65cfb65504181",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6254253_873fae3d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-03-05T15:20:08Z",
      "side": 1,
      "message": "\u003e This defeats most of the purpose of entity manager supporting multiple systems with a single binary.\n\n- The default is still to deploy all configurations.\n- This is simply an example of how this feature can be used.\n- I do not expect anyone to blindly copy-paste this regex.\n- A more realistic regex here would also account for the PSU jsons\n  or other common jsons which need to be there for a \u0027complete\u0027 image.\n- Users may deploy as many configs as they want with this feature,\n  there is no limit to the amount of systems that can be supported.\n  So i do not see the point here.\n\n\u003e I\u0027d also say, we shouldn\u0027t allow selecting on a per folder basis. That incentivizes people to put configs in their companies folder even if they don\u0027t belong (such as in the case of a shared NIC, or other add in card).\n\nThe current incentive for people is to\n- delete upstream configs\n- deploy their own configs\n- keep their configs downstream\n\nas this keeps them in control of their configurations which they validated for their particular use-case and hardware setup.\n\nFor example this instance (and the surrounding configs which they deploy),\n\nhttps://github.com/MCT-BMC/tyan_openbmc/blob/master/meta-mct/meta-s8030/recipes-phosphor/configuration/entity-manager/0005-remove-NVME-P4000.json.patch\n\nor this \n\nhttps://github.com/ampere-openbmc/openbmc/blob/c47375f672babf39d3d399c2971a14fc527feb4c/meta-ampere/meta-jefferson/recipes-phosphor/configuration/entity-manager/mtjefferson_cbp2980.json\n\nI would prefer people to have their configurations upstream instead.\n\n\u003e I\u0027d also say, we shouldn\u0027t allow selecting on a per folder basis. That incentivizes people to put configs in their companies folder even if they don\u0027t belong (such as in the case of a shared NIC, or other add in card).\n\nDid this actually happen in EM?\n\nIf someone puts something in a wrong place, you can still veto that or move it afterwards. There is nothing preventing you from reviewing changes just because companies might be maintaining configurations in some sub-directory.\n\nI am reading this as \"Let\u0027s not have folders since then people might put things into the wrong  folder\".",
      "parentUuid": "d9f174ef_97a5026d",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 24,
        "endChar": 0
      },
      "revId": "b0d09e38d8c682cf37b3f209bdc65cfb65504181",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "73dd0c03_96f5d578",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-04-16T17:52:03Z",
      "side": 1,
      "message": "I have reworked the patch to not rely on regex.",
      "parentUuid": "c6254253_873fae3d",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 24,
        "endChar": 0
      },
      "revId": "b0d09e38d8c682cf37b3f209bdc65cfb65504181",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f4d1653_12f06646",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-04-16T21:04:10Z",
      "side": 1,
      "message": "\u003e as this keeps them in control of their configurations which they validated for their particular use-case and hardware setup.\n\nAnd for their downstream, that might absolutely be the right decision for maintenance reasons.  Here in upstream, we get to look at OpenBMC as a whole of more than one platform.  Platform specifics (if we want to support that) would go in meta layers.\n\n\u003e I would prefer people to have their configurations upstream instead.\n\nI\u0027m confused, what\u0027s stopping them from upstreaming those?  The first looks like we missed a probe for manufacturer, which I\u0027d really like to start requiring on all new configs, but we haven\u0027t gotten there yet.  For that device, I think it\u0027s already been fixed?\n\nFwiw, the second one also has a bad probe:\n```\n        \"xyz.openbmc_project.FruDevice({\u0027BOARD_PART_NUMBER\u0027: \u0027CBP2980\u0027})\"\n```\n\nIs the fix to this just that we need to require all FRU probes to have some level of manufacturer matching?  That seems a lot easier to maintain and support (we can get a CI check for it) than trying to segment who wants which configs.\n\n\u003e Did this actually happen in EM?\n\nYep, still exists on master too:\nhttps://github.com/openbmc/openbmc/blob/master/meta-amd/meta-daytonax/recipes-phosphor/configuration/entity-manager/daytonax-baseboard.json",
      "parentUuid": "73dd0c03_96f5d578",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 24,
        "endChar": 0
      },
      "revId": "b0d09e38d8c682cf37b3f209bdc65cfb65504181",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e4fa3a8_d556151a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-04-16T22:01:12Z",
      "side": 1,
      "message": "\u003e And for their downstream, that might absolutely be the right decision for maintenance reasons. \n\nIn my perspective, having a downstream is somewhat of a last resort\n\n\u003e Platform specifics (if we want to support that) would go in meta layers.\n\nI disagree 😊,  EM ```configurations/``` directory is full of platform specific board configurations.\n\n\n\u003e Yep, still exists on master too:\n\nWhich is only reinforcing my argument. \n\nhttps://github.com/openbmc/openbmc/blob/36d626ab36102f241ce100f5cf485ef277c7e942/meta-amd/meta-daytonax/recipes-phosphor/configuration/entity-manager_%25.bbappend\n\nStuff like this shows how people want EM to work. They want to deploy configuration for their board only. Since their BMC firmware image is intended to support that board and not capable to support another board.\n\n\nSo there is no benefit for them to have extra configuration files which they will never use.",
      "parentUuid": "5f4d1653_12f06646",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 24,
        "endChar": 0
      },
      "revId": "b0d09e38d8c682cf37b3f209bdc65cfb65504181",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d592c8d5_4acf08c5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-12T14:05:12Z",
      "side": 1,
      "message": "Closing this comment thread since it\u0027s been inactive for 2 months. Let me know if there are still any concerns 😊",
      "parentUuid": "6e4fa3a8_d556151a",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 24,
        "endChar": 0
      },
      "revId": "b0d09e38d8c682cf37b3f209bdc65cfb65504181",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d12670c_fd36dc22",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2025-03-04T16:06:42Z",
      "side": 1,
      "message": "benchmarks please",
      "revId": "b0d09e38d8c682cf37b3f209bdc65cfb65504181",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d488de00_3784c850",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-03-04T16:21:13Z",
      "side": 1,
      "message": "+1, and show some effort that we\u0027ve tried to optimize this in other ways.  This seems counter to the entity-manager stated goal of\n\n\"Reduce the amount of code that is different between platforms\"\n\nThis would make the config different.\nhttps://github.com/openbmc/entity-manager?tab\u003dreadme-ov-file#goals",
      "parentUuid": "3d12670c_fd36dc22",
      "revId": "b0d09e38d8c682cf37b3f209bdc65cfb65504181",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "957cf285_b470c155",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-03-05T15:20:08Z",
      "side": 1,
      "message": "\u003e benchmarks please\n\nAgree, i can provide benchmarks to show there is some measurable benefit.\n\n\u003e +1, and show some effort that we\u0027ve tried to optimize this in other ways.\n\nConverting the .json files into .cpp files during the build step would optimize it in another way. Then EM could just use that as default and when people develop their config in ```/usr/share/entity-manager/configurations```, EM could use that to override that which is built into the binary.\n\nThis would eliminate the parsing step. However it is not optimal\nsince there would still be configuration which is not needed.\n\n\u003e  This seems counter to the entity-manager stated goal of\n  \"Reduce the amount of code that is different between platforms\"\n  This would make the config different.\n\nThere should be no observable difference besides a reduced EM startup delay,\nif this option is correctly configured and all required + common configurations are present.\n\nI view EM config in the same way as devicetrees. There is no need to have a devicetree for system B on system A if system A will never be a system B.\n\nCan you elaborate how the stated goal applies in this situation and which benefit we gain by having configuration as part of the image if it will never be probed?",
      "parentUuid": "d488de00_3784c850",
      "revId": "b0d09e38d8c682cf37b3f209bdc65cfb65504181",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ada9fab3_42edd042",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-12T14:05:12Z",
      "side": 1,
      "message": "\u003e benchmarks please\n\nRefer to generic nlohmann json benchmarks for json parsing. The json parsing can be very time-consuming 😊.\n\n\u003e  This seems counter to the entity-manager stated goal of\n\"Reduce the amount of code that is different between platforms\"\n\nThe code is still the same. The effective configuration remains the same if the feature is correctly configured.\n\n\u003e show some effort that we\u0027ve tried to optimize this in other ways.\n\nAfter looking at the EM codebase, i am doubtful that there is much room for optimization. Probably needs some major cleanup. Compiling all the json into the EM could result in a good speedup but the EM codebase is not ready and then we would also need the inotify in case folks overwrite configuration on the BMC, then it needs to be parsed again.\n\nThen there is still the tradeoff with the binary size of EM bloating due to the included configuration.\n\n\u003e Can you elaborate how the stated goal applies in this situation and which benefit we gain by having configuration as part of the image if it will never be probed?\n\nSince there is no responses to the discussion in this thread i will close the thread after 2+ months, let me know if there are any other concerns 😊",
      "parentUuid": "957cf285_b470c155",
      "revId": "b0d09e38d8c682cf37b3f209bdc65cfb65504181",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4101fa28_32ea4f0f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001711
      },
      "writtenOn": "2025-02-18T09:33:17Z",
      "side": 1,
      "message": "In the current state it would probably not benefit too much but if the JSON files would be ordered and named a bit better I can see this becoming useful",
      "revId": "b0d09e38d8c682cf37b3f209bdc65cfb65504181",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1747ead0_33d3cc2b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2025-02-19T08:41:48Z",
      "side": 1,
      "message": "LGTM",
      "revId": "b0d09e38d8c682cf37b3f209bdc65cfb65504181",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "159b765e_07667a4d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2025-02-20T11:15:58Z",
      "side": 1,
      "message": "LGTM",
      "revId": "b0d09e38d8c682cf37b3f209bdc65cfb65504181",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "764fa373_7486e05b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2025-03-04T14:41:13Z",
      "side": 1,
      "message": "As someone that doesn\u0027t use fru-device on their systems and that also doesn\u0027t support non-qualified parts being plugged into them, I\u0027m all for a way of removing unnecessary configs.\n\nHowever, I\u0027m not sure if this goes against the spirit of EM, so I will wait a bit for the original maintainers to weigh in.",
      "revId": "b0d09e38d8c682cf37b3f209bdc65cfb65504181",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e56784a_cb3a8b3b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-03-04T16:30:56Z",
      "side": 1,
      "message": "I\u0027d also point out this feature assumes that there\u0027s useful information in the filename, which there isn\u0027t really.  We don\u0027t want to have to enforce some new naming convention because we\u0027re regex-searching filenames.\n\nif we end up finding a way that this feature doesn\u0027t cause a violation of our goals, the search should be based on content of the file, not filename regex.",
      "revId": "b0d09e38d8c682cf37b3f209bdc65cfb65504181",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7939533_f6705a54",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-03-04T16:39:50Z",
      "side": 1,
      "message": "\u003e I\u0027m all for a way of removing unnecessary configs.\n\nFor performance reasons?  I wouldn\u0027t expect that FruDevice probes would have a lot of overhead if you\u0027re never sending out a FRU interfacesadded signal?",
      "parentUuid": "764fa373_7486e05b",
      "revId": "b0d09e38d8c682cf37b3f209bdc65cfb65504181",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a33a103_0358ee51",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-03-05T15:20:08Z",
      "side": 1,
      "message": "\u003e I\u0027d also point out this feature assumes that there\u0027s useful information in the filename, which there isn\u0027t really.\n\nThere is some information, for example if you have configs in ```tyan/``` directory, that is tyan hardware configuration which an IBM board does not need.\n\nAlso, a tyan board would not benefit much from configurations in ```meta/``` folder. If it could use any config from there, that config should not be in there in the first place.\n\nSame can be done with PSU, NIC and such, and then the file path will have that useful information which is missing now. For example a tyan board might pull in configurations from ```tyan/```, ```psu/```, ```nic/```, and ```common/```.\n\nBut if there is no feature to take advantage of organizing the information, it can all be dumped into toplevel....\n\n\n\n\u003e if we end up finding a way that this feature doesn\u0027t cause a violation of our goals, the search should be based on content of the file, not filename regex.\n\nWhich specific properties of the file would you search? What are you proposing?\n\nPeople do not want to have configurations in their image which \n\n- cost performance\n- may be probed unintended\n- which they do not know about and have not validated for their use-case\n\nIt would be nice if you could consider the use case for platform maintainers who need to have some kind of overview of which configuration is present on their board. At the same time they do not want to write configuration which is already present upstream, as it would be a time-waste.\n\nA solution for them might be to organize the configuration into folders such that they are able to pick and choose what they need for their board, while preventing the bloat and slowdown from configurations which will never probe on their systems.",
      "parentUuid": "9e56784a_cb3a8b3b",
      "revId": "b0d09e38d8c682cf37b3f209bdc65cfb65504181",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d0647d0f_92f1b8f6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2025-03-05T16:43:15Z",
      "side": 1,
      "message": "I haven\u0027t measured performance for reading and parsing the 200ish files, though it probably isn\u0027t so bad.  For people that do use FruDevice, they have the added penalty of having to compare every single possible Probe statement on each signal, even for boards that don\u0027t fit, haven\u0027t been qualified, or don\u0027t have kernel drivers configured for anyway.",
      "parentUuid": "b7939533_f6705a54",
      "revId": "b0d09e38d8c682cf37b3f209bdc65cfb65504181",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3690b526_2b620b7c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-04-16T17:52:03Z",
      "side": 1,
      "message": "\u003e if we end up finding a way that this feature doesn\u0027t cause a violation of our goals, the search should be based on content of the file, not filename regex.\n\nI have reworked this feature to be based on file contents.\n\nAn EM config can be declared to support or be compatible with a piece of hardware,\nand then users can configure which hardware should be supported and that then determines which configurations are installed 😊\n\nPlease review again and confirm if this aligns better with your expectation 👍",
      "parentUuid": "7a33a103_0358ee51",
      "revId": "b0d09e38d8c682cf37b3f209bdc65cfb65504181",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c630f3f_59125b3e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-04-16T21:08:29Z",
      "side": 1,
      "message": "\u003e having to compare every single possible Probe statement on each signal, even for boards that don\u0027t fit\n\nYou mean the literal string operator\u003d\u003d compare when we read in a signal for interface name?  Is that actually a problem?  Considering there\u0027s a 5 second bounce timer before we even start trying to read stuff in, I find it really hard to believe that the number of probes is the thing that\u0027s the performance problem.\n\nIf it truly is a performance problem that we can articulate/measure, it\u0027s probably relatively easy to optimize using some form of map/set lookup.",
      "parentUuid": "d0647d0f_92f1b8f6",
      "revId": "b0d09e38d8c682cf37b3f209bdc65cfb65504181",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c1fc6c7_424a42ef",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-04-16T21:08:29Z",
      "side": 1,
      "message": "It looks like we now have a magic \"compatible\" string in the config files?  I don\u0027t think that solves the concern.",
      "parentUuid": "3690b526_2b620b7c",
      "revId": "b0d09e38d8c682cf37b3f209bdc65cfb65504181",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ba3cc98_288b8e41",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-04-16T22:01:12Z",
      "side": 1,
      "message": "## existing policy still the default\n\n\u003e the purpose of entity manager supporting multiple systems with a single binary.\n\nI think it is fine to have this goal and policy. The patch intent is to have this as default like before.\n\n## concern about untested and unreviewed configuration\n\nBut there is a use-case for people who get nervous around having configuration as part of their image that they never validated or reviewed. For those people it might make sense to be selective in which hardware EM supports.\n\nIf an unqualified component / psu / whatever is plugged into a system, or an upstream configuration is just badly written, what happens at runtime, that will be  a surprise.",
      "parentUuid": "8c1fc6c7_424a42ef",
      "revId": "b0d09e38d8c682cf37b3f209bdc65cfb65504181",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3adb885c_18470af9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-12T14:05:12Z",
      "side": 1,
      "message": "Closing this comment thread since it\u0027s been inactive for 2 months. Let me know if there are still any concerns 😊",
      "parentUuid": "3ba3cc98_288b8e41",
      "revId": "b0d09e38d8c682cf37b3f209bdc65cfb65504181",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de8aa63c_1d0a21d5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-12T18:35:08Z",
      "side": 1,
      "message": "\u003e But there is a use-case for people who get nervous around having configuration\n\nI\u0027m confused at this statement.  If those _people_ are nervous, they\u0027re free to remove whatever configs they like.  That\u0027s why the firmware is open.  That doesn\u0027t mean we need to do it upstream.\n\nCan we be a little more concrete than \"get nervous\" about the technical challenges of supporting multiple configs in a single binary?",
      "parentUuid": "3adb885c_18470af9",
      "revId": "b0d09e38d8c682cf37b3f209bdc65cfb65504181",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1fddd1ff_ea622a82",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-13T08:48:42Z",
      "side": 1,
      "message": "\u003e  If those people are nervous, they\u0027re free to remove whatever configs they like. That\u0027s why the firmware is open. That doesn\u0027t mean we need to do it upstream.\n\nI would like to avoid any such modifications. Ideally the upstream software only needs to be configured and then it should be ready to go.\n\nIf there is need for patching or adding / removing files to make it work then the upstream software needs to be fixed. I do not want to \u0027value add\u0027 or jump through any hoops like with the rsyslog config everyone keeps copy/pasting.",
      "parentUuid": "de8aa63c_1d0a21d5",
      "revId": "b0d09e38d8c682cf37b3f209bdc65cfb65504181",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}