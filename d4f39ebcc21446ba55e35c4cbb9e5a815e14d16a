{
  "comments": [
    {
      "key": {
        "uuid": "d5d93ce1_3609a639",
        "filename": "schemas/legacy.json",
        "patchSetId": 2
      },
      "lineNbr": 530,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-06T15:34:14Z",
      "side": 1,
      "message": "I think I misunderstood when you proposed this.  The config files shouldn\u0027t have anything dbus specific in them, and the old mechanisms for this were better, and don\u0027t require changing everyones config.\n\nIf we want to add the prefix we should be doing it in code.",
      "range": {
        "startLine": 521,
        "startChar": 0,
        "endLine": 530,
        "endChar": 67
      },
      "revId": "d4f39ebcc21446ba55e35c4cbb9e5a815e14d16a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f25f4980_26363689",
        "filename": "schemas/legacy.json",
        "patchSetId": 2
      },
      "lineNbr": 530,
      "author": {
        "id": 1000224
      },
      "writtenOn": "2021-08-10T08:06:33Z",
      "side": 1,
      "message": "OK",
      "parentUuid": "d5d93ce1_3609a639",
      "range": {
        "startLine": 521,
        "startChar": 0,
        "endLine": 530,
        "endChar": 67
      },
      "revId": "d4f39ebcc21446ba55e35c4cbb9e5a815e14d16a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af3f9dff_6aa5c724",
        "filename": "schemas/legacy.json",
        "patchSetId": 2
      },
      "lineNbr": 530,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-10T10:37:20Z",
      "side": 1,
      "message": "\u003e The config files shouldn\u0027t have anything dbus specific in them, and the old mechanisms for this were better\n\nCan you expand on why?  I don\u0027t agree on the surface.  I\u0027d like some more of your thoughts to back this up.  ie. why \"shouldn\u0027t\" and how was \"the old mechanism\" \"better\"?\n\nIt seems pointless to me to have this mapping spread around the code when we generate it already.  It isn\u0027t \"dbus specific\", it just happens to be the identifier scheme we\u0027ve come up with.",
      "parentUuid": "f25f4980_26363689",
      "range": {
        "startLine": 521,
        "startChar": 0,
        "endLine": 530,
        "endChar": 67
      },
      "revId": "d4f39ebcc21446ba55e35c4cbb9e5a815e14d16a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9365be74_943c0401",
        "filename": "schemas/legacy.json",
        "patchSetId": 2
      },
      "lineNbr": 530,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-10T17:56:11Z",
      "side": 1,
      "message": "\u003e \u003e The config files shouldn\u0027t have anything dbus specific in them, and the old mechanisms for this were better\n\u003e \n\u003e Can you expand on why?  I don\u0027t agree on the surface.  I\u0027d like some more of your thoughts to back this up.  ie. why \"shouldn\u0027t\" and how was \"the old mechanism\" \"better\"?\n\nBecause the config files are designed to be used by an openbmc user, possibly a hardware person, not an openbmc developer.  In general, we shouldn\u0027t be exposing internal interface details on a user facing API.  For example, if we ever built a sensor subsystem that didn\u0027t use dbus at all (unlikely, but possible) the config files should be able to survive that without a backward compatibility issue.  If we ever dropped the prefix on the enum Units on dbus (also unlikely, but possible) that should also have a schema that can survive.\n\n\u003e \n\u003e It seems pointless to me to have this mapping spread around the code when we generate it already.  It isn\u0027t \"dbus specific\", it just happens to be the identifier scheme we\u0027ve come up with.\n\nIt\u0027s an identifier that\u0027s used on dbus and is specific to the sensor interface.  I don\u0027t think it\u0027s used anywhere outside of dbus today?",
      "parentUuid": "af3f9dff_6aa5c724",
      "range": {
        "startLine": 521,
        "startChar": 0,
        "endLine": 530,
        "endChar": 67
      },
      "revId": "d4f39ebcc21446ba55e35c4cbb9e5a815e14d16a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8078574_407e194d",
        "filename": "schemas/legacy.json",
        "patchSetId": 2
      },
      "lineNbr": 530,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-16T15:00:53Z",
      "side": 1,
      "message": "It would be nice if we could induce EM to do the transformation of these enumerations then so the transformation isn\u0027t spread around.\n\nIs there any good way to keep the Units-enum values here in sync with what is in PDI?",
      "parentUuid": "9365be74_943c0401",
      "range": {
        "startLine": 521,
        "startChar": 0,
        "endLine": 530,
        "endChar": 67
      },
      "revId": "d4f39ebcc21446ba55e35c4cbb9e5a815e14d16a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ed047c0_e854cdbb",
        "filename": "schemas/legacy.json",
        "patchSetId": 2
      },
      "lineNbr": 530,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-16T17:39:17Z",
      "side": 1,
      "message": "\u003e It would be nice if we could induce EM to do the transformation of these enumerations then so the transformation isn\u0027t spread around.\n\nI thought there was already a patchset to do that.\n\n\u003e \n\u003e Is there any good way to keep the Units-enum values here in sync with what is in PDI?\n\nRemove it entirely, and derive the units automatically as a combination of the input parameters?  At the very least allowing a default of \"same units as the first sensor in the list\" would cover 90+% of the cases where median is used.\n\nWith that said, open to other ideas here.   Ignoring downstream platforms, everyone adding a new exposes record will have to check into this repo anyway, so it\u0027s not a huge difference in effort having this desynced from PDI.  For downstream platforms, yeah, that\u0027ll be a pain because you\u0027ll have to maintain a patch against the schemas, but I\u0027m ok making downstream harder in this case.  Get your config files upstreamed.",
      "parentUuid": "e8078574_407e194d",
      "range": {
        "startLine": 521,
        "startChar": 0,
        "endLine": 530,
        "endChar": 67
      },
      "revId": "d4f39ebcc21446ba55e35c4cbb9e5a815e14d16a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}