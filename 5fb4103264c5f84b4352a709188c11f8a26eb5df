{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "47b865de_608c8609",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-04-16T20:24:02Z",
      "side": 1,
      "message": "THis isn\u0027t really true.  The intent of the policy was one file per piece of hardware.\n\nThere might be cases where a piece of hardware \"acts\" differently dependent on location, or if it\u0027s in different modes.   Those different \"modes\" are intended to be captured in the array, so we keep one file per config.\n\nLets make sure the PR matches what the policy intent is.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 44
      },
      "revId": "5fb4103264c5f84b4352a709188c11f8a26eb5df",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5327619_2d7dd55f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-04-16T20:45:21Z",
      "side": 1,
      "message": "\u003e THis isn\u0027t really true. The intent of the policy was one file per piece of hardware.\n\nI should have probably read the ```README.md``` where this policy is mentioned üëç\n\nI am wondering if the policy intent is worth keeping.\n\nIn case of a complicated piece of hardware with variants and modes requiring different configuration files, i would rather have a folder to keep them in.\n\nThis can give the advantage to easily ```diff``` the variants of that piece of hardware.\n\nWith a combined file, it would still be possible to ```diff``` them but may require special scripts. I am wondering how you handle this use-case.\n\nI see the concern that people may lose track of multiple configurations supporting a piece of hardware if they are not properly kept in folders. But i would assume good intent from people to keep their configurations organized.\n\nThere is another patch in this change to introduce ```CompatibleHardware``` property at EM Config toplevel to support another feature. Maybe that can help to keep track of multiple configurations supporting a piece of hardware.",
      "parentUuid": "47b865de_608c8609",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 44
      },
      "revId": "5fb4103264c5f84b4352a709188c11f8a26eb5df",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92f34d99_f3f05dd2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-04-17T20:22:13Z",
      "side": 1,
      "message": "\u003e \u003e THis isn\u0027t really true. The intent of the policy was one file per piece of hardware.\n\u003e \n\u003e I should have probably read the ```README.md``` where this policy is mentioned üëç\n\u003e \n\nAs the guy that wrote the readme.... I highly recommend reading it üòä\n\n\u003e I am wondering if the policy intent is worth keeping.\n\u003e \n\u003e In case of a complicated piece of hardware with variants and modes requiring different configuration files, i would rather have a folder to keep them in.\n\nI disagree.  I would rather we use folders to indicate classes and manufacturers of hardware.  The goal with the \"one file per hardware\" is that new hardware could be added using a single include.  I don\u0027t really want to lose that ability.\n\n\u003e \n\u003e This can give the advantage to easily ```diff``` the variants of that piece of hardware.\n\u003e \n\u003e With a combined file, it would still be possible to ```diff``` them but may require special scripts. I am wondering how you handle this use-case.\n\nThe script seems like it would be a line or two of python.  If we\u0027re worried about that case, we can check that into a scripts repo, but I don\u0027t think the general \"diff these two identical hardware configs\" is a common use case.  \n\n\u003e \n\u003e I see the concern that people may lose track of multiple configurations supporting a piece of hardware if they are not properly kept in folders. But i would assume good intent from people to keep their configurations organized.\n\nIt\u0027s much easier to just be able to enforce it as convention.  While we may assume good intent, a lot of people don\u0027t read the docs on intent (see above üòä) so the more clear we can make it without needing documentation, the better.  Certainly appending _N to the end of the filename is more subtle as a convention than what we have.\n\n\u003e \n\u003e There is another patch in this change to introduce ```CompatibleHardware``` property at EM Config toplevel to support another feature. Maybe that can help to keep track of multiple configurations supporting a piece of hardware.\n\nAlready left comments on that as well.  I think that\u0027s just a way to drive community factions rather than community consensus.  we can discuss more in that patch.",
      "parentUuid": "f5327619_2d7dd55f",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 44
      },
      "revId": "5fb4103264c5f84b4352a709188c11f8a26eb5df",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88bbfb00_212c2a4d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-04-22T08:58:42Z",
      "side": 1,
      "message": "\u003e I disagree. I would rather we use folders to indicate classes and manufacturers of hardware. The goal with the \"one file per hardware\" is that new hardware could be added using a single include. I don\u0027t really want to lose that ability.\n\nI had a solution with regex to select based on folders. Which you did not agree with.\n\n\u003e The goal with the \"one file per hardware\" is that new hardware could be added using a single include. I don\u0027t really want to lose that ability.\n\nWhy is that important to have that capability? It\u0027s not like there is any guarantees provided by having it be in one file?\n\n\nIf you have a single piece of hardware, why would it even result in multiple EM configs. It should be configuration of a specific \u0027Type\u0027, right? Like \u0027Powersupply\u0027 or \u0027Board\u0027.",
      "parentUuid": "92f34d99_f3f05dd2",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 44
      },
      "revId": "5fb4103264c5f84b4352a709188c11f8a26eb5df",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "910897d3_746efcf1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-04-16T20:08:55Z",
      "side": 1,
      "message": "What is the advantage of splitting this config into multiple files.  The reasoning on next line is more around cosmetic stuff. TBH One can also prefer to keep the related conifguration in a single file to avoid creating multiple files.\nHas there been any formal discussion on this change?",
      "revId": "5fb4103264c5f84b4352a709188c11f8a26eb5df",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef708d00_3cdd7a12",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-04-16T20:20:07Z",
      "side": 1,
      "message": "Thanks for taking an interest in this change üòä\n\n\u003e TBH One can also prefer to keep the related configuration in a single file to avoid creating multiple files.\n\nTo EM, these configurations are unrelated. I do not think there is any code which would treat them differently based on which file they come from.\nIf you have a concern around losing track of related configuration, i think creating a folder for related configuration files can solve that issue.\n\n\u003e What is the advantage of splitting this config into multiple files\n\nI want to simplify this aspect of EM which will\n- simplify the schema\n- simplify runtime code\n- simplify scripts for validation of configuration\n- indentation is reduced \n- no \u00272 ways of doing something\u0027\n\n\u003e Has there been any formal discussion on this change?\n\nNot much discussion. I think the patch is the right place to discuss this.",
      "parentUuid": "910897d3_746efcf1",
      "revId": "5fb4103264c5f84b4352a709188c11f8a26eb5df",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea44a033_c4480d4b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-04-16T20:28:20Z",
      "side": 1,
      "message": "If you want to progress this forward, I\u0027d recommend some stages:\n\n1. For files that have an array with a single element, that\u0027s obviously incorrect, migrate those in a patchset.\n2. For the remaining configs, have your script walk through and ensure that the probe statements are very similar, and differ only by a location parameter.  If they don\u0027t split the files.  Do this in patchset 2.",
      "revId": "5fb4103264c5f84b4352a709188c11f8a26eb5df",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4ce310e_adb8d3b9",
        "filename": "configurations/sbp1_rssd_1.json",
        "patchSetId": 4
      },
      "lineNbr": 124,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-04-16T20:31:36Z",
      "side": 1,
      "message": "Having 30 independent files for this really seems complex.  Generally we would use the % replace expressions to collapse this into a single file.",
      "revId": "5fb4103264c5f84b4352a709188c11f8a26eb5df",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}