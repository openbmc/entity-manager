{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5eff2612_41082836",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2023-08-10T18:05:00Z",
      "side": 1,
      "message": "This seems like a new feature, can we add a design doc first?",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 52
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "72722043_b748d383",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2023-08-10T19:57:23Z",
      "side": 1,
      "message": "That\u0027s a good point. I\u0027ll put something together. Will it need to be submitted through Gerrit and accepted @ https://github.com/openbmc/docs/tree/master/designs, or is there another process I should look into?",
      "parentUuid": "5eff2612_41082836",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 52
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6a46177_43d8a3e9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2023-08-14T22:21:03Z",
      "side": 1,
      "message": "This is the place to go for the design doc review. Looking forward to it",
      "parentUuid": "72722043_b748d383",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 52
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39b95472_01276025",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-08-16T18:51:27Z",
      "side": 1,
      "message": "Please wrap your commit message properly.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 33
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9271918a_650899cd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2023-08-10T18:05:00Z",
      "side": 1,
      "message": "Is this proprietary implementation or opensource code?",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 45
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3d4bcbd_55c80e87",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2023-08-10T19:57:23Z",
      "side": 1,
      "message": "The uBoot code HPE has for creating FRU data files based on FRU data copied into RAM during boot will be open sourced.\n\nThat said, this feature should work with any setup that writes FRU data to the file system. One property/field per file is the current expectation.",
      "parentUuid": "9271918a_650899cd",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 45
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ff73e40_943a5617",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2023-08-14T22:21:03Z",
      "side": 1,
      "message": "ACK",
      "parentUuid": "b3d4bcbd_55c80e87",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 45
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45bed513_9d3de6fe",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-08-16T18:51:27Z",
      "side": 1,
      "message": "\u003e The uBoot code HPE has.\n\nplease provide a pointer to this code traceable back to:\nhttps://github.com/openbmc/u-boot\n\nIf it\u0027s not present, this discussion on this patch is a little premature.  Having u-boot directly write the filesystem is a little worrisome as a design, and we need to make sure it\u0027s handled appropriately.\n\nFor sending data from u-boot to openbmc userspace, we already have https://github.com/openbmc/phosphor-u-boot-env-mgr that should be used, unless there\u0027s some technical reason why that doesn\u0027t work, but a patchset isn\u0027t the right place to have that discussion, a design doc is.",
      "parentUuid": "3ff73e40_943a5617",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 45
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f7d450f_347bbdb6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2023-08-10T18:05:00Z",
      "side": 1,
      "message": "It would be good to cover how to expand in the design doc.",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 25,
        "endChar": 38
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0672f024_0280dbbc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2023-08-10T19:57:23Z",
      "side": 1,
      "message": "A preview of the steps I\u0027ll be adding to the design doc for supporting a (non-HPE-specific) Managed FRU Device can be found in the comments at line 2000.\n\nIn retrospect, maybe I should have put that comment *above* the \"HPE specific code\" label.",
      "parentUuid": "6f7d450f_347bbdb6",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 25,
        "endChar": 38
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a073105b_4304025b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2023-08-10T19:59:17Z",
      "side": 1,
      "message": "Correction: I meant to point to comments starting at line 1400.",
      "parentUuid": "0672f024_0280dbbc",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 25,
        "endChar": 38
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abbedb28_f460a2ac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-08-16T19:03:07Z",
      "side": 1,
      "message": "Overall, this patchset and design chooses to rewrite functionality that already exists, but doesn\u0027t really justify why it\u0027s doing so.  That explanation of \"why this is special and different than what\u0027s already in the project\" needs a lot more discussion, including references to the existing code that communicates with u-boot.\n\nIf this design goes forward, this really feels like it needs its own daemon, because it\u0027s completely changing the transport (filesystem instead of i2ctools) but lets cross that bridge when we get there.",
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6201f7c6_4cbecae7",
        "filename": "src/fru_device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1298,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-08-16T19:58:10Z",
      "side": 1,
      "message": "Is this how we handle hex field in the API that exists?  I didn\u0027t think so, but I haven\u0027t looked.  Just posting them with a 0X prefix doesn\u0027t seem productive, but if it\u0027s what we do already, I guess it\u0027s fine?",
      "range": {
        "startLine": 1298,
        "startChar": 32,
        "endLine": 1298,
        "endChar": 34
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af3a474d_7b44dc86",
        "filename": "src/fru_device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1309,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-08-16T19:58:10Z",
      "side": 1,
      "message": "Return and log an error?",
      "range": {
        "startLine": 1309,
        "startChar": 0,
        "endLine": 1309,
        "endChar": 68
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa2d31ae_1735f403",
        "filename": "src/fru_device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1316,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-08-16T19:58:10Z",
      "side": 1,
      "message": "We do other transforms by replacing with underscore, so the tests can catch that there\u0027s a problem in the eeprom, I would expect this to do the same:\nhttps://github.com/openbmc/entity-manager/blob/6fa508cbdf90fdd612daa05039836486ef6e6bb1/src/fru_device.cpp#L684\n\nAgain, this comes back to a problem of not reusing code that exists.",
      "range": {
        "startLine": 1312,
        "startChar": 12,
        "endLine": 1316,
        "endChar": 15
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "acfbb7e8_1bb20b17",
        "filename": "src/fru_device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1321,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-08-16T19:58:10Z",
      "side": 1,
      "message": "std::string by definition is null terminated.  I\u0027m a little surprised this gives the right result (which means that someone is calling c_str() somewhere they shouldn\u0027t be), but this isn\u0027t right.",
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1adbcc02_98a2c48d",
        "filename": "src/fru_device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1323,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-08-16T19:10:37Z",
      "side": 1,
      "message": "This is also incorrect, it\u0027s going to register properties like \"serial_number\" which doesn\u0027t match the existing API.  Please validate that your DBus API matches what exists.",
      "range": {
        "startLine": 1323,
        "startChar": 8,
        "endLine": 1323,
        "endChar": 31
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8de6b675_cdd18215",
        "filename": "src/fru_device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1338,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-08-16T19:10:37Z",
      "side": 1,
      "message": "This seems kind of unintentionally confrontational.  Are you saying no manufacturer except HPe can use this file format?  Presumably we want to read this string out of the FRU somewhere?",
      "range": {
        "startLine": 1338,
        "startChar": 0,
        "endLine": 1338,
        "endChar": 56
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "747848be_46b88e02",
        "filename": "src/fru_device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1343,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-08-16T19:10:37Z",
      "side": 1,
      "message": "This seems ill advised as a path name.",
      "range": {
        "startLine": 1343,
        "startChar": 29,
        "endLine": 1343,
        "endChar": 36
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f5e3ffb_5dcabc8e",
        "filename": "src/fru_device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1349,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-08-16T19:10:37Z",
      "side": 1,
      "message": "Why are these being put in their own namespace?  Seems like these are FRU entries, and should go in the same namespace as the other entries?",
      "range": {
        "startLine": 1348,
        "startChar": 32,
        "endLine": 1349,
        "endChar": 49
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "002a4737_252f133a",
        "filename": "src/fru_device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1352,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-08-16T19:10:37Z",
      "side": 1,
      "message": "Naming convention on this is wrong, doesn\u0027t match anything that exists.  Please follow the existing APIs.",
      "range": {
        "startLine": 1352,
        "startChar": 30,
        "endLine": 1352,
        "endChar": 50
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f912df5f_a8e9f69a",
        "filename": "src/fru_device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1386,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-08-16T19:03:07Z",
      "side": 1,
      "message": "Why static?  either it\u0027s:\n1. Const, in which case, use a constexpr data structure, like array\n2. Non const, in which was use a non static stack variable.\n\nI suspect it\u0027s #1",
      "range": {
        "startLine": 1386,
        "startChar": 4,
        "endLine": 1386,
        "endChar": 10
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7695b3bb_1a05c7d8",
        "filename": "src/fru_device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1393,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-08-16T19:03:07Z",
      "side": 1,
      "message": "Where are these paths referenced from?  Can you add a comment with the link to the code that this needs to stay aligned with?",
      "range": {
        "startLine": 1387,
        "startChar": 0,
        "endLine": 1393,
        "endChar": 58
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eae970e1_80d804cb",
        "filename": "src/fru_device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1400,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2023-08-10T19:57:23Z",
      "side": 1,
      "message": "The below comment outlines the current process for supporting a new Managed FRU Device.\n\nIn the future, I think it makes sense to move these path/property name/file format definitions into .JSON config files, but I haven\u0027t looked into what that will take yet.",
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "11999105_eda395b6",
        "filename": "src/fru_device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1400,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-08-16T19:10:37Z",
      "side": 1,
      "message": "At a file-format level is this configurable?  I suspect it doesn\u0027t need changed on a per-system basis.",
      "parentUuid": "eae970e1_80d804cb",
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e7cd0dd_703d2903",
        "filename": "src/fru_device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1425,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2023-08-10T18:05:00Z",
      "side": 1,
      "message": "These are GXP specific implementation. Is it possible generalize and move the hard coded path into configuration files?",
      "range": {
        "startLine": 1381,
        "startChar": 0,
        "endLine": 1425,
        "endChar": 0
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fbfe455_2ee90eea",
        "filename": "src/fru_device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1425,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2023-08-10T19:57:23Z",
      "side": 1,
      "message": "The current setup is intended to allow \u0027anyone\u0027 to create a new \u0027managedFRUDirectories newManagedPaths,\u0027 populate it with relevant paths for their device, then set \u0027managedFRUs[managedFRUType::NewDevice] \u003d newManagedPaths;\u0027\n\nI definitely like the idea of having this info read in from data JSON config files, but haven\u0027t researched how much new structure will be required for that yet.\n\nHow comfortable would you be with a \u0027get paths from JSON\u0027 feature being added as as add-on (separate dependent Gerrit review) to this one?",
      "parentUuid": "0e7cd0dd_703d2903",
      "range": {
        "startLine": 1381,
        "startChar": 0,
        "endLine": 1425,
        "endChar": 0
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c879c41_6dc6a0fa",
        "filename": "src/fru_device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1425,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2023-08-14T22:21:03Z",
      "side": 1,
      "message": "I lean towards get these into json to start with. So system only need to look for the path that are relevant. For example platforms that do not have the ManagedFru do not have to walk through this list at all and HPE system only needs to look for the directories that are valid for HPE.",
      "parentUuid": "9fbfe455_2ee90eea",
      "range": {
        "startLine": 1381,
        "startChar": 0,
        "endLine": 1425,
        "endChar": 0
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cda54ae5_ee0de81c",
        "filename": "src/fru_device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1425,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2023-08-15T21:58:43Z",
      "side": 1,
      "message": "A point in favor of using JSON configs as an add-on feature:\n\nPart of the issue we\u0027re solving is that there\u0027s currently no way (that I\u0027m aware of) for Entity Manager probes to identify HPE systems, since the FRUDevice data typically used for device ID is not available over the standard I2C channels that Entity Manager currently scans for that data.\n\nMy understanding is that we\u0027re going to have to check the filesystem for the existence of specific Managed FRU directories regardless of where the filepaths are defined- but this is intended as a one-off process at Entity Manager startup, and we can limit the number of checks done (ie stop checking for a given FRU type at the first missing directory).\n\nMoving [FRU Type]-\u003e[file path list]definitions to JSON configs could make it simpler to add arbitrary new \u0027Managed FRUs\u0027 directories and files to scan (this additionally could be used as a way to move arbitrary data from the filesystem to D-Bus under a \u0027FRU Device\u0027 interface), but I feel like it\u0027s more of a \"nice to have\" feature unless the list of supported devices and directories starts to really expand.\n\nThoughts?",
      "parentUuid": "1c879c41_6dc6a0fa",
      "range": {
        "startLine": 1381,
        "startChar": 0,
        "endLine": 1425,
        "endChar": 0
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abedbf80_029be694",
        "filename": "src/fru_device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1425,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2023-08-16T01:20:59Z",
      "side": 1,
      "message": "Thanks for the explanation. I got it now. \nHave you thought about leverage filesystem based baseboard fru here https://github.com/openbmc/entity-manager/blob/master/src/fru_device.cpp#L69\nSeems like you might be able to solve your Probe issue with it",
      "parentUuid": "cda54ae5_ee0de81c",
      "range": {
        "startLine": 1381,
        "startChar": 0,
        "endLine": 1425,
        "endChar": 0
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ccc75e3_88fae65b",
        "filename": "src/fru_device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1425,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2023-08-16T18:46:28Z",
      "side": 1,
      "message": "My understanding is that that functionality would be useful in setups that write a standard FRU data blob to the filesystem, but it won\u0027t solve for HPE\u0027s case for two layers of reasons:\n\n\t1) The uBoot code HPE is working with writes the FRU data to disk as individual files for each property (generally as strings) instead of as a standard FRU blob\n\n\t2) The underlying data is being parsed from a non-standard format at boot, so dumping a data blob wouldn\u0027t work cleanly here.\n\nI\u0027m going to make note of that existing functionality in the design doc I\u0027m polishing up, since it would be useful for anyone with a standard FRU blob in the filesystem instead of individual property files.",
      "parentUuid": "abedbf80_029be694",
      "range": {
        "startLine": 1381,
        "startChar": 0,
        "endLine": 1425,
        "endChar": 0
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0985255_56d86193",
        "filename": "src/fru_device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1425,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-08-16T19:03:07Z",
      "side": 1,
      "message": "IMO, this is an EM reactor, and should be reading from EM config files.  If we need to add a new \"GXP\" type to the types we already have, so be it, but we really need to not invent yet another config file format.",
      "parentUuid": "8ccc75e3_88fae65b",
      "range": {
        "startLine": 1381,
        "startChar": 0,
        "endLine": 1425,
        "endChar": 0
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b282c01_3c973c16",
        "filename": "src/fru_device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1576,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-08-16T18:55:38Z",
      "side": 1,
      "message": "Overall, I really feel like this code belongs in https://github.com/openbmc/phosphor-u-boot-env-mgr\n\nand considering that addManagedFRUDevices takes no dependencies on existing code inside fru-device, that tracks as this not being the right place to put this code.\n\nFru-device ultimately is for reading i2c eeproms and eeprom-like devices.  The fact that it reads one file from the filesystem is an architectural hiccup that because of the tiny amount of code it imposes, we live with.  It is not a good place for putting what amounts to u-boot communication code that is already covered in other places using other mechanisms.",
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce7e9640_1422ef58",
        "filename": "src/fru_device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1577,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-08-16T19:03:07Z",
      "side": 1,
      "message": "nit, I see no \"instead of\" implemented here.  This appears to be in addition to.",
      "range": {
        "startLine": 1577,
        "startChar": 29,
        "endLine": 1577,
        "endChar": 36
      },
      "revId": "8c50d98aa3577b3c0188ab06ef169af6c77f9372",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}