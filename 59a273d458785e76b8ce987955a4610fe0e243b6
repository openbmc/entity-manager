{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1a603847_f97c4e0b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-30T06:54:07Z",
      "side": 1,
      "message": "@alexander.hansen@9elements.com I don\u0027t see a EM schema definition for GPIODeviceDetect. Can you please raise a patch for it?",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "177f92f0_c7309f40",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T16:19:51Z",
      "side": 1,
      "message": "Sure https://gerrit.openbmc.org/c/openbmc/entity-manager/+/80696 üëç",
      "parentUuid": "1a603847_f97c4e0b",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b7726cd_13347d32",
        "filename": "src/gpio-presence/README.md",
        "patchSetId": 24
      },
      "lineNbr": 95,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-29T03:07:58Z",
      "side": 1,
      "message": "This looks redundant as you already have github link on next line.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18ac04a4_c9afaadd",
        "filename": "src/gpio-presence/README.md",
        "patchSetId": 24
      },
      "lineNbr": 95,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b7726cd_13347d32",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e6dcb9e_11e63cb3",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 17,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-30T06:16:40Z",
      "side": 1,
      "message": "Rename to VariantType.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8591aa95_ee7a1a27",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 17,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7e6dcb9e_11e63cb3",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0b500a0_0b5e7128",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 20,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-30T06:16:40Z",
      "side": 1,
      "message": "Rename to ConfigMap",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e6225871_624276ab",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 20,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c0b500a0_0b5e7128",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43db9e13_9fc043bf",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 22,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-30T06:16:40Z",
      "side": 1,
      "message": "Rename to ConfigData",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d4de7249_6d6257a2",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 22,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43db9e13_9fc043bf",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffb0c1ff_c52dc72d",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 32,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-30T06:16:40Z",
      "side": 1,
      "message": "All these checks can be dropped as clang-tidy PR has been merged.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7d7ff6fe_614b9cf0",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 32,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ffb0c1ff_c52dc72d",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81ff93ff_c44ea1af",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 37,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-30T06:16:40Z",
      "side": 1,
      "message": "Better to move this into handleInterfacesAdded as entry debug.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04d4854e_b08ca691",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 37,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "81ff93ff_c44ea1af",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88d9daaa_bffa9f5b",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 41,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-30T06:16:40Z",
      "side": 1,
      "message": "Better to move this to handleInterfacesRemoved as entry debug.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "42568baf_2ded54f1",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 41,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "88d9daaa_bffa9f5b",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd7b6a1e_9d47ee8b",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 49,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-30T06:16:40Z",
      "side": 1,
      "message": "Move all the below logic into a new getConfig API.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3eeb696d_d312f561",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 49,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fd7b6a1e_9d47ee8b",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67cb4a9f_bca8a110",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 74,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-30T06:16:40Z",
      "side": 1,
      "message": "rename mapServiceInterfaces to serviceInterfaceMap",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0eed79b3_f2861190",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 74,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "67cb4a9f_bca8a110",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c44ff92_83559d81",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 86,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-30T06:16:40Z",
      "side": 1,
      "message": "rename to senderRule.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c450472d_555f725b",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 86,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c44ff92_83559d81",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "270d536d_c025d834",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 94,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-30T06:16:40Z",
      "side": 1,
      "message": "Use it directly in line#99 rather than defining another var for this.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ff48350_23c797d5",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 94,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "270d536d_c025d834",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c312cf30_fe3c7e99",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 97,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-30T06:16:40Z",
      "side": 1,
      "message": "rename to addedMatch.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3152e533_50aa2f31",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 97,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c312cf30_fe3c7e99",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "762b3691_f8d357f2",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 98,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-30T06:16:40Z",
      "side": 1,
      "message": "Define a using for sdbusplus::bus::match::rules and use that as its being typed at multiple places.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2d1bf36_bb3a3b82",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 98,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "762b3691_f8d357f2",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e960e140_3dea2f81",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 116,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-30T06:16:40Z",
      "side": 1,
      "message": "Just use it directly on next line rather then defining service var?",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "41cec8b4_cc2e9031",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 116,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e960e140_3dea2f81",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c89add5_3ab99f91",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 122,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-30T06:16:40Z",
      "side": 1,
      "message": "Just e and not e.what(), logging macro can take care of it.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b4107b08_2d305758",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 122,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c89add5_3ab99f91",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9de6f9c_42a117f1",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 132,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-30T06:16:40Z",
      "side": 1,
      "message": "Use it directly in line#135 rather than defining another var for this.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e5cc2fe_b57611c1",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 132,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a9de6f9c_42a117f1",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b554ae7_5d5f38b2",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 135,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-30T06:16:40Z",
      "side": 1,
      "message": "rename to removedMatch.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "416182b9_921282b4",
        "filename": "src/gpio-presence/config_provider.cpp",
        "patchSetId": 24
      },
      "lineNbr": 135,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1b554ae7_5d5f38b2",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cbd7f84_1172402c",
        "filename": "src/gpio-presence/config_provider.hpp",
        "patchSetId": 24
      },
      "lineNbr": 15,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-30T06:16:40Z",
      "side": 1,
      "message": "Rename to AddedCallback as u r already in ConfigProvider so prefix Config seems redundant.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60719594_da2244d1",
        "filename": "src/gpio-presence/config_provider.hpp",
        "patchSetId": 24
      },
      "lineNbr": 15,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4cbd7f84_1172402c",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be9f1073_dd6e72b8",
        "filename": "src/gpio-presence/config_provider.hpp",
        "patchSetId": 24
      },
      "lineNbr": 18,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-30T06:16:40Z",
      "side": 1,
      "message": "Rename to RemovedCallback as u r already in ConfigProvider so prefix Config seems redundant.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "20e92712_31cab567",
        "filename": "src/gpio-presence/config_provider.hpp",
        "patchSetId": 24
      },
      "lineNbr": 18,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "be9f1073_dd6e72b8",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a1144c3_5bcd2a45",
        "filename": "src/gpio-presence/config_provider.hpp",
        "patchSetId": 24
      },
      "lineNbr": 27,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-30T06:16:40Z",
      "side": 1,
      "message": "I would suggest to drop this function and move these 2 callbacks as in_args constructor itself and initialize it in constructor args. You can spawn tasks for add/remove functionalities in constructor itself.\n\nAdd an explicit API for getConfig and you can call it from required place in the caller, that way the API explicitly says its doing a get.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a4b0624_88381fdc",
        "filename": "src/gpio-presence/config_provider.hpp",
        "patchSetId": 24
      },
      "lineNbr": 27,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Can\u0027t do this in constructor since we need to be able to construct the class to test the logic as part of unit testing. If we directly do something as part of the constructor, that\u0027s no longer possible.",
      "parentUuid": "8a1144c3_5bcd2a45",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cafd6e31_855d0b1f",
        "filename": "src/gpio-presence/config_provider.hpp",
        "patchSetId": 24
      },
      "lineNbr": 34,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-30T06:16:40Z",
      "side": 1,
      "message": "nit: Better to change all the APIs to use post notation for return type.\n\nauto handleInterfacesRemoved(...) -\u003e sdbusplus::async::task\u003cvoid\u003e;\n\nRefer to this comment from Patrick\nhttps://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/75329/comment/55565604_7e4b7273/",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65ab035a_74400b28",
        "filename": "src/gpio-presence/config_provider.hpp",
        "patchSetId": 24
      },
      "lineNbr": 34,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Is this your preference or Patrick\u0027s?\n\nI can change the code to match reviewer and code owner preferences but be aware this will introduce an inconsistency with the rest of the EM code-base.\n\nI have yet to see anyone volunteer to migrate the existing code to the postfix return type notation.\n\n@spinler@us.ibm.com what is your preference regarding the return type notation?",
      "parentUuid": "cafd6e31_855d0b1f",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "730a7754_4698dd67",
        "filename": "src/gpio-presence/config_provider.hpp",
        "patchSetId": 24
      },
      "lineNbr": 34,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2025-05-30T16:35:12Z",
      "side": 1,
      "message": "The inconsistency doesn\u0027t really bother me, as using coroutines is a bigger one.\n\nThat being said, since we don\u0027t have a project standard for this yet, maybe it should be left up to the patch set author in repos that aren\u0027t already using this style.\n\n@ed@tanous.net do you care either way?\n\nIt wouldn\u0027t surprise me at all if there will soon be a clang-tidy setting to convert them all to one way or another anyway.",
      "parentUuid": "65ab035a_74400b28",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8f2c6f9_3738c10a",
        "filename": "src/gpio-presence/config_provider.hpp",
        "patchSetId": 24
      },
      "lineNbr": 34,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-30T17:16:06Z",
      "side": 1,
      "message": "\u003e Is this your preference or Patrick\u0027s?\n\nIts my preference as well, as that was my original format. I had changed it to pre function name after feedback from Ed but changed it later back after @ed@tanous.net mentioned \"have a strong opinion either way, we can mix them up without worry\". More details on https://gerrit.openbmc.org/c/openbmc/dbus-sensors/+/75329/comment/55565604_7e4b7273/. Also, i won\u0027t consider this a blocker as it can always be done and discussed on a followup patch.",
      "parentUuid": "730a7754_4698dd67",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ddc6b672_cb3ffc11",
        "filename": "src/gpio-presence/config_provider.hpp",
        "patchSetId": 24
      },
      "lineNbr": 34,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-02T12:37:18Z",
      "side": 1,
      "message": "Changed the code to use the trailing return type.",
      "parentUuid": "c8f2c6f9_3738c10a",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72bd10c5_e97b1737",
        "filename": "src/gpio-presence/config_provider.hpp",
        "patchSetId": 24
      },
      "lineNbr": 38,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-30T06:16:40Z",
      "side": 1,
      "message": "Just interface or interfaceName is fine.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cbe3f771_4db7d56c",
        "filename": "src/gpio-presence/config_provider.hpp",
        "patchSetId": 24
      },
      "lineNbr": 38,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "72bd10c5_e97b1737",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "078a5280_230dff95",
        "filename": "src/gpio-presence/device_presence.cpp",
        "patchSetId": 24
      },
      "lineNbr": 30,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-29T03:07:58Z",
      "side": 1,
      "message": "We should have modeled polarity only in EM, that was more standard way to do this.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6aa00ac2_0d8f8dea",
        "filename": "src/gpio-presence/device_presence.cpp",
        "patchSetId": 24
      },
      "lineNbr": 30,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "I do not understand üòï \nhow else do you want to do this, what should be changed.",
      "parentUuid": "078a5280_230dff95",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59f3f678_31767c90",
        "filename": "src/gpio-presence/device_presence.cpp",
        "patchSetId": 24
      },
      "lineNbr": 30,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-30T17:38:50Z",
      "side": 1,
      "message": "https://gerrit.openbmc.org/c/openbmc/entity-manager/+/80696/comment/07d0e34d_0317d0e7/\n\nSince you are converting value to polarity i was suggesting it if it would be better to model this as polarity in EM?",
      "parentUuid": "6aa00ac2_0d8f8dea",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4fb5f58b_0ff79589",
        "filename": "src/gpio-presence/device_presence.cpp",
        "patchSetId": 24
      },
      "lineNbr": 30,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-31T01:57:03Z",
      "side": 1,
      "message": "Marking this as resolved based on discussion on discord https://discord.com/channels/775381525260664832/1273263354647023616/1305568394510209025 .",
      "parentUuid": "59f3f678_31767c90",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98d13d85_c3711aee",
        "filename": "src/gpio-presence/device_presence.cpp",
        "patchSetId": 24
      },
      "lineNbr": 62,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-29T03:07:58Z",
      "side": 1,
      "message": "This is the path for DevicePresenceInterface, i don\u0027t think u need to expose it outside as public.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16096ddc_ddde8c15",
        "filename": "src/gpio-presence/device_presence.cpp",
        "patchSetId": 24
      },
      "lineNbr": 62,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "```\ntest/test_gpio_presence.cpp\n76:    sdbusplus::message::object_path objPath \u003d c-\u003egetObjPath();\n123:    sdbusplus::message::object_path objPath \u003d c-\u003egetObjPath();\n```\n\nIt\u0027s used for testing the dbus interface, so it needs to be public.",
      "parentUuid": "98d13d85_c3711aee",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "257f61f6_6c1e2494",
        "filename": "src/gpio-presence/device_presence.cpp",
        "patchSetId": 24
      },
      "lineNbr": 62,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-31T01:57:03Z",
      "side": 1,
      "message": "TBH i am not in favor of exposing so much of state outside in every class just for the purpose of Unit testing which can be achieved through other alternatives such as gmock. Now for gmock there could be some opinions as one might not be in favor of defining an interface using virtual functions, which i would support rather than exposing the class state this way.\nI am not going to hold up your PR for this but wanted to share my thoughts on this.",
      "parentUuid": "16096ddc_ddde8c15",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c67b3517_6ab62b8d",
        "filename": "src/gpio-presence/device_presence.cpp",
        "patchSetId": 24
      },
      "lineNbr": 62,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-02T10:24:50Z",
      "side": 1,
      "message": "I\u0027m trying to balance the implementation complexity with the testing requirement.\n\nIf there is some class which is used a lot and part of \u0027common code\u0027 then it will make sense to properly implement the encapsulation and push the complexity into the test code to work around that.\n\nWhich then increases the number of lines needed since the whole mocking and inheritance needed to bypass the encapsulation which was created.\n\nSo i see this as a 3-way tradeoff between\n\n(small code size) - encapsulation - testing\n\nwhere one can choose 2.\n\nIn our case here it\u0027s a small self-contained implementation, so i am not too worried for now.",
      "parentUuid": "257f61f6_6c1e2494",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "064c4949_340c01a1",
        "filename": "src/gpio-presence/device_presence.cpp",
        "patchSetId": 24
      },
      "lineNbr": 102,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-29T03:07:58Z",
      "side": 1,
      "message": "Would this emit removed as well? Did u notice the InterfaceRemoved signal going out?",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1c3e26f5_96606e10",
        "filename": "src/gpio-presence/device_presence.cpp",
        "patchSetId": 24
      },
      "lineNbr": 102,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Good catch. Added the ```emit_removed()``` call.",
      "parentUuid": "064c4949_340c01a1",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c031f3c7_c46fd439",
        "filename": "src/gpio-presence/device_presence.hpp",
        "patchSetId": 24
      },
      "lineNbr": 32,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-29T03:07:58Z",
      "side": 1,
      "message": "rename name to deviceName to make it precise.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dab0d3ba_bac90491",
        "filename": "src/gpio-presence/device_presence.hpp",
        "patchSetId": 24
      },
      "lineNbr": 32,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c031f3c7_c46fd439",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "864121e2_023783f9",
        "filename": "src/gpio-presence/device_presence.hpp",
        "patchSetId": 24
      },
      "lineNbr": 37,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-29T03:07:58Z",
      "side": 1,
      "message": "Make this a static function .cpp file by passing in deviceName.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1afc62c_b694d6a2",
        "filename": "src/gpio-presence/device_presence.hpp",
        "patchSetId": 24
      },
      "lineNbr": 37,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "It\u0027s used in tests to query the dbus interface for a device presence instance. So it cannot be moved to the .cpp file as static function.\n\n```\ntest/test_gpio_presence.cpp\n76:    sdbusplus::message::object_path objPath \u003d c-\u003egetObjPath();\n123:    sdbusplus::message::object_path objPath \u003d c-\u003egetObjPath();\n```",
      "parentUuid": "864121e2_023783f9",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7944e23_ca7ac16f",
        "filename": "src/gpio-presence/device_presence.hpp",
        "patchSetId": 24
      },
      "lineNbr": 40,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-29T03:07:58Z",
      "side": 1,
      "message": "No need to expose this once u bring in all the GPIO state inside DevicePresence.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ead4609e_30618066",
        "filename": "src/gpio-presence/device_presence.hpp",
        "patchSetId": 24
      },
      "lineNbr": 40,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "The function is used in ```GPIOPresenceManager::getPresence```\nThe public functions are used to avoid having all testing go via dbus.",
      "parentUuid": "c7944e23_ca7ac16f",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0ed4401_3ab9f7e8",
        "filename": "src/gpio-presence/device_presence.hpp",
        "patchSetId": 24
      },
      "lineNbr": 44,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-29T03:07:58Z",
      "side": 1,
      "message": "rename to deviceName",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "17b6b4b2_b390347e",
        "filename": "src/gpio-presence/device_presence.hpp",
        "patchSetId": 24
      },
      "lineNbr": 44,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c0ed4401_3ab9f7e8",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ef8f5c9_e3f297b3",
        "filename": "src/gpio-presence/device_presence.hpp",
        "patchSetId": 24
      },
      "lineNbr": 47,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-29T03:07:58Z",
      "side": 1,
      "message": "why do u need 2 maps? Can\u0027t you use value as tuple or a struct of polarity and presence?\n\nAnd this should be private as well.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a9267a43_8e6e983f",
        "filename": "src/gpio-presence/device_presence.hpp",
        "patchSetId": 24
      },
      "lineNbr": 47,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Apologies. I did not abstract the gpio state cache right.\nCreated that cache as a map in the gpio presence manager.\n\nThen the DevicePresence instance can just have a private reference to it.",
      "parentUuid": "6ef8f5c9_e3f297b3",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "836cb62e_c400f062",
        "filename": "src/gpio-presence/gpio_presence_manager.cpp",
        "patchSetId": 24
      },
      "lineNbr": 45,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-29T03:07:58Z",
      "side": 1,
      "message": "Lets drop this API and add these APIs to the ConfigurationProvider constructor itself, so it can be done on line31 itself.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4a3bb77b_8db7c1b6",
        "filename": "src/gpio-presence/gpio_presence_manager.cpp",
        "patchSetId": 24
      },
      "lineNbr": 45,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "```initialize``` goes via the object mapper which may not be present in local unit testing. So i would prefer to avoid that in the constructor.\n\nLet me know if you know of a way to solve this in some other way without over-complicating the test code.",
      "parentUuid": "836cb62e_c400f062",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bfaabd82_204d71fc",
        "filename": "src/gpio-presence/gpio_presence_manager.cpp",
        "patchSetId": 24
      },
      "lineNbr": 124,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-29T03:07:58Z",
      "side": 1,
      "message": "Since ConfigProvider is part of this daemon itself would it be better to drop the normal function and just bind and call the task from the config_provider?",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db1a310d_14f13976",
        "filename": "src/gpio-presence/gpio_presence_manager.cpp",
        "patchSetId": 24
      },
      "lineNbr": 124,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Currently it\u0027s simple like\n```\n      co_await configProvider.initialize(\n          std::bind_front(\u0026GPIOPresenceManager::addConfigHandler, this),\nA\u003e        std::bind_front(\u0026GPIOPresenceManager::removeConfig, this));\n```\n\nand if we were to just spawn from ConfigProvider then the flow will be different between add and remove.",
      "parentUuid": "bfaabd82_204d71fc",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d83f1784_9c35725a",
        "filename": "src/gpio-presence/gpio_presence_manager.cpp",
        "patchSetId": 24
      },
      "lineNbr": 142,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-29T03:07:58Z",
      "side": 1,
      "message": "auto properties \u003d co_await sdbusplus::client::xyz::openbmc_project::configuration::\n                      GPIODeviceDetect\u003c\u003e(ctx) .......path(obj.str).properties; \n                      \n                      \nand then \n\nauto presencePinNames \u003d properties.presence_pin_names\n\nso you can get all properties in one go.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f283d466_f0ace45e",
        "filename": "src/gpio-presence/gpio_presence_manager.cpp",
        "patchSetId": 24
      },
      "lineNbr": 142,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "üëç Amazing shortcut ‚ù§Ô∏è",
      "parentUuid": "d83f1784_9c35725a",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fea376eb_96ffb23e",
        "filename": "src/gpio-presence/gpio_presence_manager.cpp",
        "patchSetId": 24
      },
      "lineNbr": 167,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-29T03:07:58Z",
      "side": 1,
      "message": "This should only delete the DevicePresence which should take care of cleaning the whole flow below for you in DevicePresence class.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "714706c8_684b8752",
        "filename": "src/gpio-presence/gpio_presence_manager.cpp",
        "patchSetId": 24
      },
      "lineNbr": 167,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Since the fdios are owned by presence manager, the DevicePresence class cannot decide if they need to be removed without looking into presence manager.\n\nAnd then looking into the other DevicePresence instances.\n\nTo prevent the DevicePresence class from looking everywhere, i wanted to handle the removal in the presence manager.",
      "parentUuid": "fea376eb_96ffb23e",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7b0e441_cbac2c13",
        "filename": "src/gpio-presence/gpio_presence_manager.hpp",
        "patchSetId": 24
      },
      "lineNbr": 32,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-29T03:07:58Z",
      "side": 1,
      "message": "Why is this a function here? It should be part of DevicePresence?",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38d8214b_8f9a1582",
        "filename": "src/gpio-presence/gpio_presence_manager.hpp",
        "patchSetId": 24
      },
      "lineNbr": 32,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "It\u0027s there to avoid the ```configs``` map being public.\nSince we need to query the presence in testcases.",
      "parentUuid": "d7b0e441_cbac2c13",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "427bdf48_7229b233",
        "filename": "src/gpio-presence/gpio_presence_manager.hpp",
        "patchSetId": 24
      },
      "lineNbr": 36,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-29T03:07:58Z",
      "side": 1,
      "message": "This API can be dropped, please look at my comment in .cpp file.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "68976763_561c19fd",
        "filename": "src/gpio-presence/gpio_presence_manager.hpp",
        "patchSetId": 24
      },
      "lineNbr": 36,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Needed for testing, to separate the logic from the configuration fetching.",
      "parentUuid": "427bdf48_7229b233",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1b10c19_89c25c99",
        "filename": "src/gpio-presence/gpio_presence_manager.hpp",
        "patchSetId": 24
      },
      "lineNbr": 46,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-29T03:07:58Z",
      "side": 1,
      "message": "This should be private and rename to addConfigHandler.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5af40122_51b925d2",
        "filename": "src/gpio-presence/gpio_presence_manager.hpp",
        "patchSetId": 24
      },
      "lineNbr": 46,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c1b10c19_89c25c99",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10cddc95_a91a73e0",
        "filename": "src/gpio-presence/gpio_presence_manager.hpp",
        "patchSetId": 24
      },
      "lineNbr": 59,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-29T03:07:58Z",
      "side": 1,
      "message": "Why is this a function here? It should be part of DevicePresence?",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37de402e_f19d3ea3",
        "filename": "src/gpio-presence/gpio_presence_manager.hpp",
        "patchSetId": 24
      },
      "lineNbr": 59,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "It\u0027s for testing. Since the gpio value is not exclusive to any device presence.",
      "parentUuid": "10cddc95_a91a73e0",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "855007f1_b85edd7b",
        "filename": "src/gpio-presence/gpio_presence_manager.hpp",
        "patchSetId": 24
      },
      "lineNbr": 62,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-29T03:07:58Z",
      "side": 1,
      "message": "GPIO Event handler should be part of DevicePresence?",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9d2b991_38cc391a",
        "filename": "src/gpio-presence/gpio_presence_manager.hpp",
        "patchSetId": 24
      },
      "lineNbr": 62,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "The fdios and gpios are owned by presence manager since they can be shared between multiple DevicePresence instances.\n\nFor example in the design https://github.com/openbmc/docs/blob/master/designs/inventory/gpio-based-hardware-inventory.md\n\nin the example config there are multiple devices sharing gpios.\nThe value of these gpios then tells us which device it is.\n\nBut all of them are configured.",
      "parentUuid": "855007f1_b85edd7b",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "904b23cc_2aaf4129",
        "filename": "src/gpio-presence/gpio_presence_manager.hpp",
        "patchSetId": 24
      },
      "lineNbr": 66,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-29T03:07:58Z",
      "side": 1,
      "message": "You don\u0027t need this map as each DevicePresence should hold its own config.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc9ca6f7_13179b08",
        "filename": "src/gpio-presence/gpio_presence_manager.hpp",
        "patchSetId": 24
      },
      "lineNbr": 66,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "I\u0027m simply using that map to hold the DevicePresence instances. \nNamed it ```configs``` since it represents the Device Presence instances which have been configured through EM.\n\nEach of the DevicePresence instances already holds its own config, in\n```std::map\u003cstd::string, enum GPIO_POLARITY\u003e gpioPolarity;```",
      "parentUuid": "904b23cc_2aaf4129",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07a885fb_a21b9a02",
        "filename": "src/gpio-presence/gpio_presence_manager.hpp",
        "patchSetId": 24
      },
      "lineNbr": 69,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-29T03:07:58Z",
      "side": 1,
      "message": "This should be part of DevicePresence?",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4cd491a_5176f6d4",
        "filename": "src/gpio-presence/gpio_presence_manager.hpp",
        "patchSetId": 24
      },
      "lineNbr": 69,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "The fdios and gpios are owned by presence manager since they can be shared between multiple DevicePresence instances.",
      "parentUuid": "07a885fb_a21b9a02",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eef47a5b_724b7e74",
        "filename": "src/gpio-presence/gpio_presence_manager.hpp",
        "patchSetId": 24
      },
      "lineNbr": 72,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-29T03:07:58Z",
      "side": 1,
      "message": "GPIOLines should be part of DevicePresence rather than Manager?",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3d68450_c298a09f",
        "filename": "src/gpio-presence/gpio_presence_manager.hpp",
        "patchSetId": 24
      },
      "lineNbr": 72,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "The fdios and gpios are owned by presence manager since they can be shared between multiple DevicePresence instances.",
      "parentUuid": "eef47a5b_724b7e74",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "548ce8c9_32ed3ae6",
        "filename": "src/gpio-presence/gpio_presence_manager.hpp",
        "patchSetId": 24
      },
      "lineNbr": 74,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-29T03:07:58Z",
      "side": 1,
      "message": "I don\u0027t think you need a map for DevicePresenceInterface but rather a map for DevicePresence as DevicePresenceInterface is already a var in that class.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9b596f2a_9207cfcb",
        "filename": "src/gpio-presence/gpio_presence_manager.hpp",
        "patchSetId": 24
      },
      "lineNbr": 74,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Yes. Apologies, this var was just leftovers and unused.",
      "parentUuid": "548ce8c9_32ed3ae6",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42ce6b69_c0685067",
        "filename": "src/gpio-presence/main.cpp",
        "patchSetId": 24
      },
      "lineNbr": 21,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-29T03:07:58Z",
      "side": 1,
      "message": "No need of a unqie_ptr just a normal var is good enough here.",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "63c92c20_ea492caa",
        "filename": "src/gpio-presence/main.cpp",
        "patchSetId": 24
      },
      "lineNbr": 21,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "42ce6b69_c0685067",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab8f1cb6_32c6599d",
        "filename": "src/gpio-presence/main.cpp",
        "patchSetId": 24
      },
      "lineNbr": 26,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-29T03:07:58Z",
      "side": 1,
      "message": "Can this be done in the controller constructor instead?",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "286d039d_9386265f",
        "filename": "src/gpio-presence/main.cpp",
        "patchSetId": 24
      },
      "lineNbr": 26,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "No, because the test does not fetch configuration.\nAnd the test needs to construct the GPIOPresenceManager.",
      "parentUuid": "ab8f1cb6_32c6599d",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d81603a_100dcc21",
        "filename": "src/gpio-presence/meson.build",
        "patchSetId": 24
      },
      "lineNbr": 10,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-29T03:07:58Z",
      "side": 1,
      "message": "Do you still need boost after moving to coroutines?",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d4be5a88_02fb7d22",
        "filename": "src/gpio-presence/meson.build",
        "patchSetId": 24
      },
      "lineNbr": 10,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Using the flat_map for fetching configuration.\n\n```\nsrc/gpio-presence/config_provider.cpp\n7:#include \u003cboost/container/flat_map.hpp\u003e\n21:    boost::container::flat_map\u003cstd::string, BasicVariantType\u003e;\n22:using SensorData \u003d boost::container::flat_map\u003cstd::string, SensorBaseConfigMap\u003e;\n```",
      "parentUuid": "6d81603a_100dcc21",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "405e360b_ccc0f372",
        "filename": "src/gpio-presence/meson.build",
        "patchSetId": 24
      },
      "lineNbr": 22,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-05-29T03:07:58Z",
      "side": 1,
      "message": "Do you still need boost after moving to coroutines?",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f7f8095_281c2cd4",
        "filename": "src/gpio-presence/meson.build",
        "patchSetId": 24
      },
      "lineNbr": 22,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-05-30T15:51:45Z",
      "side": 1,
      "message": "Using the flat_map for fetching configuration.\n\n```\nsrc/gpio-presence/config_provider.cpp\n7:#include \u003cboost/container/flat_map.hpp\u003e\n21:    boost::container::flat_map\u003cstd::string, BasicVariantType\u003e;\n22:using SensorData \u003d boost::container::flat_map\u003cstd::string, SensorBaseConfigMap\u003e;\n```",
      "parentUuid": "405e360b_ccc0f372",
      "revId": "59a273d458785e76b8ce987955a4610fe0e243b6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}