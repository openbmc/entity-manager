{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d6f01bf7_5ae20194",
        "filename": "schemas/firmware.json",
        "patchSetId": 27
      },
      "lineNbr": 25,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-23T18:25:11Z",
      "side": 1,
      "message": "\"Bios\" is too general of a type.  Maybe you meant \"SPINorFlash\"?",
      "range": {
        "startLine": 25,
        "startChar": 30,
        "endLine": 25,
        "endChar": 34
      },
      "revId": "e874366747df65d61a480e44cfd55e2e6233e9ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f00c9992_153ad575",
        "filename": "schemas/firmware.json",
        "patchSetId": 27
      },
      "lineNbr": 25,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-24T13:43:53Z",
      "side": 1,
      "message": "Changed as per your comment https://gerrit.openbmc.org/c/openbmc/entity-manager/+/75948/comment/aadd4c06_383a51c5/",
      "parentUuid": "d6f01bf7_5ae20194",
      "range": {
        "startLine": 25,
        "startChar": 30,
        "endLine": 25,
        "endChar": 34
      },
      "revId": "e874366747df65d61a480e44cfd55e2e6233e9ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d41fccf_f52307df",
        "filename": "schemas/firmware.json",
        "patchSetId": 27
      },
      "lineNbr": 52,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-23T18:25:11Z",
      "side": 1,
      "message": "combine these into a single array of structs.",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 52,
        "endChar": 18
      },
      "revId": "e874366747df65d61a480e44cfd55e2e6233e9ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12cec8d8_2d6c6dd6",
        "filename": "schemas/firmware.json",
        "patchSetId": 27
      },
      "lineNbr": 52,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-24T13:43:53Z",
      "side": 1,
      "message": "Won\u0027t that be incompatible with PDI then?\n\nSince the array elements would then each get their own dbus interface with the index suffix. I believe we talked about this on discord already.\n\nhttps://discord.com/channels/775381525260664832/1273263354647023616/1313489525846179901\n\nIf this situation is somehow different, or i misunderstood something, please re-open this comment.",
      "parentUuid": "7d41fccf_f52307df",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 52,
        "endChar": 18
      },
      "revId": "e874366747df65d61a480e44cfd55e2e6233e9ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e333d85b_e570540f",
        "filename": "schemas/firmware.json",
        "patchSetId": 27
      },
      "lineNbr": 52,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-03-21T06:11:26Z",
      "side": 1,
      "message": "\u003e Won\u0027t that be incompatible with PDI then?\n\nThat\u0027s not really a concern for the config files themselves (they don\u0027t directly reference DBUS) If we want to fix the object array behavior to allow PDI, lets fix it in the c++ code itself.",
      "parentUuid": "12cec8d8_2d6c6dd6",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 52,
        "endChar": 18
      },
      "revId": "e874366747df65d61a480e44cfd55e2e6233e9ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84629bbd_b406d1aa",
        "filename": "schemas/firmware.json",
        "patchSetId": 27
      },
      "lineNbr": 52,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-03-24T09:44:03Z",
      "side": 1,
      "message": "\u003e That\u0027s not really a concern for the config files themselves (they don\u0027t directly reference DBUS)\n\nThe config json directly determines how the configuration is exposed on dbus.\n\nSo if i want a schema that\u0027s compatible with PDI, i have to follow a few constraints for that schema.\n\n\u003e If we want to fix the object array behavior to allow PDI, lets fix it in the c++ code itself.\n\nI do not want to create that scope creep now. I just want to create a schema which works under the given constraints. I do not see the problem.\n\nWhy do we have to do some heavy lifting now, if we can just create something that works?\n\nI\u0027m not against fixing/refactoring EM, but that\u0027s out of scope for this patch.",
      "parentUuid": "e333d85b_e570540f",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 52,
        "endChar": 18
      },
      "revId": "e874366747df65d61a480e44cfd55e2e6233e9ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5513a26d_35043bfe",
        "filename": "schemas/firmware.json",
        "patchSetId": 27
      },
      "lineNbr": 52,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-04-02T10:06:20Z",
      "side": 1,
      "message": "I have updated the mux gpio definition into an array of structs and reused existing definitions where possible üëç\n\nLet me know if you have any other change requests üòä",
      "parentUuid": "84629bbd_b406d1aa",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 52,
        "endChar": 18
      },
      "revId": "e874366747df65d61a480e44cfd55e2e6233e9ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "672f0a8e_c1038416",
        "filename": "schemas/firmware.json",
        "patchSetId": 27
      },
      "lineNbr": 56,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-23T18:25:11Z",
      "side": 1,
      "message": "This needs reconciled with the existing ME types in the IPMB subsystem, do they need to be connected in someway to indicated \"this spi controls for this ME\"?",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 56,
        "endChar": 18
      },
      "revId": "e874366747df65d61a480e44cfd55e2e6233e9ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45725840_c56a5d68",
        "filename": "schemas/firmware.json",
        "patchSetId": 27
      },
      "lineNbr": 56,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-24T13:43:53Z",
      "side": 1,
      "message": "Do you have a link?\n\nI grepped for \u0027ipmi\u0027, \u0027ipmb\u0027, \u0027management\u0027 in schemas/ but did not find anything.\nSo i did not find anything to look at there.\n\n\u003e do they need to be connected in someway to indicated \"this spi controls for this ME\"?\n\nI do not see a benefit in connecting them, considering this schema is for fw update. Maybe someone who knows more about the IPMB subsystem will have a use-case and at that point we can update the schema.",
      "parentUuid": "672f0a8e_c1038416",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 56,
        "endChar": 18
      },
      "revId": "e874366747df65d61a480e44cfd55e2e6233e9ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33eb9c43_f0ca5145",
        "filename": "schemas/firmware.json",
        "patchSetId": 27
      },
      "lineNbr": 56,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-03-21T06:11:26Z",
      "side": 1,
      "message": "https://github.com/openbmc/dbus-sensors/blob/f2a2baae26ed85ef2096046f8457e5e0fbb1fb3f/src/ipmb/IpmbSensor.hpp#L96\n\nIpmb implementation\n\nThere\u0027s also an ipmbbridge implementation (search the repo list)",
      "parentUuid": "45725840_c56a5d68",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 56,
        "endChar": 18
      },
      "revId": "e874366747df65d61a480e44cfd55e2e6233e9ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "72343aa7_03c54fd0",
        "filename": "schemas/firmware.json",
        "patchSetId": 27
      },
      "lineNbr": 56,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-03-24T09:44:03Z",
      "side": 1,
      "message": "Removed the HasME property for now, so this should not be a concern anymore.",
      "parentUuid": "33eb9c43_f0ca5145",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 56,
        "endChar": 18
      },
      "revId": "e874366747df65d61a480e44cfd55e2e6233e9ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aadd4c06_383a51c5",
        "filename": "schemas/firmware.json",
        "patchSetId": 27
      },
      "lineNbr": 59,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-23T18:25:11Z",
      "side": 1,
      "message": "Please spell this out\n\nIntelFlashDescriptor\n\nWith that said, this probably needs to be rolled into type.\n\nIntelSpiFlash\n\nvs\n\nSpiFlash \n\nthey can have the same backend, but they need to denote they\u0027re different types.  Side question, HasME and Layout seem very related.  Is there a case we\u0027d mix and match them at all, or can they be the same property?",
      "range": {
        "startLine": 59,
        "startChar": 30,
        "endLine": 59,
        "endChar": 33
      },
      "revId": "e874366747df65d61a480e44cfd55e2e6233e9ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7809c90d_e1973d69",
        "filename": "schemas/firmware.json",
        "patchSetId": 27
      },
      "lineNbr": 59,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-02-24T13:43:53Z",
      "side": 1,
      "message": "Done.\n\n\u003e Side question, HasME and Layout seem very related. Is there a case we\u0027d mix and match them at all, or can they be the same property?\n\nAn answer to this question would probably require some knowledge about Intel Server Architecture.\n\nI don\u0027t see why any permutation of these 2 should not be possible, but i cannot say for sure if they actually exist on some system.",
      "parentUuid": "aadd4c06_383a51c5",
      "range": {
        "startLine": 59,
        "startChar": 30,
        "endLine": 59,
        "endChar": 33
      },
      "revId": "e874366747df65d61a480e44cfd55e2e6233e9ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58db34a2_b1a30627",
        "filename": "schemas/firmware.json",
        "patchSetId": 27
      },
      "lineNbr": 59,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-03-21T06:11:26Z",
      "side": 1,
      "message": "Can you figure that out please?  It seems really odd to make that configurable.",
      "parentUuid": "7809c90d_e1973d69",
      "range": {
        "startLine": 59,
        "startChar": 30,
        "endLine": 59,
        "endChar": 33
      },
      "revId": "e874366747df65d61a480e44cfd55e2e6233e9ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "74ba7963_5060e7f5",
        "filename": "schemas/firmware.json",
        "patchSetId": 27
      },
      "lineNbr": 59,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-03-24T09:44:03Z",
      "side": 1,
      "message": "Removed \u0027HasME\u0027 property, so it should not be a concern anymore.",
      "parentUuid": "58db34a2_b1a30627",
      "range": {
        "startLine": 59,
        "startChar": 30,
        "endLine": 59,
        "endChar": 33
      },
      "revId": "e874366747df65d61a480e44cfd55e2e6233e9ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}