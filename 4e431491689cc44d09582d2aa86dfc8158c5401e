{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e32b72aa_86884568",
        "filename": "src/fru_device/fru_device.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1320,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-10-16T11:52:55Z",
      "side": 1,
      "message": "entity-manager has a power status monitor (see `src/entity_manager/power_status_monitor.cpp`), does it make sense to re-use that instead of fru-device duplicating that code?\n\nThen we can keep the bugs in one file and not have to fix them twice.",
      "revId": "4e431491689cc44d09582d2aa86dfc8158c5401e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d84f62d_af18a0e9",
        "filename": "src/fru_device/fru_device.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1320,
      "author": {
        "id": 1001853
      },
      "writtenOn": "2025-10-21T15:44:41Z",
      "side": 1,
      "message": "I don\u0027t think so, at least not currently.\n\nThe comparisons are not equivalent. In `entity-manager`\u0027s power status monitor (`power_status_monitor.cpp`), the check is:\n\n```\n        powerStatusOn \u003d\n            std::get\u003cstd::string\u003e(findState-\u003esecond).ends_with(\"Running\");\n```\n\nThis means both `TransitioningToRunning` and `Running` are interpreted as power-on states. If we reuse this logic, it will result in double scans during each host power-on â€” one when in `TransitioningToRunning` and another when in `Running` state.\n\nTherefore, it seems safer to keep this logic separate for now. \n\nAlso, see this commit: https://github.com/openbmc/entity-manager/commit/3b13fb4b7f6b3dee5db2966b444d61c11f84153a",
      "parentUuid": "e32b72aa_86884568",
      "revId": "4e431491689cc44d09582d2aa86dfc8158c5401e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}