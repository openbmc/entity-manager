{
  "comments": [
    {
      "key": {
        "uuid": "5ae985e1_7e8b9217",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-06-08T04:44:44Z",
      "side": 1,
      "message": "can you give an explicit part number example here?   Not all PCA family are muxes.",
      "revId": "977ebf82a26379790f119b3686d6a4bdfd421216",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec3dac1e_2ecaa27f",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 6
      },
      "lineNbr": 66,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-06-07T23:52:18Z",
      "side": 1,
      "message": "Do we basically put an IÂ²C topology for all the FRUs that has multiple I2C muxes and each of them will have fixed number of connections? Is this only for like sensors?\n\nWhat if we want to have dynamic connection like a FRU that has multiple slots that connects to more FURs. Will that work?\n\nWith that it is not guarantee that all the FRUs are connected. Those FRUs will be a board itself. Do we just want a mapping to the address/bus that we know... and then look at the actual FRU instead?",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 66,
        "endChar": 27
      },
      "revId": "977ebf82a26379790f119b3686d6a4bdfd421216",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02dc5e1b_4b3bd7af",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 6
      },
      "lineNbr": 66,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-06-08T16:19:55Z",
      "side": 1,
      "message": "For the FRUs, does the Entity Manager just have to keep track of this mapping and update the Slot name on the board/FRU if it is suppose to be connected to another board/FRU.",
      "parentUuid": "ec3dac1e_2ecaa27f",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 66,
        "endChar": 27
      },
      "revId": "977ebf82a26379790f119b3686d6a4bdfd421216",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89278d2d_dddcf9f8",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 6
      },
      "lineNbr": 185,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-06-08T04:44:44Z",
      "side": 1,
      "message": "That part is definitly a input pin controlled mux, with additional enable controls that is beyond the current mux framework that the i2c gpio mux driver uses, but could easily be extended to suppot.\n\nAre you trying to only use one channel of the above device to implement a switch?\n\nMaybe we need to split the two use cases.",
      "revId": "977ebf82a26379790f119b3686d6a4bdfd421216",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c9ad95f_cb71a772",
        "filename": "docs/dynamic_mux.md",
        "patchSetId": 6
      },
      "lineNbr": 231,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-06-08T04:44:44Z",
      "side": 1,
      "message": "I think we need a better statement of what benefits we are getting by not describing the mux to the kernel with a proper i2c mux driver.\n\nIf the only benefit is describing to entity manager what to probe on a given bus then lets clearly state that.",
      "revId": "977ebf82a26379790f119b3686d6a4bdfd421216",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}