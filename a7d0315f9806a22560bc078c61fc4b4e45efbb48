{
  "comments": [
    {
      "key": {
        "uuid": "0ef48a95_5496795f",
        "filename": "test/test_fru-utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-21T20:51:56Z",
      "side": 1,
      "message": "nit: magic number?\n\nmaybe load into a variable first called \"areaIndexOutOfRange\"",
      "range": {
        "startLine": 45,
        "startChar": 62,
        "endLine": 45,
        "endChar": 63
      },
      "revId": "a7d0315f9806a22560bc078c61fc4b4e45efbb48",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca35e3e8_d021d074",
        "filename": "test/test_fru-utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-02-22T20:51:35Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0ef48a95_5496795f",
      "range": {
        "startLine": 45,
        "startChar": 62,
        "endLine": 45,
        "endChar": 63
      },
      "revId": "a7d0315f9806a22560bc078c61fc4b4e45efbb48",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c2c6e420_98b04dc9",
        "filename": "test/test_fru-utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-21T20:51:56Z",
      "side": 1,
      "message": "This doesn\u0027t seem like enough EXPECTS for this condition?  I\u0027d expect at least the 4 cases covered (overlapping both directions, completely covered, and not overlapping at all).",
      "range": {
        "startLine": 54,
        "startChar": 4,
        "endLine": 54,
        "endChar": 70
      },
      "revId": "a7d0315f9806a22560bc078c61fc4b4e45efbb48",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1da07850_6d9ea7bd",
        "filename": "test/test_fru-utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-02-22T20:51:35Z",
      "side": 1,
      "message": "Not overlapping is covered in true case line 30. I will add another 2 cases",
      "parentUuid": "c2c6e420_98b04dc9",
      "range": {
        "startLine": 54,
        "startChar": 4,
        "endLine": 54,
        "endChar": 70
      },
      "revId": "a7d0315f9806a22560bc078c61fc4b4e45efbb48",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ce20606_6587bd2b",
        "filename": "test/test_fru-utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-02-22T23:46:21Z",
      "side": 1,
      "message": "Added 2 more case, completely covered is not possible as we don\u0027t pass boundary for both as we only pass one variable and with len and check every other offset if they fall in this area. As len is not available for everyone at this moment.",
      "parentUuid": "1da07850_6d9ea7bd",
      "range": {
        "startLine": 54,
        "startChar": 4,
        "endLine": 54,
        "endChar": 70
      },
      "revId": "a7d0315f9806a22560bc078c61fc4b4e45efbb48",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ec865dc_77878200",
        "filename": "test/test_fru-utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-23T02:24:46Z",
      "side": 1,
      "message": "I\u0027m not quite following, but if we need to refactor to test all the code paths, we should.",
      "parentUuid": "0ce20606_6587bd2b",
      "range": {
        "startLine": 54,
        "startChar": 4,
        "endLine": 54,
        "endChar": 70
      },
      "revId": "a7d0315f9806a22560bc078c61fc4b4e45efbb48",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}