{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1c5bf535_03e0794c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 71,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-04-16T21:25:02Z",
      "side": 1,
      "message": "This isn\u0027t really a representative test though?  an S8030 has PCIe and NVMe ports, so we\u0027d need to also include all possible hardware that those have.",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 71,
        "endChar": 69
      },
      "revId": "396f767cb74c6c99b35d3ec15845db49c5689308",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa1488a5_36de25f7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-04-16T21:25:02Z",
      "side": 1,
      "message": "Overall, my aversion to this is a fundamental one:  OpenBMC should be building software that is open to addition by both the system manufacturer AND those looking to add new hardware peripheral support to an existing system.  This design goal is stated at the top of the readme: https://github.com/openbmc/entity-manager?tab\u003dreadme-ov-file#goals\n\nCreating private company compatible lists where companies will only allow certain hardware on certain systems defeats some of the spirit of the \"open\" portion of OpenBmc, and means that when new configurations are enabled, they\u0027re only enabled on a subset of platforms.  Our builds should be \"open\" to improvement by anyone, not just the folks that manufacture or contract the board.  FWIW, in this patchset we\u0027re modifying which things are compatible with Tyan motherboards (that are buyable retail).  Who\u0027s the authority that should decide that support list given it\u0027s a commercial board?\n\nYes, there are downstream forks (including those of my employer) where removing all the configs except for a \"supported\" subset makes sense for their release model.  That kind of model is trivial to implement downstream (or even upstream if you wanted) in a meta layer if that\u0027s your goal.  That doesn\u0027t mean that it makes sense for something like OpenBMC, which aims to support firmware in the open.\n\nYes, we could do a better job of making the EM code performant (I\u0027m pretty sure nobody has ever profiled it since it was ported from the python script) and ensuring that we prevent conflicts between real hardware before they happen.  I suspect the former is pretty trivially solvable by optimizing the daemon a little.  The later I suspect is solved by requiring a fru match on manufacturer.",
      "revId": "396f767cb74c6c99b35d3ec15845db49c5689308",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}